[{"path":[]},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement peterdiakumis@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://umccr.github.io/dracarys/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 University Melbourne Centre Cancer Research - Genomics Platform Group Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-16-0-2024-10-08","dir":"Articles","previous_headings":"","what":"dracarys 0.16.0 (2024-10-08)","title":"News","text":"Complete refactor dracarys R6 class system. now Wf super class base Wf_* subclasses. cttsov2: initial support (pr135) cttsov1: major refactor (pr133) umccrise: major refactor, summary report (pr127) switch bump--version bumping (pr139) add summary report MultiQC: add Sash support (pr137) docker: use multi-stage build (pr122) BCL Convert: support 4.2.7 (pr124) better support S3 v0.16.0 - v0.15.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-15-0-2024-08-14","dir":"Articles","previous_headings":"","what":"dracarys 0.15.0 (2024-08-14)","title":"News","text":"v0.15.0 - v0.14.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-14-0-2024-05-13","dir":"Articles","previous_headings":"","what":"dracarys 0.14.0 (2024-05-13)","title":"News","text":"v0.14.0 - v0.13.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-13-0-2024-03-15","dir":"Articles","previous_headings":"","what":"dracarys 0.13.0 (2024-03-15)","title":"News","text":"v0.13.0 - v0.12.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-12-0-2023-12-12","dir":"Articles","previous_headings":"","what":"dracarys 0.12.0 (2023-12-12)","title":"News","text":"v0.12.0 - v0.11.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-11-0-2023-08-22","dir":"Articles","previous_headings":"","what":"dracarys 0.11.0 (2023-08-22)","title":"News","text":"v0.11.0 - v0.10.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-10-0-2023-06-22","dir":"Articles","previous_headings":"","what":"dracarys 0.10.0 (2023-06-22)","title":"News","text":"v0.10.0 - v0.9.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-9-0-2023-05-10","dir":"Articles","previous_headings":"","what":"dracarys 0.9.0 (2023-05-10)","title":"News","text":"v0.9.0 - v0.8.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-8-0-2023-02-24","dir":"Articles","previous_headings":"","what":"dracarys 0.8.0 (2023-02-24)","title":"News","text":"v0.8.0 - v0.7.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-7-0-2023-02-15","dir":"Articles","previous_headings":"","what":"dracarys 0.7.0 (2023-02-15)","title":"News","text":"v0.7.0 - v0.6.0 diff Mostly added use cases based requests curation team related umccrise (CHORD, HRDetect, QC summary), PCGR, MultiQC. umccr_tidy: workhorse handles tidying method dispatch. gds_file_presignedurl PcgrJsonFile PcgrTiersFile UmChordTsvFile UmHrdetectTsvFile UmQcSumFile UmSigsSnvFile MultiqcFile Updated README unified dracarys tidy CLI. Added fun column FILE_REGEX handling method dispatch. GH Actions: Remove linux/arm64 docker since conda pkgs don’t generally ARM64 equivalents. GH Actions: use “miniforge-variant: Mambaforge” (see issue).","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-6-0-2023-01-09","dir":"Articles","previous_headings":"","what":"dracarys 0.6.0 (2023-01-09)","title":"News","text":"v0.6.0 - v0.5.0 diff :wrench: GH Actions: replace ::set-output. add linux/arm64 support. :wrench: R core: replace select .data quotes. bump Roxygen 7.2.1 -> 7.2.2 add {fs}, {httr}, {jose}, {sessioninfo} dependencies. import %||% {rlang} specify fallback values NULL cases. :sparkles: pkgdown: change theme simplex. :whale: Docker: bump mambaforge: 4.12.0-2 -> 22.9.0-2 bump conda-lock: 1.0.5 -> 1.3.0 :computer: CLI: add support tidying outputs UMCCR TSO500 ctDNA workflow, generating HTML file tidy results workflow. :star: Added R functions: tso_tidy tidying outputs UMCCR TSO500 ctDNA workflow. tso_rmd generating HTML file tidy results workflow. dr_gds_download downloading dracarys-related files GDS. gds_files_list listing files GDS via API. gds_file_download gds_file_download_api downloading files GDS via ica binary API (via presigned URLs), respectively. ica_token_validate validating ICA access token valid expired. :x: Removed R functions: TsoCombinedVariantOutputFile: files deemed less info compared output files. dracarys_tidy_multiqc: renamed dracarys_multiqc. mkdir: use fs::create_dir instead. Remove {tibble}, {readr} {ggplot} multi-imports R6, since can get away just importing single function one R6 classes.","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-5-0-2022-09-28","dir":"Articles","previous_headings":"","what":"dracarys 0.5.0 (2022-09-28)","title":"News","text":"v0.5.0 - v0.4.0 diff MultiQC: update column mappings (pr15, pr16). move map separate TSV CLI: add option output format (tsv, parquet, ) (pr18). new contributors: @victorskl","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-4-0-2022-09-12","dir":"Articles","previous_headings":"","what":"dracarys 0.4.0 (2022-09-12)","title":"News","text":"v0.4.0 - v0.3.0 diff :star: support DRAGEN TSO500 ctdna output (pr14). also add Quarto HTML report template","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-3-0-2022-08-28","dir":"Articles","previous_headings":"","what":"dracarys 0.3.0 (2022-08-28)","title":"News","text":"v0.3.0 - v0.2.0 diff :star: MultiQC: support DRAGEN ctdna output (pr13).","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-2-0-2022-07-23","dir":"Articles","previous_headings":"","what":"dracarys 0.2.0 (2022-07-23)","title":"News","text":"v0.2.0 - v0.1.0 diff Add MULTIQC_COLUMNS tibble maps raw metric name cleaner name (pr12). Support MultiQC JSONs (bcbio-wts bcbio-wgs).","code":""},{"path":"https://umccr.github.io/dracarys/articles/NEWS.html","id":"dracarys-0-1-0-2022-07-11","dir":"Articles","previous_headings":"","what":"dracarys 0.1.0 (2022-07-11)","title":"News","text":"Initial release dracarys. Support MultiQC JSON tidying. Add conda, conda-lock, Docker support (pr11). Initially supporting just MultiQC json input (dragen-alignment, dragen-transcriptome, dragen-tumor-normal, dragen-umccrise, bcbio-umccrise).","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://umccr.github.io/dracarys/articles/files.html","id":"workflows","dir":"Articles","previous_headings":"","what":"Workflows","title":"Files Supported","text":"wgs_alignment_qc wts_alignment_qc wts_tumor_only wgs_tumor_normal-germ wgs_tumor_normal-som umccrise oncoanalyser_wgs oncoanalyser_wts oncoanalyser_wgts sash","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"flames","dir":"Articles","previous_headings":"","what":"Flames","title":"Flames","text":"Flames dracarys user stories. D’oh.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"cttso-summary","dir":"Articles","previous_headings":"Flames","what":"ctTSO Summary","title":"Flames","text":"Slack link","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"ffpe-vs--fresh-frozen","dir":"Articles","previous_headings":"Flames","what":"FFPE vs. Fresh Frozen","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"coverage-depth-exploration","dir":"Articles","previous_headings":"Flames","what":"Coverage depth exploration","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"sv-runtime","dir":"Articles","previous_headings":"Flames","what":"SV runtime","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"msi-and-tmb","dir":"Articles","previous_headings":"Flames","what":"MSI and TMB","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"germline-duplication-rate","dir":"Articles","previous_headings":"Flames","what":"Germline duplication rate","title":"Flames","text":"Slack link1. Slack link2.","code":""},{"path":"https://umccr.github.io/dracarys/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Diakumis. Author, maintainer. Victor San Kho Lin. Author, contributor.","code":""},{"path":"https://umccr.github.io/dracarys/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Diakumis P, Lin V (2024). dracarys: Post-processing DRAGEN workflows. R package version 0.16.0, https://umccr.github.io/dracarys/, https://github.com/umccr/dracarys.","code":"@Manual{,   title = {dracarys: Post-processing DRAGEN workflows},   author = {Peter Diakumis and Victor San Kho Lin},   year = {2024},   note = {R package version 0.16.0, https://umccr.github.io/dracarys/},   url = {https://github.com/umccr/dracarys}, }"},{"path":"https://umccr.github.io/dracarys/index.html","id":"fire-dracarys---umccr-workflow-tidying","dir":"","previous_headings":"","what":"Post-processing DRAGEN workflows","title":"Post-processing DRAGEN workflows","text":"Docs: https://umccr.github.io/dracarys/","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"trophy-aim","dir":"","previous_headings":"","what":"🏆 Aim","title":"Post-processing DRAGEN workflows","text":"Given directory results DRAGEN/UMCCR workflow, {dracarys} grab files interest transform ‘tidier’ structures output TSV/Parquet/RDS format downstream ingestion database/data lake. See supported workflows, running examples, CLI options sections .","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"pizza-installation","dir":"","previous_headings":"","what":"🍕 Installation","title":"Post-processing DRAGEN workflows","text":"Linux & MacOS (non-M1) MacOS M1","code":"remotes::install_github(\"umccr/dracarys@vX.X.X\") # for vX.X.X Release/Tag mamba create \\   -n dracarys_env \\   -c umccr -c bioconda -c conda-forge \\   r-dracarys==X.X.X  conda activate dracarys_env CONDA_SUBDIR=osx-64 \\   mamba create \\   -n dracarys_env \\   -c umccr -c bioconda -c conda-forge \\   r-dracarys==X.X.X  conda activate dracarys_env docker pull --platform linux/amd64 ghcr.io/umccr/dracarys:X.X.X"},{"path":"https://umccr.github.io/dracarys/index.html","id":"sparkles-supported-workflows","dir":"","previous_headings":"","what":"✨ Supported Workflows","title":"Post-processing DRAGEN workflows","text":"{dracarys} supports outputs following DRAGEN/UMCCR workflows: See output files workflows supported Supported Files.","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"cyclone-cli","dir":"","previous_headings":"","what":"🌀 CLI","title":"Post-processing DRAGEN workflows","text":"dracarys.R command line interface available convenience. ’re using conda package, dracarys.R command already available inside activated conda environment. ’re using conda package, need export dracarys/inst/cli/ directory PATH order use dracarys.R.","code":"dracarys_cli=$(Rscript -e 'x = system.file(\"cli\", package = \"dracarys\"); cat(x, \"\\n\")' | xargs) export PATH=\"${dracarys_cli}:${PATH}\" dracarys.R --version dracarys.R 0.16.0  #-----------------------------------# dracarys.R --help usage: dracarys.R [-h] [-v] {tidy} ...  🐉 DRAGEN Output Post-Processing 🔥  positional arguments:   {tidy}         sub-command help     tidy         Tidy UMCCR Workflow Outputs  options:   -h, --help     show this help message and exit   -v, --version  show program's version number and exit  #-----------------------------------# #------- Tidy ----------------------# dracarys.R tidy --help usage: dracarys.R tidy [-h] -i IN_DIR -o OUT_DIR -p PREFIX [-t TOKEN]                        [-l LOCAL_DIR] [-f FORMAT] [-n] [-q]  options:   -h, --help            show this help message and exit   -i IN_DIR, --in_dir IN_DIR                         ⛄️ Directory with untidy UMCCR workflow results. Can                         be GDS, S3 or local.   -o OUT_DIR, --out_dir OUT_DIR                         🔥 Directory to output tidy results.   -p PREFIX, --prefix PREFIX                         🎻 Prefix string used for all results.   -t TOKEN, --token TOKEN                         🙈 ICA access token. Default: ICA_ACCESS_TOKEN env var.   -l LOCAL_DIR, --local_dir LOCAL_DIR                         📥 If input is a GDS/S3 directory, download the                         recognisable files to this directory. Default:                         '<out_dir>/dracarys_<gds|s3>_sync'.   -f FORMAT, --format FORMAT                         🎨 Format of output. Default: tsv.   -n, --dryrun          🐫 Dry run - just show files to be tidied.   -q, --quiet           😴 Shush all the logs."},{"path":"https://umccr.github.io/dracarys/index.html","id":"taxi-running","dir":"","previous_headings":"","what":"🚕 Running","title":"Post-processing DRAGEN workflows","text":"{dracarys} takes input (--in_dir) directory results one UMCCR workflows. recursively scan directory supported files, download local directory (--gds_local_dir), parse, transform write tidied versions specified output directory (--out_dir). prefix (--prefix) prepended tidied files. output file format (--format) can tsv, parquet, . get just list supported files within specified input directory, use -n (--dryrun) option. within activated conda environment shell dracarys.R CLI available:","code":"# help(umccr_tidy) in_dir <- \"gds://path/to/subjectX_multiqc_data/\" out_dir <- tempdir() prefix <- \"subjectX\" umccr_tidy(in_dir = in_dir, out_dir = out_dir, prefix = prefix) dracarys.R tidy \\       -i gds://path/to/subjectX_multiqc_data/ \\       -o local_output_dir \\       -p subjectX_prefix docker container run \\   -v $(PWD):/mount1 \\   --platform=linux/amd64 \\   --env \"ICA_ACCESS_TOKEN\" \\   --rm -it \\   ghcr.io/umccr/dracarys:X.X.X \\     dracarys.R tidy \\       -i gds://path/to/subjectX_multiqc_data/ \\       -o /mount1/output_dir \\       -p subjectX_prefix"},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"Contains methods reading displaying contents bcftools_stats.txt file (QUAL section) output running bcftools stats.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"dracarys::File -> BcftoolsStatsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"BcftoolsStatsFile$read() BcftoolsStatsFile$write() BcftoolsStatsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"Reads QUAL section bcftools_stats.txt file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"","code":"BcftoolsStatsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"Writes tidy version bcftools_stats.txt (QUAL section) file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"","code":"BcftoolsStatsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"","code":"BcftoolsStatsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"","code":"if (FALSE) { # \\dontrun{ x <- \"/path/to/bcftools_stats.txt\" d <- BcftoolsStatsFile$new(x) d_parsed <- d$read() d$write(d_parsed, out_dir = tempdir(), prefix = \"sample123\", out_format = \"tsv\") } # }"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":null,"dir":"Reference","previous_headings":"","what":"BclconvertReports R6 Class — BclconvertReports","title":"BclconvertReports R6 Class — BclconvertReports","text":"Reads writes tidy versions files within Reports directory output BCLConvert v4.2.7. See DRAGEN v4.2 documentation https://support-docs.illumina.com/SW/dragen_v42/Content/SW/DRAGEN/OutputFiles.htm.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"BclconvertReports R6 Class — BclconvertReports","text":"path Path Reports directory. contents Tibble file path, basename, size.","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"BclconvertReports R6 Class — BclconvertReports","text":"BclconvertReports$new() BclconvertReports$print() BclconvertReports$read_adaptercyclemetrics() BclconvertReports$read_adaptermetrics() BclconvertReports$read_demultiplexstats() BclconvertReports$read_demultiplextilestats() BclconvertReports$read_qualitymetrics() BclconvertReports$read_qualitytilemetrics() BclconvertReports$read_indexhoppingcounts() BclconvertReports$read_topunknownbarcodes() BclconvertReports$read_fastqlist() BclconvertReports$read() BclconvertReports$write() BclconvertReports$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Create new BclconvertReports object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$new(path = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"path Path Reports directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Print details BclconvertReports directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-adaptercyclemetrics-","dir":"Reference","previous_headings":"","what":"Method read_adaptercyclemetrics()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Read Adapter_Cycle_Metrics.csv file. lane: lane number. sampleid: sample ID sample sheet. indexes: index/index2 sample sheet sample. read: read number. cycle: cycle number. cluster_n: number clusters adapter detected begin precisely cycle. cluster_pct: percentage clusters adapter detected begin precisely cycle.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read_adaptercyclemetrics(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"x (character(1)) Path Adapter_Cycle_Metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-adaptermetrics-","dir":"Reference","previous_headings":"","what":"Method read_adaptermetrics()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Read Adapter_Metrics.csv file. lane: lane number. sampleid: sample ID sample sheet. indexes: index/index2 sample sheet sample. readnum: read number. adapter_bases: total number bases trimmed adapter read. sample_bases: total number bases trimmed read. adapter_bases_pct: percentage bases trimmed adapter read.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read_adaptermetrics(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"x (character(1)) Path Adapter_Metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-demultiplexstats-","dir":"Reference","previous_headings":"","what":"Method read_demultiplexstats()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Read Demultiplex_Stats.csv file. lane: lane number. sampleid: sample ID sample sheet. indexes: index/index2 sample sheet sample. reads_n: total number pass-filter reads mapping sample lane. perfect_idxreads_n: number mapped reads barcodes matching indexes exactly. one_mismatch_idxreads_n: number mapped reads barcodes matched one base mismatched. two_mismatch_idxreads_n: number mapped reads barcodes matched two bases mismatched. reads_pct: percentage pass-filter reads mapping sample lane. perfect_idxreads_pct: percentage mapped reads barcodes matching indexess exactly. one_mismatch_idxreads_pct: percentage mapped reads one mismatch indexes. two_mismatch_idxreads_pct: percentage mapped reads two mismatches indexes.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read_demultiplexstats(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"x (character(1)) Path Demultiplex_Stats.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-demultiplextilestats-","dir":"Reference","previous_headings":"","what":"Method read_demultiplextilestats()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Read Demultiplex_Tile_Stats.csv file. lane: lane number. sampleid: sample ID sample sheet. indexes: index/index2 sample sheet sample. tile: tile number. reads_n: total number pass-filter reads mapping sample lane. reads_pct: percentage pass-filter reads mapping sample lane.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read_demultiplextilestats(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"x (character(1)) Path Demultiplex_Tile_Stats.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-qualitymetrics-","dir":"Reference","previous_headings":"","what":"Method read_qualitymetrics()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Read Quality_Metrics.csv file. lane: lane number. sampleid: sample ID sample sheet. indexes: index/index2 sample sheet sample. readnum: read number (1 2). yield: number bases mapping. yieldq30: number bases quality score >= 30 mapping. qscore_sum: sum quality scores bases mapping. qscore_mean_pf: mean quality score bases mapping. q30_pct: percentage bases quality score >= 30 mapping.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read_qualitymetrics(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"x (character(1)) Path Quality_Metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-qualitytilemetrics-","dir":"Reference","previous_headings":"","what":"Method read_qualitytilemetrics()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Read Quality_Tile_Metrics.csv file. lane: lane number. sampleid: sample ID sample sheet. indexes: index/index2 sample sheet sample. readnum: read number (1 2). tile: tile number. yield: number bases mapping. yieldq30: number bases quality score >= 30 mapping. qscore_sum: sum quality scores bases mapping. qscore_mean_pf: mean quality score bases mapping. q30_pct: percentage bases quality score >= 30 mapping.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read_qualitytilemetrics(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"x (character(1)) Path Quality_Tile_Metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-indexhoppingcounts-","dir":"Reference","previous_headings":"","what":"Method read_indexhoppingcounts()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Read Index_Hopping_Counts.csv file. lane: lane number. sampleid: sample ID sample sheet. indexes: index/index2 sample sheet sample. reads_n: total number pass-filter reads mapping indexes. reads_hopped_pct: percentage hopped pass-filter reads mapping indexes. reads_pct: percentage pass-filter reads mapping indexes.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read_indexhoppingcounts(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"x (character(1)) Path Index_Hopping_Counts.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-topunknownbarcodes-","dir":"Reference","previous_headings":"","what":"Method read_topunknownbarcodes()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Read Top_Unknown_Barcodes.csv file. lane: lane number. indexes: index/index2 unlisted sequence. reads_n: total number pass-filter reads mapping indexes. unknownbcodes_pct: percentage unknown pass-filter reads mapping indexes.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read_topunknownbarcodes(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"x (character(1)) Path Top_Unknown_Barcodes.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-fastqlist-","dir":"Reference","previous_headings":"","what":"Method read_fastqlist()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Read fastq_list.csv file. rgid: read group. rgsm: sample ID. rglb: library. lane: flow cell lane. readnum: read number (1 2). filepath: path FASTQ file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read_fastqlist(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"x (character(1)) Path fastq_list.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Reads contents Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read()"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"BclconvertReports R6 Class — BclconvertReports","text":"list tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Writes tidied contents Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"BclconvertReports R6 Class — BclconvertReports","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"if (FALSE) { # \\dontrun{ p1 <- \"240816_A01052_0220_AHM7VHDSXC/202408195d4f2fc4/Reports\" b <- here::here(\"nogit/bcl_convert\", p1) |>   BclconvertReports$new() b$path b$contents d <- b$read() b$write(d, out_dir = tempdir(), prefix = \"sampleA\", out_format = \"tsv\") } # }"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":null,"dir":"Reference","previous_headings":"","what":"BclconvertReports375 R6 Class — BclconvertReports375","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"Reads writes tidy versions files within Reports directory output BCLConvert v4.2.7. See DRAGEN v4.2 documentation https://support-docs.illumina.com/SW/dragen_v42/Content/SW/DRAGEN/OutputFiles.htm.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"path Path Reports directory. contents Tibble file path, basename, size.","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"BclconvertReports375$new() BclconvertReports375$print() BclconvertReports375$read_adaptermetrics() BclconvertReports375$read_demultiplexstats() BclconvertReports375$read_indexhoppingcounts() BclconvertReports375$read_topunknownbarcodes() BclconvertReports375$read_fastqlist() BclconvertReports375$read() BclconvertReports375$write() BclconvertReports375$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"Create new BclconvertReports375 object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"BclconvertReports375$new(path = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"path Path Reports directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"Print details BclconvertReports375 directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"BclconvertReports375$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"method-read-adaptermetrics-","dir":"Reference","previous_headings":"","what":"Method read_adaptermetrics()","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"Read Adapter_Metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"BclconvertReports375$read_adaptermetrics(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"x (character(1)) Path Adapter_Metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"method-read-demultiplexstats-","dir":"Reference","previous_headings":"","what":"Method read_demultiplexstats()","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"Read Demultiplex_Stats.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"BclconvertReports375$read_demultiplexstats(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"x (character(1)) Path Demultiplex_Stats.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"method-read-indexhoppingcounts-","dir":"Reference","previous_headings":"","what":"Method read_indexhoppingcounts()","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"Read Index_Hopping_Counts.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"BclconvertReports375$read_indexhoppingcounts(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"x (character(1)) Path Index_Hopping_Counts.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"method-read-topunknownbarcodes-","dir":"Reference","previous_headings":"","what":"Method read_topunknownbarcodes()","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"Read Top_Unknown_Barcodes.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"BclconvertReports375$read_topunknownbarcodes(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"x (character(1)) Path Top_Unknown_Barcodes.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"method-read-fastqlist-","dir":"Reference","previous_headings":"","what":"Method read_fastqlist()","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"Read fastq_list.csv file. rgid: read group. rgsm: sample ID. rglb: library. lane: flow cell lane. readnum: read number (1 2). filepath: path FASTQ file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"BclconvertReports375$read_fastqlist(x)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"x (character(1)) Path fastq_list.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"Reads contents Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"BclconvertReports375$read()"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"list tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"Writes tidied contents Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"BclconvertReports375$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"BclconvertReports375$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports375.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BclconvertReports375 R6 Class — BclconvertReports375","text":"","code":"if (FALSE) { # \\dontrun{ p1 <- \"nogit/bcl_convert/WGS_TsqNano/Reports\" b <- here::here(p1) |>   BclconvertReports375$new() b$path b$contents d <- b$read() b$write(d, out_dir = tempdir(), prefix = \"sampleA\", out_format = \"tsv\") } # }"},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"FastqcMetrics R6 Class — FastqcMetricsFile","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"Contains methods reading displaying contents fastqc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"dracarys::File -> FastqcMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"FastqcMetricsFile$read() FastqcMetricsFile$write() FastqcMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"Reads fastqc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"","code":"FastqcMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"tibble. TODO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"Writes tidy version fastqc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"","code":"FastqcMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"","code":"FastqcMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.fastqc_metrics.csv.gz\", package = \"dracarys\") fq <- FastqcMetricsFile$new(x) d <- fq$read() fq$write(d, out_dir = tempdir(), prefix = \"seqc_fq\", out_format = \"tsv\") # fq$plot(d)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":null,"dir":"Reference","previous_headings":"","what":"File R6 Class — File","title":"File R6 Class — File","text":"File base R6 class representing TSV/CSV/JSON output UMCCR workflow. File path, basename, type, can presigned URL.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"File R6 Class — File","text":"path Name full path file. is_url file presigned URL?","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"File R6 Class — File","text":"File$new() File$bname() File$type() File$print() File$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"File R6 Class — File","text":"Create new File object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class — File","text":"","code":"File$new(path = NULL, is_url = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class — File","text":"path Name full path file. is_url file presigned URL?","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-bname-","dir":"Reference","previous_headings":"","what":"Method bname()","title":"File R6 Class — File","text":"Basename file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class — File","text":"","code":"File$bname()"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"File R6 Class — File","text":"Basename file character vector.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-type-","dir":"Reference","previous_headings":"","what":"Method type()","title":"File R6 Class — File","text":"Get type file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class — File","text":"","code":"File$type()"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"File R6 Class — File","text":"String describing specific type dracarys file (NA dracarys-recognised file).","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"File R6 Class — File","text":"Print details File.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class — File","text":"","code":"File$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class — File","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"File R6 Class — File","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class — File","text":"","code":"File$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class — File","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File R6 Class — File","text":"","code":"F1 <- File$new(readr::readr_example(\"mtcars.csv\")) (bname_f1 <- F1$bname()) #> [1] \"mtcars.csv\" (F2 <- File$new(\"https://stratus-gds-aps2/foo/bar/baz.csv?bla\")) #> #--- File ---# #> Path: https://stratus-gds-aps2/foo/bar/baz.csv?bla  #> Basename: baz.csv  #> Type: NA  #> isURL: TRUE"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"Contains methods reading plotting contents fragment_length_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"dracarys::File -> FragmentLengthHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"FragmentLengthHistFile$read() FragmentLengthHistFile$write() FragmentLengthHistFile$plot() FragmentLengthHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"Reads fragment_length_hist.csv file, contains fragment length distribution sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"tibble following columns: sample: name sample fragmentLength: estimated fragment length count: number reads estimated fragment length","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"Writes tidy version fragment_length_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"Plots fragment length distributions given fragment_length_hist.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$plot(d, min_count = 10)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"d Parsed object self$read(). min_count Minimum read count plotted (Default: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"ggplot2 plot containing fragment lengths X axis read counts Y axis sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.fragment_length_hist.csv.gz\", package = \"dracarys\") fl <- FragmentLengthHistFile$new(x) d <- fl$read() # or read(fl) fl$plot(d) # or plot(fl)  fl$write(d |> dplyr::filter(count > 10), out_dir = tempdir(), prefix = \"seqc_fl\")"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"MappingMetricsFile R6 Class — MappingMetricsFile","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"Contains methods reading displaying contents mapping_metrics.csv file output DRAGEN. file contains mapping aligning metrics, like metrics computed Samtools Flagstat command. metrics available aggregate level (input data), per read group level. NOTE: keeping read group level metrics (.e. removing aggregate data). Unless explicitly stated, metrics units reads (.e., terms pairs alignments).","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"dracarys::File -> MappingMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"MappingMetricsFile$read() MappingMetricsFile$write() MappingMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"Reads mapping_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"","code":"MappingMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"tibble one row X metrics per read group.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"Writes tidy version mapping_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"","code":"MappingMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"","code":"MappingMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.mapping_metrics.csv.gz\", package = \"dracarys\") mm <- MappingMetricsFile$new(x) d <- mm$read() # or read(mm) mm$write(d, out_dir = tempdir(), prefix = \"seqc_mm\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiqcFile R6 Class — MultiqcFile","title":"MultiqcFile R6 Class — MultiqcFile","text":"Contains methods reading displaying contents multiqc_data.json file output MultiQC.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"MultiqcFile R6 Class — MultiqcFile","text":"dracarys::File -> MultiqcFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MultiqcFile R6 Class — MultiqcFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MultiqcFile R6 Class — MultiqcFile","text":"MultiqcFile$read() MultiqcFile$write() MultiqcFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"MultiqcFile R6 Class — MultiqcFile","text":"Reads multiqc_data.json file output MultiQC.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiqcFile R6 Class — MultiqcFile","text":"","code":"MultiqcFile$read(plot = FALSE, plot_names = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiqcFile R6 Class — MultiqcFile","text":"plot Return tibble data plots (def: FALSE). plot_names Names plots parse. Use \"everything\" wantz plotz.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MultiqcFile R6 Class — MultiqcFile","text":"tidy tibble. label:","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"MultiqcFile R6 Class — MultiqcFile","text":"Writes tidy version multiqc_data.json file output MultiQC.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiqcFile R6 Class — MultiqcFile","text":"","code":"MultiqcFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiqcFile R6 Class — MultiqcFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', ''). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MultiqcFile R6 Class — MultiqcFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiqcFile R6 Class — MultiqcFile","text":"","code":"MultiqcFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiqcFile R6 Class — MultiqcFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MultiqcFile R6 Class — MultiqcFile","text":"","code":"if (FALSE) { # \\dontrun{ x <- \"/path/to/multiqc_data.json\" mqc <- MultiqcFile$new(x) mqc_parsed <- mqc$read() # or read(mqc) outdir <- \"nogit\" mqc$write(mqc_parsed, out_dir = outdir, prefix = \"SBJ02862_PRJ222112\", out_format = \"tsv\") mqc_plots_parsed <- mqc$read(plot = TRUE, plot_names = \"everything\") mqc$write(mqc_plots_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"rds\") } # }"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PcgrJson R6 Class — PcgrJsonFile","title":"PcgrJson R6 Class — PcgrJsonFile","text":"Contains methods reading displaying contents pcgr.json.gz file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PcgrJson R6 Class — PcgrJsonFile","text":"dracarys::File -> PcgrJsonFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PcgrJson R6 Class — PcgrJsonFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PcgrJson R6 Class — PcgrJsonFile","text":"PcgrJsonFile$read() PcgrJsonFile$write() PcgrJsonFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PcgrJson R6 Class — PcgrJsonFile","text":"Reads pcgr.json.gz file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrJson R6 Class — PcgrJsonFile","text":"","code":"PcgrJsonFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PcgrJson R6 Class — PcgrJsonFile","text":"List tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"PcgrJson R6 Class — PcgrJsonFile","text":"Writes tidy version pcgr.json.gz file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrJson R6 Class — PcgrJsonFile","text":"","code":"PcgrJsonFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrJson R6 Class — PcgrJsonFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PcgrJson R6 Class — PcgrJsonFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrJson R6 Class — PcgrJsonFile","text":"","code":"PcgrJsonFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrJson R6 Class — PcgrJsonFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PcgrJson R6 Class — PcgrJsonFile","text":"","code":"if (FALSE) { # \\dontrun{ x <- \"/path/to/pcgr.json.gz\" d <- PcgrJsonFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") } # }"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PcgrTiersFile R6 Class — PcgrTiersFile","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"Contains methods reading displaying contents pcgr.snvs_indels.tiers.tsv file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"dracarys::File -> PcgrTiersFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"PcgrTiersFile$read() PcgrTiersFile$write() PcgrTiersFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"Reads pcgr.snvs_indels.tiers.tsv file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"","code":"PcgrTiersFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"List tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"Writes tidy version pcgr.snvs_indels.tiers.tsv file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"","code":"PcgrTiersFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"","code":"PcgrTiersFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"","code":"if (FALSE) { # \\dontrun{ x <- \"/path/to/pcgr.snvs_indels.tiers.tsv\" d <- PcgrTiersFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") } # }"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"Contains methods reading contents ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"dracarys::File -> PloidyEstimationMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"PloidyEstimationMetricsFile$read() PloidyEstimationMetricsFile$write() PloidyEstimationMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"Reads ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"Writes tidy version ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.ploidy_estimation_metrics.csv.gz\", package = \"dracarys\") pem <- PloidyEstimationMetricsFile$new(x) d <- pem$read() # or read(pem) pem$write(d, out_dir = tempdir(), prefix = \"seqc_ploidy\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":null,"dir":"Reference","previous_headings":"","what":"ReplayFile R6 Class — ReplayFile","title":"ReplayFile R6 Class — ReplayFile","text":"Contains methods reading contents replay.json file output DRAGEN, contains DRAGEN command line, parameters version specific run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ReplayFile R6 Class — ReplayFile","text":"dracarys::File -> ReplayFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ReplayFile R6 Class — ReplayFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ReplayFile R6 Class — ReplayFile","text":"ReplayFile$read() ReplayFile$write() ReplayFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"ReplayFile R6 Class — ReplayFile","text":"Reads replay.json file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class — ReplayFile","text":"","code":"ReplayFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ReplayFile R6 Class — ReplayFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"ReplayFile R6 Class — ReplayFile","text":"Writes tidy version replay.json file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class — ReplayFile","text":"","code":"ReplayFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReplayFile R6 Class — ReplayFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ReplayFile R6 Class — ReplayFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class — ReplayFile","text":"","code":"ReplayFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReplayFile R6 Class — ReplayFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ReplayFile R6 Class — ReplayFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II-replay.json.gz\", package = \"dracarys\") r <- ReplayFile$new(x) d <- r$read() # or read(r) r$write(d, out_dir = tempdir(), prefix = \"seqc_replay\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"SvMetricsFile R6 Class — SvMetricsFile","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"Contains methods reading displaying contents sv_metrics.csv file output DRAGEN","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"dracarys::File -> SvMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"SvMetricsFile$read() SvMetricsFile$write() SvMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"Reads sv_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"","code":"SvMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"Writes tidy version sv_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"","code":"SvMetricsFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"","code":"SvMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.sv_metrics.csv.gz\", package = \"dracarys\") sv <- SvMetricsFile$new(x) d <- sv$read() sv$write(d, out_dir = tempdir(), prefix = \"seqc_sv\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TimeMetricsFile R6 Class — TimeMetricsFile","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"Contains methods reading contents time_metrics.csv file output DRAGEN, contains breakdown run duration DRAGEN process.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"dracarys::File -> TimeMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"TimeMetricsFile$read() TimeMetricsFile$write() TimeMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"Reads time_metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"","code":"TimeMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"Writes tidy version time_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"","code":"TimeMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"","code":"TimeMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.time_metrics.csv.gz\", package = \"dracarys\") tm <- TimeMetricsFile$new(x) d <- tm$read() # or read(tm) tm$write(d, out_dir = tempdir(), prefix = \"seqc_time\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"Contains methods reading displaying contents trimmer_metrics.csv file output DRAGEN","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"dracarys::File -> TrimmerMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"TrimmerMetricsFile$read() TrimmerMetricsFile$write() TrimmerMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"Reads trimmer_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"","code":"TrimmerMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"Writes tidy version trimmer_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"","code":"TrimmerMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"","code":"TrimmerMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.trimmer_metrics.csv.gz\", package = \"dracarys\") tm <- TrimmerMetricsFile$new(x) d <- tm$read() tm$write(d, out_dir = tempdir(), prefix = \"seqc_tm\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"VCMetricsFile R6 Class — VCMetricsFile","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"Contains methods reading displaying contents vc_metrics.csv file output DRAGEN, contains variant calling metrics.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"dracarys::File -> VCMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"VCMetricsFile$read() VCMetricsFile$write() VCMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"Reads vc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"","code":"VCMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"Writes tidy version vc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"","code":"VCMetricsFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"","code":"VCMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.vc_metrics.csv.gz\", package = \"dracarys\") vm <- VCMetricsFile$new(x) d <- vm$read() # or read(vm) vm$write(d, out_dir = tempdir(), prefix = \"seqc_vc\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":null,"dir":"Reference","previous_headings":"","what":"Workflow — Wf","title":"Workflow — Wf","text":"Workflow base R6 class representing bioinformatic workflow run UMCCR workflow manager. workflow : directory path raw output files (either GDS, S3 local filesystem) subset files interest ingestion tibble full path basename columns set parsers can parse tidy files parser takes path returns tidy tibble list tidy tibbles (tibble nested tibbles)","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Workflow — Wf","text":"path Path directory raw workflow results (GDS, S3, local filesystem). wname Name workflow (e.g. umccrise, sash). filesystem Filesystem path (gds/s3/local). regexes Tibble file regex function parse .","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Workflow — Wf","text":"Wf$new() Wf$print() Wf$list_files() Wf$list_files_filter_relevant() Wf$download_files() Wf$tidy_files() Wf$write() Wf$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Workflow — Wf","text":"Create new Workflow object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow — Wf","text":"","code":"Wf$new(path = NULL, wname = NULL, regexes = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow — Wf","text":"path Path directory raw workflow results. wname Name workflow. regexes Tibble file regex function parse .","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Workflow — Wf","text":"Print details Workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow — Wf","text":"","code":"Wf$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow — Wf","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"method-list-files-","dir":"Reference","previous_headings":"","what":"Method list_files()","title":"Workflow — Wf","text":"List files given path.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow — Wf","text":"","code":"Wf$list_files(   path = self$path,   max_files = 1000,   ica_token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   ... )"},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow — Wf","text":"path Path raw results. max_files Max number files list (gds/s3 ). ica_token ICA access token (def: $ICA_ACCESS_TOKEN env var). ... Passed gds_list_files_dir function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"method-list-files-filter-relevant-","dir":"Reference","previous_headings":"","what":"Method list_files_filter_relevant()","title":"Workflow — Wf","text":"List dracarys files given path","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow — Wf","text":"","code":"Wf$list_files_filter_relevant(   path = self$path,   max_files = 1000,   ica_token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   ... )"},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow — Wf","text":"path Path raw results. max_files Max number files list (gds/s3 ). ica_token ICA access token (def: $ICA_ACCESS_TOKEN env var). ... Passed gds_list_files_filter_relevant s3_list_files_filter_relevant function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"method-download-files-","dir":"Reference","previous_headings":"","what":"Method download_files()","title":"Workflow — Wf","text":"Download files GDS/S3 local filesystem.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow — Wf","text":"","code":"Wf$download_files(   path = self$path,   outdir,   ica_token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   max_files = 1000,   dryrun = FALSE,   recursive = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow — Wf","text":"path Path raw results. outdir Path output directory. ica_token ICA access token (def: $ICA_ACCESS_TOKEN env var). max_files Max number files list. dryrun TRUE, just list files downloaded (download ). recursive files returned recursively specified GDS directory, directly specified GDS directory (def: TRUE via ICA API).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"method-tidy-files-","dir":"Reference","previous_headings":"","what":"Method tidy_files()","title":"Workflow — Wf","text":"Tidy given files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow — Wf","text":"","code":"Wf$tidy_files(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow — Wf","text":"x Tibble localpath file function type parse .","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"Workflow — Wf","text":"Write tidy data.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow — Wf","text":"","code":"Wf$write(x, outdir = NULL, prefix = NULL, format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow — Wf","text":"x Tibble tidy data list-column. outdir Directory path output tidy files. prefix Prefix output files. format Format output files. drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Workflow — Wf","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow — Wf","text":"","code":"Wf$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow — Wf","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Workflow — Wf","text":"","code":"if (FALSE) { # \\dontrun{ regexes <- tibble::tribble(   ~regex, ~fun,   \"-chord\\\\.tsv\\\\.gz$\", \"UmChordTsvFile\",   \"-hrdetect\\\\.tsv\\\\.gz$\", \"UmHrdetectTsvFile\",   \"-snv_2015\\\\.tsv\\\\.gz$\", \"UmSigsSnvFile\",   \"-snv_2020\\\\.tsv\\\\.gz$\", \"UmSigsSnvFile\",   \"-dbs\\\\.tsv\\\\.gz$\", \"UmSigsDbsFile\",   \"-indel\\\\.tsv\\\\.gz$\", \"UmSigsIndelFile\",   \"-qc_summary\\\\.tsv\\\\.gz$\", \"UmQcSumFile\", )  #---- LOCAL ----# p1_local <- \"~/icav1/g/production/analysis_data\" p <- file.path(p1_local, \"SBJ01155/umccrise/202408300c218043/L2101566__L2101565\") um1 <- Wf$new(path = p, wname = \"umccrise\", regexes = regexes) um1$list_files(max_files = 10) um1$list_files_filter_relevant(max_files = 10)  #---- GDS ----# p1_gds <- \"gds://production/analysis_data\" p <- file.path(p1_gds, \"SBJ03043/umccrise/20240830ec648f40/L2300064__L2300063\") outdir <- file.path(sub(\"gds:/\", \"~/icav1/g\", p)) token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") um2 <- Wf$new(path = p, wname = \"umccrise\", regexes = regexes) um2$list_files(max_files = 10) um2$list_files_filter_relevant(ica_token = token, max_files = 500) d <- um2$download_files(   outdir = outdir, ica_token = token,   max_files = 1000, dryrun = T ) d_tidy <- um2$tidy_files(d)  #---- S3 ----# p1_s3 <- \"s3://org.umccr.data.oncoanalyser/analysis_data/SBJ05570/sash/202408275fce06c3\" p2_s3 <- \"L2401304_L2401303/SBJ05570_MDX240299/cancer_report/cancer_report_tables\" p <- file.path(p1_s3, p2_s3) outdir <- sub(\"s3:/\", \"~/s3\", p) um3 <- Wf$new(path = p, wname = \"sash\", regexes = regexes) um3$list_files(max_files = 10) um3$list_files_filter_relevant(max_files = 50) d <- um3$download_files(outdir = outdir, regexes = regexes, max_files = 50, dryrun = F) } # }"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":null,"dir":"Reference","previous_headings":"","what":"Wf_sash R6 Class — Wf_sash","title":"Wf_sash R6 Class — Wf_sash","text":"Reads writes tidy versions files sash workflow","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Wf_sash R6 Class — Wf_sash","text":"dracarys::Wf -> Wf_sash","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Wf_sash R6 Class — Wf_sash","text":"SubjectID SubjectID sample (needed path lookup). SampleID_tumor SampleID tumor sample (needed path lookup).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Wf_sash R6 Class — Wf_sash","text":"dracarys::Wf$download_files() dracarys::Wf$list_files() dracarys::Wf$list_files_filter_relevant() dracarys::Wf$tidy_files() dracarys::Wf$write()","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Wf_sash R6 Class — Wf_sash","text":"Wf_sash$new() Wf_sash$print() Wf_sash$read_pcgr_json() Wf_sash$read_hrd_dragen() Wf_sash$read_hrd_chord() Wf_sash$read_hrd_hrdetect() Wf_sash$read_sigstsv() Wf_sash$read_sigs_snv2015() Wf_sash$read_sigs_snv2020() Wf_sash$read_sigs_dbs() Wf_sash$read_sigs_indel() Wf_sash$read_qcsum() Wf_sash$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Wf_sash R6 Class — Wf_sash","text":"Create new Wf_sash object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$new(path = NULL, SubjectID = NULL, SampleID_tumor = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"path Path directory raw workflow results (GDS, S3, local filesystem). SubjectID SubjectID sample (needed path lookup). SampleID_tumor SampleID tumor sample (needed path lookup).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Wf_sash R6 Class — Wf_sash","text":"Print details Workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-read-pcgr-json-","dir":"Reference","previous_headings":"","what":"Method read_pcgr_json()","title":"Wf_sash R6 Class — Wf_sash","text":"Read pcgr.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$read_pcgr_json(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-read-hrd-dragen-","dir":"Reference","previous_headings":"","what":"Method read_hrd_dragen()","title":"Wf_sash R6 Class — Wf_sash","text":"Read dragen.tsv.gz cancer report hrd file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$read_hrd_dragen(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-read-hrd-chord-","dir":"Reference","previous_headings":"","what":"Method read_hrd_chord()","title":"Wf_sash R6 Class — Wf_sash","text":"Read chord.tsv.gz cancer report hrd file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$read_hrd_chord(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-read-hrd-hrdetect-","dir":"Reference","previous_headings":"","what":"Method read_hrd_hrdetect()","title":"Wf_sash R6 Class — Wf_sash","text":"Read hrdetect.tsv.gz cancer report hrd file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$read_hrd_hrdetect(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-read-sigstsv-","dir":"Reference","previous_headings":"","what":"Method read_sigstsv()","title":"Wf_sash R6 Class — Wf_sash","text":"Read signature cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$read_sigstsv(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-read-sigs-snv-","dir":"Reference","previous_headings":"","what":"Method read_sigs_snv2015()","title":"Wf_sash R6 Class — Wf_sash","text":"Read snv_2015.tsv.gz sigs cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$read_sigs_snv2015(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-read-sigs-snv--1","dir":"Reference","previous_headings":"","what":"Method read_sigs_snv2020()","title":"Wf_sash R6 Class — Wf_sash","text":"Read snv_2020.tsv.gz sigs cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$read_sigs_snv2020(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-read-sigs-dbs-","dir":"Reference","previous_headings":"","what":"Method read_sigs_dbs()","title":"Wf_sash R6 Class — Wf_sash","text":"Read dbs.tsv.gz sigs cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$read_sigs_dbs(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-read-sigs-indel-","dir":"Reference","previous_headings":"","what":"Method read_sigs_indel()","title":"Wf_sash R6 Class — Wf_sash","text":"Read indel.tsv.gz sigs cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$read_sigs_indel(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-read-qcsum-","dir":"Reference","previous_headings":"","what":"Method read_qcsum()","title":"Wf_sash R6 Class — Wf_sash","text":"Read qc_summary.tsv.gz cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$read_qcsum(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Wf_sash R6 Class — Wf_sash","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"Wf_sash$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_sash R6 Class — Wf_sash","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wf_sash R6 Class — Wf_sash","text":"","code":"if (FALSE) { # \\dontrun{  #---- Local ----# p1 <- \"~/s3/org.umccr.data.oncoanalyser/analysis_data/SBJ05571/sash\" p2 <- \"202408270b93455e/L2401308_L2401307\" p <- normalizePath(file.path(p1, p2)) SubjectID <- \"SBJ05571\" SampleID_tumor <- \"MDX240307\" prefix <- glue(\"{SubjectID}__{SampleID_tumor}\") s1 <- Wf_sash$new(path = p, SubjectID = SubjectID, SampleID_tumor = SampleID_tumor) s1$list_files(max_files = 20) s1$list_files_filter_relevant(max_files = 300) d <- s1$download_files(max_files = 1000, dryrun = F) d_tidy <- s1$tidy_files(d) d_write <- s1$write(   d_tidy,   outdir = file.path(p, \"dracarys_tidy\"),   prefix = glue(\"{SubjectID}_{SampleID_tumor}\"),   format = \"tsv\" )  #---- S3 ----# p1 <- \"s3://org.umccr.data.oncoanalyser/analysis_data/SBJ05571/sash\" p2 <- \"202408270b93455e/L2401308_L2401307\" p <- file.path(p1, p2) SubjectID <- \"SBJ05571\" SampleID_tumor <- \"MDX240307\" prefix <- glue(\"{SubjectID}__{SampleID_tumor}\") s1 <- Wf_sash$new(path = p, SubjectID = SubjectID, SampleID_tumor = SampleID_tumor) s1$list_files(max_files = 20) s1$list_files_filter_relevant() outdir <- sub(\"s3:/\", \"~/s3\", p) d <- s1$download_files(outdir = outdir, max_files = 1000, dryrun = F) d_tidy <- s1$tidy_files(d) d_write <- s1$write(   d_tidy,   outdir = file.path(p, \"dracarys_tidy\"),   prefix = glue(\"{SubjectID}__{SampleID_tumor}\"),   format = \"tsv\" ) } # }"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash_download_tidy_write.html","id":null,"dir":"Reference","previous_headings":"","what":"sash Download Tidy and Write — Wf_sash_download_tidy_write","title":"sash Download Tidy and Write — Wf_sash_download_tidy_write","text":"Downloads files sash workflow writes tidy format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash_download_tidy_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sash Download Tidy and Write — Wf_sash_download_tidy_write","text":"","code":"Wf_sash_download_tidy_write(   path,   SubjectID,   SampleID_tumor,   outdir,   format = \"rds\",   max_files = 1000,   ica_token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   dryrun = FALSE )"},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash_download_tidy_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sash Download Tidy and Write — Wf_sash_download_tidy_write","text":"path Path directory raw workflow results (GDS, S3, local filesystem). SubjectID SubjectID sample (needed path lookup). SampleID_tumor SampleID tumor sample (needed path lookup). outdir Path output directory. format Format output files. max_files Max number files list. ica_token ICA access token (def: $ICA_ACCESS_TOKEN env var). dryrun TRUE, just list files downloaded (download ).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash_download_tidy_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sash Download Tidy and Write — Wf_sash_download_tidy_write","text":"List element tidy tibble sash file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_sash_download_tidy_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sash Download Tidy and Write — Wf_sash_download_tidy_write","text":"","code":"if (FALSE) { # \\dontrun{ SubjectID <- \"SBJ03043\" SampleID_tumor <- \"PRJ230004\" p1_gds <- glue(\"gds://production/analysis_data/{SubjectID}/umccrise\") p <- file.path(p1_gds, \"20240830ec648f40/L2300064__L2300063\") outdir <- file.path(sub(\"gds:/\", \"~/icav1/g\", p)) token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") d <- Wf_sash_download_tidy_write(   path = p, SubjectID = SubjectID, SampleID_tumor = SampleID_tumor,   outdir = outdir,   dryrun = F ) } # }"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Reads writes tidy versions files tso_ctdna_tumor_only workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"dracarys::Wf -> Wf_tso_ctdna_tumor_only","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"prefix SampleID_LibraryID prefix tumor sample (needed path lookup).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"dracarys::Wf$download_files() dracarys::Wf$list_files() dracarys::Wf$list_files_filter_relevant() dracarys::Wf$tidy_files() dracarys::Wf$write()","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Wf_tso_ctdna_tumor_only$new() Wf_tso_ctdna_tumor_only$print() Wf_tso_ctdna_tumor_only$read_sar() Wf_tso_ctdna_tumor_only$read_tmbt() Wf_tso_ctdna_tumor_only$read_acfc() Wf_tso_ctdna_tumor_only$read_msv() Wf_tso_ctdna_tumor_only$read_msvg() Wf_tso_ctdna_tumor_only$read_cvo() Wf_tso_ctdna_tumor_only$read_cnv() Wf_tso_ctdna_tumor_only$read_flh() Wf_tso_ctdna_tumor_only$read_trc() Wf_tso_ctdna_tumor_only$read_tmb() Wf_tso_ctdna_tumor_only$read_msi() Wf_tso_ctdna_tumor_only$read_fus() Wf_tso_ctdna_tumor_only$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Create new Wf_tso_ctdna_tumor_only object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$new(path = NULL, prefix = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"path Path directory raw workflow results (GDS, S3, local filesystem). prefix SampleID_LibraryID prefix tumor sample (needed path lookup).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Print details Workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-sar-","dir":"Reference","previous_headings":"","what":"Method read_sar()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read SampleAnalysisResults.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_sar(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-tmbt-","dir":"Reference","previous_headings":"","what":"Method read_tmbt()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read TMB_Trace.tsv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_tmbt(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-acfc-","dir":"Reference","previous_headings":"","what":"Method read_acfc()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read AlignCollapseFusionCaller_metrics.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_acfc(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-msv-","dir":"Reference","previous_headings":"","what":"Method read_msv()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read MergedSmallVariants.vcf.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_msv(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-msvg-","dir":"Reference","previous_headings":"","what":"Method read_msvg()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read MergedSmallVariants.genome.vcf.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_msvg(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-cvo-","dir":"Reference","previous_headings":"","what":"Method read_cvo()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read CombinedVariantOutput.tsv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_cvo(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-cnv-","dir":"Reference","previous_headings":"","what":"Method read_cnv()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read CopyNumberVariants.vcf.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_cnv(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-flh-","dir":"Reference","previous_headings":"","what":"Method read_flh()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read fragment_length_hist.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_flh(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-trc-","dir":"Reference","previous_headings":"","what":"Method read_trc()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read TargetRegionCoverage.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_trc(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-tmb-","dir":"Reference","previous_headings":"","what":"Method read_tmb()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read tmb.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_tmb(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-msi-","dir":"Reference","previous_headings":"","what":"Method read_msi()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read msi.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_msi(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-read-fus-","dir":"Reference","previous_headings":"","what":"Method read_fus()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"Read Fusions.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$read_fus(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"Wf_tso_ctdna_tumor_only$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wf_tso_ctdna_tumor_only R6 Class — Wf_tso_ctdna_tumor_only","text":"","code":"if (FALSE) { # \\dontrun{  #---- Local ----# p <- file.path(   \"~/icav1/g/production/analysis_data/SBJ04651/tso_ctdna_tumor_only\",   \"20240223d1951163/L2400183\" ) prefix <- \"PRJ230876_L2400183\" t1 <- Wf_tso_ctdna_tumor_only$new(path = p, prefix = prefix) t1$list_files(max_files = 20) t1$list_files_filter_relevant(max_files = 300) d <- t1$download_files(max_files = 100, dryrun = F) d_tidy <- t1$tidy_files(d) d_write <- t1$write(   d_tidy,   outdir = file.path(p, \"dracarys_tidy\"),   prefix = prefix,   format = \"tsv\" )  #---- GDS ----# p <- file.path(   \"gds://production/analysis_data/SBJ05563/tso_ctdna_tumor_only\",   \"20240914d41300cd/L2401388/Results\" ) prefix <- \"PRJ241446_L2401388\" outdir <- file.path(sub(\"gds:/\", \"~/icav1/g\", p)) token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") t2 <- Wf_tso_ctdna_tumor_only$new(path = p, prefix = prefix) t2$list_files(max_files = 100, ica_token = token) t2$list_files_filter_relevant(max_files = 100, ica_token = token) d <- t2$download_files(   outdir = outdir, ica_token = token,   max_files = 100, dryrun = F ) d_tidy <- t2$tidy_files(d) d_write <- t2$write(   d_tidy,   outdir = file.path(outdir, \"dracarys_tidy\"),   prefix = prefix,   format = \"tsv\" ) } # }"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":null,"dir":"Reference","previous_headings":"","what":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Reads writes tidy versions files tso_ctdna_tumor_only_v2 workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"dracarys::Wf -> Wf_tso_ctdna_tumor_only_v2","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"prefix LibraryID prefix tumor sample (needed path lookup).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"dracarys::Wf$download_files() dracarys::Wf$list_files() dracarys::Wf$list_files_filter_relevant() dracarys::Wf$tidy_files() dracarys::Wf$write()","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Wf_tso_ctdna_tumor_only_v2$new() Wf_tso_ctdna_tumor_only_v2$print() Wf_tso_ctdna_tumor_only_v2$read_sar() Wf_tso_ctdna_tumor_only_v2$read_tmbt() Wf_tso_ctdna_tumor_only_v2$read_cvo() Wf_tso_ctdna_tumor_only_v2$read_cnv() Wf_tso_ctdna_tumor_only_v2$read_cvgrepe() Wf_tso_ctdna_tumor_only_v2$read_cvgrepg() Wf_tso_ctdna_tumor_only_v2$read_hardfilt() Wf_tso_ctdna_tumor_only_v2$read_msi() Wf_tso_ctdna_tumor_only_v2$read_fus() Wf_tso_ctdna_tumor_only_v2$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Create new Wf_tso_ctdna_tumor_only_v2 object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$new(path = NULL, prefix = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"path Path directory raw workflow results (S3 local filesystem). prefix LibraryID prefix tumor sample (needed path lookup).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Print details Workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-read-sar-","dir":"Reference","previous_headings":"","what":"Method read_sar()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Read SampleAnalysisResults.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$read_sar(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-read-tmbt-","dir":"Reference","previous_headings":"","what":"Method read_tmbt()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Read TMB_Trace.tsv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$read_tmbt(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-read-cvo-","dir":"Reference","previous_headings":"","what":"Method read_cvo()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Read CombinedVariantOutput.tsv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$read_cvo(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-read-cnv-","dir":"Reference","previous_headings":"","what":"Method read_cnv()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Read cnv.vcf file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$read_cnv(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-read-cvgrepe-","dir":"Reference","previous_headings":"","what":"Method read_cvgrepe()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Read exon_cov_report.tsv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$read_cvgrepe(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-read-cvgrepg-","dir":"Reference","previous_headings":"","what":"Method read_cvgrepg()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Read gene_cov_report.tsv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$read_cvgrepg(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-read-hardfilt-","dir":"Reference","previous_headings":"","what":"Method read_hardfilt()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Read hard-filtered.vcf file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$read_hardfilt(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-read-msi-","dir":"Reference","previous_headings":"","what":"Method read_msi()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Read microsat_output.json file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$read_msi(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-read-fus-","dir":"Reference","previous_headings":"","what":"Method read_fus()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"Read Fusions.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$read_fus(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"Wf_tso_ctdna_tumor_only_v2$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_tso_ctdna_tumor_only_v2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wf_tso_ctdna_tumor_only_v2 R6 Class — Wf_tso_ctdna_tumor_only_v2","text":"","code":"if (FALSE) { # \\dontrun{  #---- Local ----# p <- file.path(   \"~/s3/pipeline-prod-cache-503977275616-ap-southeast-2/byob-icav2/production\",   \"analysis/cttsov2/20240915ff0295ed\" ) prefix <- \"L2401290\" t1 <- Wf_tso_ctdna_tumor_only_v2$new(path = p, prefix = prefix) t1$list_files(max_files = 100) t1$list_files_filter_relevant(max_files = 300) d <- t1$download_files(max_files = 100, dryrun = F) d_tidy <- t1$tidy_files(d) d_write <- t1$write(   d_tidy,   outdir = file.path(p, \"dracarys_tidy\"),   prefix = prefix,   format = \"tsv\" )  #---- S3 ----# p <- file.path(   \"s3://pipeline-prod-cache-503977275616-ap-southeast-2/byob-icav2/production\",   \"analysis/cttsov2/20240915ff0295ed\" ) prefix <- \"L2401290\" outdir <- sub(\"s3:/\", \"~/s3\", p) t2 <- Wf_tso_ctdna_tumor_only_v2$new(path = p, prefix = prefix) t2$list_files(max_files = 500) t2$list_files_filter_relevant(max_files = 500) d <- t2$download_files(   outdir = outdir,   max_files = 500,   dryrun = F ) d_tidy <- t2$tidy_files(d) d_write <- t2$write(   d_tidy,   outdir = file.path(outdir, \"dracarys_tidy\"),   prefix = prefix,   format = \"tsv\" ) } # }"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":null,"dir":"Reference","previous_headings":"","what":"Wf_umccrise R6 Class — Wf_umccrise","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Reads writes tidy versions files umccrise workflow","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"dracarys::Wf -> Wf_umccrise","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"SubjectID SubjectID sample (needed path lookup). SampleID_tumor SampleID tumor sample (needed path lookup).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"dracarys::Wf$download_files() dracarys::Wf$list_files() dracarys::Wf$list_files_filter_relevant() dracarys::Wf$tidy_files() dracarys::Wf$write()","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Wf_umccrise$new() Wf_umccrise$print() Wf_umccrise$read_pcgr_json() Wf_umccrise$read_hrd_chord() Wf_umccrise$read_hrd_hrdetect() Wf_umccrise$read_sigstsv() Wf_umccrise$read_sigs_snv2015() Wf_umccrise$read_sigs_snv2020() Wf_umccrise$read_sigs_dbs() Wf_umccrise$read_sigs_indel() Wf_umccrise$read_qcsum() Wf_umccrise$read_conpairmultiqc() Wf_umccrise$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Create new Wf_umccrise object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$new(path = NULL, SubjectID = NULL, SampleID_tumor = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"path Path directory raw workflow results (GDS, S3, local filesystem). SubjectID SubjectID sample (needed path lookup). SampleID_tumor SampleID tumor sample (needed path lookup).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Print details Workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-read-pcgr-json-","dir":"Reference","previous_headings":"","what":"Method read_pcgr_json()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Read pcgr.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$read_pcgr_json(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-read-hrd-chord-","dir":"Reference","previous_headings":"","what":"Method read_hrd_chord()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Read chord.tsv.gz cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$read_hrd_chord(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-read-hrd-hrdetect-","dir":"Reference","previous_headings":"","what":"Method read_hrd_hrdetect()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Read hrdetect.tsv.gz cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$read_hrd_hrdetect(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-read-sigstsv-","dir":"Reference","previous_headings":"","what":"Method read_sigstsv()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Read signature cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$read_sigstsv(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-read-sigs-snv-","dir":"Reference","previous_headings":"","what":"Method read_sigs_snv2015()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Read snv_2015.tsv.gz sigs cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$read_sigs_snv2015(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-read-sigs-snv--1","dir":"Reference","previous_headings":"","what":"Method read_sigs_snv2020()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Read snv_2020.tsv.gz sigs cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$read_sigs_snv2020(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-read-sigs-dbs-","dir":"Reference","previous_headings":"","what":"Method read_sigs_dbs()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Read dbs.tsv.gz sigs cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$read_sigs_dbs(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-read-sigs-indel-","dir":"Reference","previous_headings":"","what":"Method read_sigs_indel()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Read indel.tsv.gz sigs cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$read_sigs_indel(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-read-qcsum-","dir":"Reference","previous_headings":"","what":"Method read_qcsum()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Read qc_summary.tsv.gz cancer report file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$read_qcsum(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-read-conpairmultiqc-","dir":"Reference","previous_headings":"","what":"Method read_conpairmultiqc()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"Read multiqc_conpair.txt file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$read_conpairmultiqc(x)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"Wf_umccrise$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wf_umccrise R6 Class — Wf_umccrise","text":"","code":"if (FALSE) { # \\dontrun{  #---- LOCAL ----# SubjectID <- \"SBJ03043\" SampleID_tumor <- \"PRJ230004\" prefix <- glue(\"{SubjectID}__{SampleID_tumor}\") p1_local <- \"~/icav1/g/production/analysis_data\" p <- file.path(p1_local, \"SBJ03043/umccrise/20240830ec648f40/L2300064__L2300063\") um1 <- Wf_umccrise$new(path = p, SubjectID = SubjectID, SampleID_tumor = SampleID_tumor) um1$list_files(max_files = 10) um1$list_files_filter_relevant() d <- um1$download_files(max_files = 1000, dryrun = F) d_tidy <- um1$tidy_files(d) d_write <- um1$write(   d_tidy,   outdir = file.path(p, \"dracarys_tidy\"),   prefix = glue(\"{SubjectID}__{SampleID_tumor}\"),   format = \"tsv\" )  #---- GDS ----# SubjectID <- \"SBJ03043\" SampleID_tumor <- \"PRJ230004\" prefix <- glue(\"{SubjectID}__{SampleID_tumor}\") p1_gds <- \"gds://production/analysis_data\" p <- file.path(p1_gds, \"SBJ03043/umccrise/20240830ec648f40/L2300064__L2300063\") outdir <- file.path(sub(\"gds:/\", \"~/icav1/g\", p)) token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") um2 <- Wf_umccrise$new(path = p, SubjectID = SubjectID, SampleID_tumor = SampleID_tumor) um2$list_files(max_files = 8) um2$list_files_filter_relevant(ica_token = token, max_files = 500) d <- um2$download_files(   outdir = outdir, ica_token = token,   max_files = 1000, dryrun = F ) d_tidy <- um2$tidy_files(d) d_write <- um2$write(   d_tidy,   outdir = file.path(outdir, \"dracarys_tidy\"),   prefix = glue(\"{SubjectID}__{SampleID_tumor}\"),   format = \"tsv\" ) } # }"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise_download_tidy_write.html","id":null,"dir":"Reference","previous_headings":"","what":"umccrise Download Tidy and Write — Wf_umccrise_download_tidy_write","title":"umccrise Download Tidy and Write — Wf_umccrise_download_tidy_write","text":"Downloads files umccrise workflow writes tidy format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise_download_tidy_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"umccrise Download Tidy and Write — Wf_umccrise_download_tidy_write","text":"","code":"Wf_umccrise_download_tidy_write(   path,   SubjectID,   SampleID_tumor,   outdir,   format = \"rds\",   max_files = 1000,   ica_token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   dryrun = FALSE )"},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise_download_tidy_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"umccrise Download Tidy and Write — Wf_umccrise_download_tidy_write","text":"path Path directory raw workflow results (GDS, S3, local filesystem). SubjectID SubjectID sample (needed path lookup). SampleID_tumor SampleID tumor sample (needed path lookup). outdir Path output directory. format Format output files. max_files Max number files list. ica_token ICA access token (def: $ICA_ACCESS_TOKEN env var). dryrun TRUE, just list files downloaded (download ).","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise_download_tidy_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"umccrise Download Tidy and Write — Wf_umccrise_download_tidy_write","text":"List element tidy tibble umccrise file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/Wf_umccrise_download_tidy_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"umccrise Download Tidy and Write — Wf_umccrise_download_tidy_write","text":"","code":"if (FALSE) { # \\dontrun{ SubjectID <- \"SBJ03043\" SampleID_tumor <- \"PRJ230004\" p1_gds <- glue(\"gds://production/analysis_data/{SubjectID}/umccrise\") p <- file.path(p1_gds, \"20240830ec648f40/L2300064__L2300063\") outdir <- file.path(sub(\"gds:/\", \"~/icav1/g\", p)) token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") d <- Wf_umccrise_download_tidy_write(   path = p, SubjectID = SubjectID, SampleID_tumor = SampleID_tumor,   outdir = outdir,   dryrun = F ) } # }"},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":null,"dir":"Reference","previous_headings":"","what":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"Contains methods reading displaying contents wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN. file contains estimated coverage contigs, autosomal estimated coverage.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"dracarys::File -> WgsContigMeanCovFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"WgsContigMeanCovFile$read() WgsContigMeanCovFile$write() WgsContigMeanCovFile$plot() WgsContigMeanCovFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"Reads wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"","code":"WgsContigMeanCovFile$read(keep_alt = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"keep_alt Keep ALT + Mito chromosomes?","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"tibble following columns: label: file label. chrom: contig name. n_bases: number bases aligned contig (excludes bases duplicate marked reads, reads MAPQ=0, clipped bases). coverage: col2 / contig length","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"Writes tidy version wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"","code":"WgsContigMeanCovFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"Plots wgs_contig_mean_cov_<phenotype>.csv files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"","code":"WgsContigMeanCovFile$plot(d, top_alt_n = 15)"},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"d Parsed object self$read(). top_alt_n Number top covered alt contigs plot per phenotype.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"ggplot2 object chromosomes X axis, coverage Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"","code":"WgsContigMeanCovFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_contig_mean_cov_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_contig_mean_cov_tumor.csv.gz\", package = \"dracarys\") cc1 <- WgsContigMeanCovFile$new(x1) cc2 <- WgsContigMeanCovFile$new(x2) d1 <- cc1$read() d2 <- cc2$read() cc1$write(d1, out_dir = tempdir(), prefix = \"seqc_n\", out_format = \"tsv\") cc2$write(d2, out_dir = tempdir(), prefix = \"seqc_t\", out_format = \"tsv\")  cc1$plot(d1)  cc2$plot(d2)"},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"Contains methods reading displaying contents wgs_coverage_metrics_<phenotype>.csv file output DRAGEN. file contains read depth coverage metrics.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"dracarys::File -> WgsCoverageMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"WgsCoverageMetricsFile$read() WgsCoverageMetricsFile$write() WgsCoverageMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"Reads wgs_coverage_metrics_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"","code":"WgsCoverageMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"Writes tidy version wgs_coverage_metrics_<phenotype>.csv file output DRAGEN","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"","code":"WgsCoverageMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"","code":"WgsCoverageMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_coverage_metrics_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_coverage_metrics_tumor.csv.gz\", package = \"dracarys\") cm1 <- WgsCoverageMetricsFile$new(x1) cm2 <- WgsCoverageMetricsFile$new(x2) d1 <- read(cm1) d2 <- read(cm2) cm1$write(d1, out_dir = tempdir(), prefix = \"seqc_n\", out_format = \"tsv\") cm2$write(d2, out_dir = tempdir(), prefix = \"seqc_t\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"WgsFineHistFile R6 Class — WgsFineHistFile","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"Contains methods reading displaying contents wgs_fine_hist_<phenotype>.csv file output DRAGEN. file contains two columns: Depth Overall. value Depth column ranges 0 1000+ Overall column indicates number loci covered corresponding depth.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"dracarys::File -> WgsFineHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"WgsFineHistFile$read() WgsFineHistFile$write() WgsFineHistFile$plot() WgsFineHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"Reads wgs_fine_hist_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"","code":"WgsFineHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"tibble following columns: depth number loci given depth","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"Writes tidy version wgs_fine_hist_<phenotype>.csv file output DRAGEN","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"","code":"WgsFineHistFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"Plots wgs_fine_hist_<phenotype>.csv files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"","code":"WgsFineHistFile$plot(d, x_lim = c(0, 300))"},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"d Parsed object self$read(). x_lim X axis range plot.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"ggplot2 object depth coverage X axis, number loci depth Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"","code":"WgsFineHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_fine_hist_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_fine_hist_tumor.csv.gz\", package = \"dracarys\") ch1 <- WgsFineHistFile$new(x1) ch2 <- WgsFineHistFile$new(x2) d1 <- read(ch1) d2 <- read(ch2) ch1$plot(d1)  ch2$plot(d2)  ch1$write(d1, out_dir = tempdir(), prefix = \"seqc_n\", out_format = \"tsv\") ch2$write(d2, out_dir = tempdir(), prefix = \"seqc_t\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"WgsHistFile R6 Class — WgsHistFile","title":"WgsHistFile R6 Class — WgsHistFile","text":"Contains methods reading displaying contents wgs_hist.csv file output DRAGEN","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"WgsHistFile R6 Class — WgsHistFile","text":"dracarys::File -> WgsHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"WgsHistFile R6 Class — WgsHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"WgsHistFile R6 Class — WgsHistFile","text":"WgsHistFile$read() WgsHistFile$write() WgsHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"WgsHistFile R6 Class — WgsHistFile","text":"Reads wgs_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsHistFile R6 Class — WgsHistFile","text":"","code":"WgsHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsHistFile R6 Class — WgsHistFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"WgsHistFile R6 Class — WgsHistFile","text":"Writes tidy version wgs_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsHistFile R6 Class — WgsHistFile","text":"","code":"WgsHistFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsHistFile R6 Class — WgsHistFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"WgsHistFile R6 Class — WgsHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsHistFile R6 Class — WgsHistFile","text":"","code":"WgsHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsHistFile R6 Class — WgsHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WgsHistFile R6 Class — WgsHistFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.wgs_hist.csv.gz\", package = \"dracarys\") h <- WgsHistFile$new(x) d <- h$read() h$write(d, out_dir = tempdir(), prefix = \"seqc_sv\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse VCF with bcftools — bcftools_parse_vcf","title":"Parse VCF with bcftools — bcftools_parse_vcf","text":"Parse VCF bcftools. Uses bcftools hood heavy lifting field splitting, converts parsed character vector tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse VCF with bcftools — bcftools_parse_vcf","text":"","code":"bcftools_parse_vcf(vcf, only_pass = TRUE, alias = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse VCF with bcftools — bcftools_parse_vcf","text":"vcf VCF one samples. only_pass Keep PASS variants (def: TRUE). alias Substitute sample names S1/S2/... alias (def: TRUE).","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse VCF with bcftools — bcftools_parse_vcf","text":"tibble main, FORMAT, INFO fields detected VCF header columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse VCF with bcftools — bcftools_parse_vcf","text":"VCFs 0 variants, returns tibble 0 rows proper number columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","title":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","text":"Parses VCF regions bcftools. VCF subset written temporary file local filesystem, parsed tibble object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","text":"","code":"bcftools_parse_vcf_regions(vcf, r, only_pass = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","text":"vcf Path VCF. Can S3, http local. presigned URL, need also concatenate VCF index 'vcf_url##idx##vcfi_url'. r Character vector regions subset (e.g. c('chr1:123-456', 'chr2:789-1000')) only_pass Keep PASS variants (def: TRUE).","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","text":"tibble main, FORMAT, INFO fields detected VCF header columns, regions specified r ().","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","text":"","code":"if (FALSE) { # \\dontrun{ vcf_local <- here::here(\"MergedSmallVariants.vcf.gz\") r <- c(\"chr1:115256529-115256529\", \"chr2:29443613-29443613\") bcftools_parse_vcf_regions(vcf_local, r) } # }"},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Print current timestamp for logging — date_log","title":"Print current timestamp for logging — date_log","text":"Print current timestamp logging","code":""},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print current timestamp for logging — date_log","text":"","code":"date_log()"},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print current timestamp for logging — date_log","text":"Current timestamp character.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate dracarys Function — dr_func_eval","title":"Evaluate dracarys Function — dr_func_eval","text":"somewhat hack getting function evaluate based lookup vector. function found, returns NULL.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate dracarys Function — dr_func_eval","text":"","code":"dr_func_eval(f, v = NULL, envir = parent.frame())"},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate dracarys Function — dr_func_eval","text":"f Name function evaluate. v Character vector strings evaluating functions. default, points functions DR_FILE_REGEX dracarys tibble. envir environment evaluate function e.g. use self using inside R6 classes.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate dracarys Function — dr_func_eval","text":"Evaluated function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate dracarys Function — dr_func_eval","text":"","code":"mean_1_to_10 <- dr_func_eval(\"mean\", v = c(\"mean\", \"sd\"))(1:10)"},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys GDS Download — dr_gds_download","title":"dracarys GDS Download — dr_gds_download","text":"Download GDS files can processed dracarys.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dracarys GDS Download — dr_gds_download","text":"","code":"dr_gds_download(   gdsdir,   outdir,   token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   pattern = NULL,   page_size = 100,   dryrun = FALSE,   regexes = DR_FILE_REGEX,   recursive = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dracarys GDS Download — dr_gds_download","text":"gdsdir Full path GDS directory. outdir Local output directory. token ICA access token (def: $ICA_ACCESS_TOKEN env var). pattern Pattern filter returned file type tibble. page_size Page size (def: 10 via ICA API). dryrun TRUE, just list files downloaded (download ). regexes Tibble regex function name (see example). recursive files returned recursively specified GDS directory, directly specified GDS directory (def: TRUE via ICA API).","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dracarys GDS Download — dr_gds_download","text":"","code":"if (FALSE) { # \\dontrun{ gdsdir <- \"gds://production/analysis_data/SBJ01155/umccrise/202408300c218043/L2101566__L2101565\" outdir <- sub(\"gds:/\", \"~/icav1/g\", gdsdir) regexes <- tibble::tribble(   ~regex, ~fun,   \"multiqc_data\\\\.json$\", \"MultiqcJsonFile\",   \"-somatic\\\\.pcgr\\\\.json\\\\.gz$\", \"pcgrjson\" ) dr_gds_download(gdsdir = gdsdir, outdir = outdir, regexes = regexes, dryrun = T) } # }"},{"path":"https://umccr.github.io/dracarys/reference/dr_output_format_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Output Format is Valid — dr_output_format_valid","title":"Output Format is Valid — dr_output_format_valid","text":"Checks specified output format valid.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_output_format_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output Format is Valid — dr_output_format_valid","text":"","code":"dr_output_format_valid(x)"},{"path":"https://umccr.github.io/dracarys/reference/dr_output_format_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output Format is Valid — dr_output_format_valid","text":"x Output format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_s3_download.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys S3 Download — dr_s3_download","title":"dracarys S3 Download — dr_s3_download","text":"Download S3 files can processed dracarys.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_s3_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dracarys S3 Download — dr_s3_download","text":"","code":"dr_s3_download(   s3dir,   outdir,   max_objects = 100,   pattern = NULL,   regexes = DR_FILE_REGEX,   dryrun = FALSE )"},{"path":"https://umccr.github.io/dracarys/reference/dr_s3_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dracarys S3 Download — dr_s3_download","text":"s3dir S3 directory. outdir Path output directory. max_objects Maximum objects returned. pattern Pattern filter returned file type tibble. regexes Tibble regex function name. dryrun TRUE, just list files downloaded (download ).","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_s3_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dracarys S3 Download — dr_s3_download","text":"","code":"if (FALSE) { # \\dontrun{ p1 <- \"s3://org.umccr.data.oncoanalyser/analysis_data/SBJ05373/sash\" p2 <- \"20240707becde493/L2401018_L2401017/SBJ05373_MDX240220\" s3dir <- file.path(p1, p2) regexes <- tibble::tribble(   ~regex, ~fun,   \"multiqc_data\\\\.json$\", \"MultiqcJsonFile\",   \"pcgr.*\\\\.json\\\\.gz$\", \"pcgrjson\" ) outdir <- sub(\"s3:/\", \"~/s3\", s3dir) dr_s3_download(s3dir = s3dir, outdir = outdir, max_objects = 500, regexes = regexes, dryrun = F) } # }"},{"path":"https://umccr.github.io/dracarys/reference/dracarys-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys: Post-processing DRAGEN workflows — dracarys-package","title":"dracarys: Post-processing DRAGEN workflows — dracarys-package","text":"Post-processing DRAGEN workflows.","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/dracarys-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dracarys: Post-processing DRAGEN workflows — dracarys-package","text":"Maintainer: Peter Diakumis peterdiakumis@gmail.com (ORCID) Authors: Victor San Kho Lin (ORCID) [contributor]","code":""},{"path":"https://umccr.github.io/dracarys/reference/dtw_Wf_tso_ctdna_tumor_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Wf_tso_ctdna_tumor_only Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only","title":"Wf_tso_ctdna_tumor_only Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only","text":"Downloads files tso_ctdna_tumor_only workflow writes tidy format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dtw_Wf_tso_ctdna_tumor_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only","text":"","code":"dtw_Wf_tso_ctdna_tumor_only(   path,   prefix,   outdir,   outdir_tidy = file.path(outdir, \"dracarys_tidy\"),   format = \"rds\",   max_files = 1000,   ica_token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   dryrun = FALSE )"},{"path":"https://umccr.github.io/dracarys/reference/dtw_Wf_tso_ctdna_tumor_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only","text":"path Path directory raw workflow results (GDS, S3, local filesystem). prefix SubjectID_LibraryID prefix sample (needed path lookup). outdir Path output directory raw files. outdir_tidy Path output directory tidy files. format Format output files. max_files Max number files list. ica_token ICA access token (def: $ICA_ACCESS_TOKEN env var). dryrun TRUE, just list files downloaded (download ).","code":""},{"path":"https://umccr.github.io/dracarys/reference/dtw_Wf_tso_ctdna_tumor_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wf_tso_ctdna_tumor_only Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only","text":"Tibble tidy tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dtw_Wf_tso_ctdna_tumor_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wf_tso_ctdna_tumor_only Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only","text":"","code":"if (FALSE) { # \\dontrun{ p <- file.path(   \"gds://production/analysis_data/SBJ05563/tso_ctdna_tumor_only\",   \"20240914d41300cd/L2401388/Results\" ) prefix <- \"PRJ241446_L2401388\" outdir <- file.path(sub(\"gds:/\", \"~/icav1/g\", p)) token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") d <- dtw_Wf_tso_ctdna_tumor_only(   path = p, prefix = prefix, outdir = outdir,   format = \"tsv\",   dryrun = F ) } # }"},{"path":"https://umccr.github.io/dracarys/reference/dtw_Wf_tso_ctdna_tumor_only_v2.html","id":null,"dir":"Reference","previous_headings":"","what":"Wf_tso_ctdna_tumor_only_v2 Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only_v2","title":"Wf_tso_ctdna_tumor_only_v2 Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only_v2","text":"Downloads files tso_ctdna_tumor_only_v2 workflow writes tidy format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dtw_Wf_tso_ctdna_tumor_only_v2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wf_tso_ctdna_tumor_only_v2 Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only_v2","text":"","code":"dtw_Wf_tso_ctdna_tumor_only_v2(   path,   prefix,   outdir,   outdir_tidy = file.path(outdir, \"dracarys_tidy\"),   format = \"rds\",   max_files = 1000,   dryrun = FALSE )"},{"path":"https://umccr.github.io/dracarys/reference/dtw_Wf_tso_ctdna_tumor_only_v2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wf_tso_ctdna_tumor_only_v2 Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only_v2","text":"path Path directory raw workflow results (S3 local filesystem). prefix LibraryID prefix sample (needed path lookup). outdir Path output directory raw files. outdir_tidy Path output directory tidy files. format Format output files. max_files Max number files list. dryrun TRUE, just list files downloaded (download ).","code":""},{"path":"https://umccr.github.io/dracarys/reference/dtw_Wf_tso_ctdna_tumor_only_v2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wf_tso_ctdna_tumor_only_v2 Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only_v2","text":"Tibble tidy tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dtw_Wf_tso_ctdna_tumor_only_v2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wf_tso_ctdna_tumor_only_v2 Download Tidy and Write — dtw_Wf_tso_ctdna_tumor_only_v2","text":"","code":"if (FALSE) { # \\dontrun{ p <- file.path(   \"s3://pipeline-prod-cache-503977275616-ap-southeast-2/byob-icav2/production\",   \"analysis/cttsov2/20240915ff0295ed\" ) prefix <- \"L2401290\" outdir <- sub(\"s3:/\", \"~/s3\", p) d <- dtw_Wf_tso_ctdna_tumor_only_v2(   path = p, prefix = prefix, outdir = outdir,   format = \"tsv\",   dryrun = F ) } # }"},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Empty Tibble Given Column Names — empty_tbl","title":"Create Empty Tibble Given Column Names — empty_tbl","text":"https://stackoverflow.com//62535671/2169986. Useful handling edge cases empty data.","code":""},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Empty Tibble Given Column Names — empty_tbl","text":"","code":"empty_tbl(cnames, ctypes = readr::cols(.default = \"c\"))"},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Empty Tibble Given Column Names — empty_tbl","text":"cnames Character vector column names use. ctypes Character vector column types corresponding cnames.","code":""},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Empty Tibble Given Column Names — empty_tbl","text":"tibble 0 rows given column names.","code":""},{"path":"https://umccr.github.io/dracarys/reference/file_regex_getter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dracarys DR_FILE_REGEX — file_regex_getter","title":"Get dracarys DR_FILE_REGEX — file_regex_getter","text":"Get dracarys DR_FILE_REGEX","code":""},{"path":"https://umccr.github.io/dracarys/reference/file_regex_getter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dracarys DR_FILE_REGEX — file_regex_getter","text":"","code":"file_regex_getter()"},{"path":"https://umccr.github.io/dracarys/reference/file_regex_getter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dracarys DR_FILE_REGEX — file_regex_getter","text":"DR_FILE_REGEX R tibble object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Download via API — gds_file_download_api","title":"GDS File Download via API — gds_file_download_api","text":"GDS File Download via API","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Download via API — gds_file_download_api","text":"","code":"gds_file_download_api(gds_fileid, out_file, token)"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Download via API — gds_file_download_api","text":"gds_fileid GDS file ID. out_file Path output file. token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GDS File Download via API — gds_file_download_api","text":"","code":"if (FALSE) { # \\dontrun{ gds_fileid <- \"fil.f9aa2ba7af0c4330095d08dadd2e16b0\" out <- tempfile() token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") } # }"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_cli.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Download via CLI — gds_file_download_cli","title":"GDS File Download via CLI — gds_file_download_cli","text":"GDS File Download via CLI","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_cli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Download via CLI — gds_file_download_cli","text":"","code":"gds_file_download_cli(gds, out, token = Sys.getenv(\"ICA_ACCESS_TOKEN\"))"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_cli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Download via CLI — gds_file_download_cli","text":"gds Full path GDS file. Path output file. token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Presigned URL — gds_file_presignedurl","title":"GDS File Presigned URL — gds_file_presignedurl","text":"Returns presigned URL given GDS file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Presigned URL — gds_file_presignedurl","text":"","code":"gds_file_presignedurl(gds_fileid, token)"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Presigned URL — gds_file_presignedurl","text":"gds_fileid GDS file ID. token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GDS File Presigned URL — gds_file_presignedurl","text":"Presigned URL valid.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"List FASTQs In GDS Directory — gds_files_list_fastq","title":"List FASTQs In GDS Directory — gds_files_list_fastq","text":"List FASTQs GDS Directory","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List FASTQs In GDS Directory — gds_files_list_fastq","text":"","code":"gds_files_list_fastq(gdsdir, token, include_url = FALSE, page_size = 100)"},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_fastq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List FASTQs In GDS Directory — gds_files_list_fastq","text":"gdsdir GDS directory. token ICA access token. include_url Include presigned URLs files within GDS directory. page_size Page size.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_fastq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List FASTQs In GDS Directory — gds_files_list_fastq","text":"tibble type, bname, size, file_id, path, presigned URL.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_fastq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List FASTQs In GDS Directory — gds_files_list_fastq","text":"","code":"if (FALSE) { # \\dontrun{ prim <- \"gds://production/primary_data\" run <- \"240719_A00130_0323_BHMCYHDSXC/202407205bad380d/BiModal_BM-5L\" gdsdir <- file.path(prim, run) token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") include_url <- F page_size <- 100 gds_files_list_fastq(gdsdir, token, include_url, page_size) } # }"},{"path":"https://umccr.github.io/dracarys/reference/gds_list_files_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"List Files in ICAv1 GDS Directory — gds_list_files_dir","title":"List Files in ICAv1 GDS Directory — gds_list_files_dir","text":"Lists files GDS directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_list_files_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Files in ICAv1 GDS Directory — gds_list_files_dir","text":"","code":"gds_list_files_dir(   gdsdir,   token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   page_size = NULL,   include_url = FALSE,   no_recurse = TRUE,   page_token = NULL,   recursive = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/gds_list_files_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Files in ICAv1 GDS Directory — gds_list_files_dir","text":"gdsdir Full path GDS directory. token ICA access token (def: $ICA_ACCESS_TOKEN env var). page_size Page size (def: 10 via ICA API). include_url Include presigned URLs files within GDS directory (def: FALSE via ICA API). no_recurse recurse file list .e. just give first <page_size> items without recursing list using <page_token>. page_token Page token (def: NULL). Used internally recursion. recursive files returned recursively specified GDS directory, directly specified GDS directory (def: TRUE via ICA API).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_list_files_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Files in ICAv1 GDS Directory — gds_list_files_dir","text":"tibble file ID, basename, size, last modified timestamp, full GDS path, presigned URL requested.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_list_files_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Files in ICAv1 GDS Directory — gds_list_files_dir","text":"","code":"if (FALSE) { # \\dontrun{ gdsdir <- file.path(   \"gds://production/analysis_data/SBJ00699/umccrise\",   \"202203277dcf8562/L2200352__L2100146/SBJ00699__MDX220105/coverage\" ) token <- ica_token_validate() page_size <- 11 include_url <- F page_token <- NULL no_recurse <- TRUE recursive <- NULL gds_list_files_dir(gdsdir, token, page_size, include_url, no_recurse, page_token, recursive) } # }"},{"path":"https://umccr.github.io/dracarys/reference/gds_list_files_filter_relevant.html","id":null,"dir":"Reference","previous_headings":"","what":"List Relevant Files In ICAv1 GDS Directory — gds_list_files_filter_relevant","title":"List Relevant Files In ICAv1 GDS Directory — gds_list_files_filter_relevant","text":"Lists relevant files GDS directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_list_files_filter_relevant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Relevant Files In ICAv1 GDS Directory — gds_list_files_filter_relevant","text":"","code":"gds_list_files_filter_relevant(   gdsdir,   pattern = NULL,   regexes = DR_FILE_REGEX,   token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   page_size = 100,   include_url = FALSE,   no_recurse = TRUE,   page_token = NULL,   recursive = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/gds_list_files_filter_relevant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Relevant Files In ICAv1 GDS Directory — gds_list_files_filter_relevant","text":"gdsdir Full path GDS directory. pattern Pattern filter returned file type tibble. regexes Tibble regex function name (see example). token ICA access token (def: $ICA_ACCESS_TOKEN env var). page_size Page size (def: 10 via ICA API). include_url Include presigned URLs files within GDS directory (def: FALSE via ICA API). no_recurse recurse file list .e. just give first <page_size> items without recursing list using <page_token>. page_token Page token (def: NULL). Used internally recursion. recursive files returned recursively specified GDS directory, directly specified GDS directory (def: TRUE via ICA API).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_list_files_filter_relevant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Relevant Files In ICAv1 GDS Directory — gds_list_files_filter_relevant","text":"tibble file type, basename, size, last modified timestamp, file_id, full path, presigned URL requested.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_list_files_filter_relevant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Relevant Files In ICAv1 GDS Directory — gds_list_files_filter_relevant","text":"","code":"if (FALSE) { # \\dontrun{ regexes <- tibble::tibble(regex = \"multiqc_data\\\\.json$\", fun = \"MultiqcJsonFile\") gdsdir <- \"gds://production/analysis_data/SBJ01155/umccrise/202408300c218043/L2101566__L2101565\" gds_list_files_filter_relevant(gdsdir) } # }"},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List GDS Volumes — gds_volumes_list","title":"List GDS Volumes — gds_volumes_list","text":"Lists GDS volumes accessible provided ICA token.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List GDS Volumes — gds_volumes_list","text":"","code":"gds_volumes_list(token, page_size = 10)"},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List GDS Volumes — gds_volumes_list","text":"token ICA access token (def: $ICA_ACCESS_TOKEN env var). page_size Page size (def: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List GDS Volumes — gds_volumes_list","text":"tibble vol name vol id.","code":""},{"path":"https://umccr.github.io/dracarys/reference/grep_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Grep File Pattern — grep_file","title":"Grep File Pattern — grep_file","text":"Grep File Pattern","code":""},{"path":"https://umccr.github.io/dracarys/reference/grep_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grep File Pattern — grep_file","text":"","code":"grep_file(path = \".\", regexp)"},{"path":"https://umccr.github.io/dracarys/reference/grep_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grep File Pattern — grep_file","text":"path Path look file. regexp regular expression (e.g. .csv$) passed grep() filter paths.","code":""},{"path":"https://umccr.github.io/dracarys/reference/grep_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grep File Pattern — grep_file","text":"path file empty string match found.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate ICA access token — ica_token_validate","title":"Validate ICA access token — ica_token_validate","text":"Validates ICA access token parsing checking expiration date.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate ICA access token — ica_token_validate","text":"","code":"ica_token_validate(token = Sys.getenv(\"ICA_ACCESS_TOKEN\"))"},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate ICA access token — ica_token_validate","text":"token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate ICA access token — ica_token_validate","text":"Returns token valid, else errors .","code":""},{"path":"https://umccr.github.io/dracarys/reference/local_list_files_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"List Files in Local Directory — local_list_files_dir","title":"List Files in Local Directory — local_list_files_dir","text":"Lists files local directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/local_list_files_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Files in Local Directory — local_list_files_dir","text":"","code":"local_list_files_dir(localdir, max_files = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/local_list_files_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Files in Local Directory — local_list_files_dir","text":"localdir Path local directory. max_files Max files returned.","code":""},{"path":"https://umccr.github.io/dracarys/reference/local_list_files_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Files in Local Directory — local_list_files_dir","text":"tibble file basename, size, last modification timestamp full path.","code":""},{"path":"https://umccr.github.io/dracarys/reference/local_list_files_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Files in Local Directory — local_list_files_dir","text":"","code":"localdir <- system.file(\"R\", package = \"dracarys\") x <- local_list_files_dir(localdir)"},{"path":"https://umccr.github.io/dracarys/reference/local_list_files_filter_relevant.html","id":null,"dir":"Reference","previous_headings":"","what":"List Relevant Files In Local Directory — local_list_files_filter_relevant","title":"List Relevant Files In Local Directory — local_list_files_filter_relevant","text":"Lists relevant files local directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/local_list_files_filter_relevant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Relevant Files In Local Directory — local_list_files_filter_relevant","text":"","code":"local_list_files_filter_relevant(   localdir,   regexes = DR_FILE_REGEX,   max_files = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/local_list_files_filter_relevant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Relevant Files In Local Directory — local_list_files_filter_relevant","text":"localdir Path local directory. regexes Tibble regex function name (see example). max_files Max files returned.","code":""},{"path":"https://umccr.github.io/dracarys/reference/local_list_files_filter_relevant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Relevant Files In Local Directory — local_list_files_filter_relevant","text":"tibble file type, basename, size, last modified timestamp, path.","code":""},{"path":"https://umccr.github.io/dracarys/reference/local_list_files_filter_relevant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Relevant Files In Local Directory — local_list_files_filter_relevant","text":"","code":"localdir <- system.file(\"extdata/tso\", package = \"dracarys\") regexes <- tibble::tibble(regex = \"multiqc_data\\\\.json$\", fun = \"MultiqcFile\") x <- local_list_files_filter_relevant(localdir, regexes)"},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Match File to Regex — match_regex","title":"Match File to Regex — match_regex","text":"Matches given file regexes found DR_FILE_REGEX match, returns 'name' match.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match File to Regex — match_regex","text":"","code":"match_regex(x, regexes = DR_FILE_REGEX)"},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match File to Regex — match_regex","text":"x File match. regexes Tibble regex function name.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match File to Regex — match_regex","text":"function corresponding matching regex DR_FILE_REGEX, NA match made.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match File to Regex — match_regex","text":"","code":"match_regex(\"foo.msi.json.gz\") #> [1] \"TsoMsiFile\" match_regex(\"foo.fake.tsv\") #> [1] NA"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_column_map_append.html","id":null,"dir":"Reference","previous_headings":"","what":"Append New MultiQC Workflow Columns — multiqc_column_map_append","title":"Append New MultiQC Workflow Columns — multiqc_column_map_append","text":"Append New MultiQC Workflow Columns","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_column_map_append.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append New MultiQC Workflow Columns — multiqc_column_map_append","text":"","code":"multiqc_column_map_append(d, w, m)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_column_map_append.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append New MultiQC Workflow Columns — multiqc_column_map_append","text":"d Tidy MultiQC tibble raw names (.e. pre-rename). w New workflow name. m Path 'inst/extdata/multiqc_column_map.tsv' dracarys file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Format MultiQC Config Date — multiqc_date_fmt","title":"Format MultiQC Config Date — multiqc_date_fmt","text":"Format MultiQC Config Date","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format MultiQC Config Date — multiqc_date_fmt","text":"","code":"multiqc_date_fmt(cdate)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format MultiQC Config Date — multiqc_date_fmt","text":"cdate String config date \"YYYY-MM-DD, HH:MM UTC\" format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format MultiQC Config Date — multiqc_date_fmt","text":"Properly formatted datetime string \"YYYY-MM-DDTHH:MM:SS\" format. input string formatted differently, return NA.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format MultiQC Config Date — multiqc_date_fmt","text":"","code":"cdate <- \"2023-04-07, 09:09 UTC\" (res1 <- multiqc_date_fmt(cdate)) #> [1] \"2023-04-07T09:09:00\" (res2 <- multiqc_date_fmt(\"2023-04-07\")) #> [1] NA (res3 <- multiqc_date_fmt(\"UNKNOWN\")) #> [1] NA"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"Extracts bar_graph data given plot name MultiQC JSON. bar_graph element JSON object contains:","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"","code":"multiqc_parse_bargraph_plot(dat)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"dat Parsed JSON list element specific plot data extract.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"Tibble name data list-column.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"samples array N subarrays (strings) length . datasets array N subarrays (objects) length B. subarrays contains name (single string) data (array length equal length index-corresponding samples subarray).","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"","code":"if (FALSE) { # \\dontrun{ j1 <- here::here(\"nogit/bcl_convert/multiqc_data.json\") j2 <- here::here(\"nogit/dracarys_gds_sync/multiqc_data.json\") j <- j1 j <- j2 multiqc_list_plots(j) parsed <- RJSONIO::fromJSON(j) dat <- parsed$report_plot_data$mapping_dup_percentage_plot dat <- parsed$report_plot_data$time_metrics_plot dat <- parsed$report_plot_data$bclconvert_lane_counts dat <- parsed$report_plot_data$bclconvert_sample_counts multiqc_parse_bargraph_plot(dat) } # }"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MultiQC 'report_general_stats_data' JSON Element — multiqc_parse_gen","title":"Parse MultiQC 'report_general_stats_data' JSON Element — multiqc_parse_gen","text":"Parses MultiQC 'report_general_stats_data' JSON Element. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MultiQC 'report_general_stats_data' JSON Element — multiqc_parse_gen","text":"","code":"multiqc_parse_gen(p)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MultiQC 'report_general_stats_data' JSON Element — multiqc_parse_gen","text":"p Parsed MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MultiQC 'report_general_stats_data' JSON Element — multiqc_parse_gen","text":"list.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","title":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","text":"Parse Plot Data MultiQC JSON","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","text":"","code":"multiqc_parse_plots(j, plot_names = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","text":"j Path multiqc_data.json file. plot_names Names plots parse. Use \"everything\" wantz plotz.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","text":"Nested tibble plot name result list column (use tidyr::unnest access).","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","text":"","code":"if (FALSE) { # \\dontrun{ j <- \"dracarys_gds_sync/multiqc_data.json\" multiqc_parse_plots(j, plot_names = c(\"dragen_coverage_per_contig\")) multiqc_parse_plots(j, plot_names = \"everything\") multiqc_parse_plots(j, plot_names = NULL) } # }"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw","title":"Parse MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw","text":"Parses MultiQC 'report_saved_raw_data' JSON Element.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw","text":"","code":"multiqc_parse_raw(p)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw","text":"p Parsed MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw","text":"list tibbles tool, tibble contains metrics per sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw_interop.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Interop MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw_interop","title":"Parse Interop MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw_interop","text":"Parses Interop MultiQC 'report_saved_raw_data' JSON Element.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw_interop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Interop MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw_interop","text":"","code":"multiqc_parse_raw_interop(p)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw_interop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Interop MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw_interop","text":"p Parsed Interop MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw_interop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Interop MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw_interop","text":"list summary per-lane tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","title":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","text":"Extracts xy_line data given plot name MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","text":"","code":"multiqc_parse_xyline_plot(dat)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","text":"dat Parsed JSON list element specific plot data extract.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","text":"Tibble name data list-column.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","text":"Note dragen_coverage_per_contig/non_main_contig plots conform normal structure xy_line plots, handle separately.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage — multiqc_parse_xyline_plot_contig_cvg","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage — multiqc_parse_xyline_plot_contig_cvg","text":"MultiQC Extract XY Line Plot Data DRAGEN Contig Coverage","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage — multiqc_parse_xyline_plot_contig_cvg","text":"","code":"multiqc_parse_xyline_plot_contig_cvg(dat)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage — multiqc_parse_xyline_plot_contig_cvg","text":"dat Parsed JSON list element specific plot data extract.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage — multiqc_parse_xyline_plot_contig_cvg","text":"Tibble name data list-column.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy MultiQC JSON — multiqc_tidy_json","title":"Tidy MultiQC JSON — multiqc_tidy_json","text":"Tidies 'multiqc_data.json' output MultiQC. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy MultiQC JSON — multiqc_tidy_json","text":"","code":"multiqc_tidy_json(j)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy MultiQC JSON — multiqc_tidy_json","text":"j Path multiqc_data.json file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy MultiQC JSON — multiqc_tidy_json","text":"tidy tibble column corresponds single metric, row corresponds single sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Local R Dataframe to Spark-backed Table — rdf2tab","title":"Write Local R Dataframe to Spark-backed Table — rdf2tab","text":"First converts local R dataframe Spark DataFrame using SparkR, appends specified table.","code":""},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Local R Dataframe to Spark-backed Table — rdf2tab","text":"","code":"rdf2tab(rdf, outpath, drid = NULL, ...)"},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Local R Dataframe to Spark-backed Table — rdf2tab","text":"rdf Local R dataframe outpath Path output table. drid dracarys ID use dataset (e.g. wfrid.123, prid.456) ... Additional arguments SparkR::write.df.","code":""},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Local R Dataframe to Spark-backed Table — rdf2tab","text":"","code":"if (FALSE) { # \\dontrun{ rdf <- mtcars rdf2tab(rdf, \"dev.wf1.mtcars\", drid = \"wfr.123\") } # }"},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":null,"dir":"Reference","previous_headings":"","what":"Read File object — read.File","title":"Read File object — read.File","text":"Read file based type.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read File object — read.File","text":"","code":"# S3 method for class 'File' read(x, ...)"},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read File object — read.File","text":"x Object class File. ... Arguments passed appropriate read_* function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Reading — read","title":"Generic Reading — read","text":"Generic function reading dracarys objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Reading — read","text":"","code":"read(x, ...)"},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Reading — read","text":"x Object respective class. ... Additional arguments.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Reading — read","text":"Possibly tibble list, depending object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_file_presignedurl.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 Generate Presigned URL — s3_file_presignedurl","title":"S3 Generate Presigned URL — s3_file_presignedurl","text":"S3 Generate Presigned URL","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_file_presignedurl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Generate Presigned URL — s3_file_presignedurl","text":"","code":"s3_file_presignedurl(client, s3path, expiry_seconds = 3600)"},{"path":"https://umccr.github.io/dracarys/reference/s3_file_presignedurl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Generate Presigned URL — s3_file_presignedurl","text":"client S3 client. Make sure use signature_version = \"s3v4\" (see example). s3path Full path S3 object. expiry_seconds Number seconds presigned URL valid (3600 = 1 hour).","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_file_presignedurl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 Generate Presigned URL — s3_file_presignedurl","text":"S3 presigned URL.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_file_presignedurl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 Generate Presigned URL — s3_file_presignedurl","text":"","code":"if (FALSE) { # \\dontrun{ client <- paws.storage::s3(paws.storage::config(signature_version = \"s3v4\")) s3path <- \"s3://bucket1/path/to/file.tsv\" s3_file_presignedurl(client, s3path) } # }"},{"path":"https://umccr.github.io/dracarys/reference/s3_list_files_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"List Objects in AWS S3 Directory — s3_list_files_dir","title":"List Objects in AWS S3 Directory — s3_list_files_dir","text":"Returns (1,000) objects S3 directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_list_files_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Objects in AWS S3 Directory — s3_list_files_dir","text":"","code":"s3_list_files_dir(s3dir, max_objects = 1000)"},{"path":"https://umccr.github.io/dracarys/reference/s3_list_files_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Objects in AWS S3 Directory — s3_list_files_dir","text":"s3dir S3 directory. max_objects Maximum objects returned.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_list_files_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Objects in AWS S3 Directory — s3_list_files_dir","text":"tibble object basename, size, last modified timestamp, full S3 path.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_list_files_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Objects in AWS S3 Directory — s3_list_files_dir","text":"","code":"if (FALSE) { # \\dontrun{ p1 <- \"s3://org.umccr.data.oncoanalyser/analysis_data/SBJ05373/sash\" p2 <- \"20240707becde493/L2401018_L2401017/SBJ05373_MDX240220\" s3dir <- file.path(p1, p2, \"cancer_report/cancer_report_tables\") s3_list_files_dir(s3dir, max_objects = 15) } # }"},{"path":"https://umccr.github.io/dracarys/reference/s3_list_files_filter_relevant.html","id":null,"dir":"Reference","previous_headings":"","what":"List Relevant Files In AWS S3 Directory — s3_list_files_filter_relevant","title":"List Relevant Files In AWS S3 Directory — s3_list_files_filter_relevant","text":"Lists relevant files AWS S3 directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_list_files_filter_relevant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Relevant Files In AWS S3 Directory — s3_list_files_filter_relevant","text":"","code":"s3_list_files_filter_relevant(   s3dir,   pattern = NULL,   regexes = DR_FILE_REGEX,   max_objects = 100,   presign = FALSE,   expiry_sec = 3600 )"},{"path":"https://umccr.github.io/dracarys/reference/s3_list_files_filter_relevant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Relevant Files In AWS S3 Directory — s3_list_files_filter_relevant","text":"s3dir S3 directory. pattern Pattern filter returned file type tibble. regexes Tibble regex function name. max_objects Maximum objects returned. presign Include presigned URLs (def: FALSE). expiry_sec Number seconds presigned URL valid (generated).","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_list_files_filter_relevant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Relevant Files In AWS S3 Directory — s3_list_files_filter_relevant","text":"tibble file type, basename, size, last modified timestamp, full path, presigned URL requested.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_list_files_filter_relevant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Relevant Files In AWS S3 Directory — s3_list_files_filter_relevant","text":"","code":"if (FALSE) { # \\dontrun{ p1 <- \"s3://org.umccr.data.oncoanalyser/analysis_data/SBJ05373/sash\" p2 <- \"20240707becde493/L2401018_L2401017/SBJ05373_MDX240220\" s3dir <- file.path(p1, p2) regexes <- tibble::tibble(regex = \"multiqc_data\\\\.json$\", fun = \"MultiqcJsonFile\") s3_list_files_filter_relevant(s3dir = s3dir, regexes = regexes, max_objects = 300) } # }"},{"path":"https://umccr.github.io/dracarys/reference/s3_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search AWS S3 Objects — s3_search","title":"Search AWS S3 Objects — s3_search","text":"Searches given pattern UMCCR umccr-primary-data-prod AWS S3 bucket.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search AWS S3 Objects — s3_search","text":"","code":"s3_search(pat, rows)"},{"path":"https://umccr.github.io/dracarys/reference/s3_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search AWS S3 Objects — s3_search","text":"pat Pattern search (e.g. 'multiqc_data.json'). rows Max number rows return.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search AWS S3 Objects — s3_search","text":"Tibble S3 path, object size, date modified, id, unique hash.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search AWS S3 Objects — s3_search","text":"","code":"if (FALSE) { # \\dontrun{ pat <- \"qc_summary.tsv.gz\" s3_search(pat, 10) } # }"},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":null,"dir":"Reference","previous_headings":"","what":"Session Information Kable — session_info_kable","title":"Session Information Kable — session_info_kable","text":"Session information kables vignettes.","code":""},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Session Information Kable — session_info_kable","text":"","code":"session_info_kable(pkgs = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session Information Kable — session_info_kable","text":"pkgs Vector R packages display vignette. default returns .","code":""},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Session Information Kable — session_info_kable","text":"list two kables containing information platform specified packages.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tidy_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Files — tidy_files","title":"Tidy Files — tidy_files","text":"Tidies files tibble parsed data.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tidy_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Files — tidy_files","text":"","code":"tidy_files(x, envir = parent.frame())"},{"path":"https://umccr.github.io/dracarys/reference/tidy_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Files — tidy_files","text":"x Tibble localpath file function type parse . function must return tibble name column tidied data list-column (see example). envir environment evaluate function e.g. use self using inside R6 classes.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tidy_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy Files — tidy_files","text":"Tibble parsed data data list-column.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tidy_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy Files — tidy_files","text":"","code":"if (FALSE) { # \\dontrun{ p1 <- \"~/icav1/g/production/analysis_data/SBJ01155/umccrise/202408300c218043\" p2 <- \"L2101566__L2101565/SBJ01155__PRJ211091/cancer_report_tables\" p <- file.path(p1, p2, \"SBJ01155__PRJ211091-qc_summary.tsv.gz\") fun <- function(x) {   d <- readr::read_tsv(x)   tibble::tibble(name = \"table1\", data = list(d[])) } x <- tibble::tibble(type = \"fun\", localpath = p) tidy_files(x) } # }"},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Multiple TimeMetricsFile Objects — time_metrics_process","title":"Process Multiple TimeMetricsFile Objects — time_metrics_process","text":"Processes multiple TimeMetricsFile objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Multiple TimeMetricsFile Objects — time_metrics_process","text":"","code":"time_metrics_process(x, id = seq_len(length(x)))"},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Multiple TimeMetricsFile Objects — time_metrics_process","text":"x Atomic vector one TimeMetricsFile objects. id ID input, used disambiguate files generated samples. Default: index 1 length x.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Multiple TimeMetricsFile Objects — time_metrics_process","text":"tibble following columns: Step: DRAGEN step Time: time HH:MM","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Multiple TimeMetricsFile Objects — time_metrics_process","text":"","code":"p <- system.file(\"extdata/wgs/SEQC-II.time_metrics.csv.gz\", package = \"dracarys\") x <- TimeMetricsFile$new(p) (tm <- time_metrics_process(c(x, x), id = c(\"run1\", \"run2\"))) #> # A tibble: 2 × 20 #>   ID    `Total Runtime` `Loading Reference` `Aligning Reads` `Duplicate Marking` #>   <chr> <chr>           <chr>               <chr>            <chr>               #> 1 run1  04:10           00:01               00:35            00:01               #> 2 run2  04:10           00:01               00:35            00:01               #> # ℹ 15 more variables: `Sorting and Marking Duplicates` <chr>, #> #   `DRAGStr Calibration` <chr>, `Saving Map/Align Output` <chr>, #> #   `Partial Reconfiguration` <chr>, `Variant Calling` <chr>, #> #   `Calculating Target Counts` <chr>, `Correcting GC Bias` <chr>, #> #   `Normalizing Case Sample` <chr>, `Performing Segmentation` <chr>, #> #   `Generating Somatic Model Input` <chr>, `Fitting Somatic Model` <chr>, #> #   `Generating CNV Calls` <chr>, `Generating CNV Track Files` <chr>, …"},{"path":"https://umccr.github.io/dracarys/reference/tso_acfc_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ACFC — tso_acfc_plot","title":"Plot ACFC — tso_acfc_plot","text":"Generates UmiStatistics Histogram plots AlignCollapseFusionCaller_metrics.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_acfc_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ACFC — tso_acfc_plot","text":"","code":"tso_acfc_plot(d, max_num = 15)"},{"path":"https://umccr.github.io/dracarys/reference/tso_acfc_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ACFC — tso_acfc_plot","text":"d Parsed object tso_acfc_read. max_num Maximum number display plots.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_acfc_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ACFC — tso_acfc_plot","text":"histogram plot objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_acfc_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot ACFC — tso_acfc_plot","text":"Histo majority UmiStatistics section, deal separately. Histo num supporting fragments: Num families 0/1/2/3... raw reads. Histo unique UMIs per fragment pos: Num pos 0/1/2/3... UMI seqs.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_acfc_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read TSO AlignCollapseFusionCaller_metrics File — tso_acfc_read","title":"Read TSO AlignCollapseFusionCaller_metrics File — tso_acfc_read","text":"Reads AlignCollapseFusionCaller_metrics.json.gz file output TSO500 (post-processing) workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_acfc_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read TSO AlignCollapseFusionCaller_metrics File — tso_acfc_read","text":"","code":"tso_acfc_read(x)"},{"path":"https://umccr.github.io/dracarys/reference/tso_acfc_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read TSO AlignCollapseFusionCaller_metrics File — tso_acfc_read","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_acfc_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read TSO AlignCollapseFusionCaller_metrics File — tso_acfc_read","text":"","code":"x <- system.file(\"extdata/tso/sample705.AlignCollapseFusionCaller_metrics.json.gz\",   package = \"dracarys\" ) d <- tso_acfc_read(x) p <- tso_acfc_plot(d)"},{"path":"https://umccr.github.io/dracarys/reference/tso_combinedvaro_smallv_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read TSO CombinedVariantOutput File — tso_combinedvaro_smallv_read","title":"Read TSO CombinedVariantOutput File — tso_combinedvaro_smallv_read","text":"Reads CombinedVariantOutput.tsv output TSO500 workflow extracts Small Variants section (due inconsistencies sections).","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_combinedvaro_smallv_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read TSO CombinedVariantOutput File — tso_combinedvaro_smallv_read","text":"","code":"tso_combinedvaro_smallv_read(x)"},{"path":"https://umccr.github.io/dracarys/reference/tso_combinedvaro_smallv_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read TSO CombinedVariantOutput File — tso_combinedvaro_smallv_read","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_fraglenhist_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Fragment Length Hist — tso_fraglenhist_plot","title":"Plot Fragment Length Hist — tso_fraglenhist_plot","text":"Plots fragment length distributions given fragment_length_hist file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_fraglenhist_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Fragment Length Hist — tso_fraglenhist_plot","text":"","code":"tso_fraglenhist_plot(d, min_count = 10)"},{"path":"https://umccr.github.io/dracarys/reference/tso_fraglenhist_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Fragment Length Hist — tso_fraglenhist_plot","text":"d Parsed tibble. min_count Minimum read count plotted (def: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_fraglenhist_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Fragment Length Hist — tso_fraglenhist_plot","text":"ggplot2 plot containing fragment lengths X axis read counts Y axis sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_fusions_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read TSO Fusions File — tso_fusions_read","title":"Read TSO Fusions File — tso_fusions_read","text":"Reads Fusions.csv file output TSO500 workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_fusions_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read TSO Fusions File — tso_fusions_read","text":"","code":"tso_fusions_read(x)"},{"path":"https://umccr.github.io/dracarys/reference/tso_fusions_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read TSO Fusions File — tso_fusions_read","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_fusions_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read TSO Fusions File — tso_fusions_read","text":"","code":"x <- system.file(\"extdata/tso/sample705_Fusions.csv\", package = \"dracarys\") tso_fusions_read(x) #> # A tibble: 0 × 17 #> # ℹ 17 variables: Sample <chr>, Name <chr>, Chr1 <chr>, Pos1 <dbl>, Chr2 <chr>, #> #   Pos2 <dbl>, Direction <chr>, Alt_Depth <dbl>, BP1_Depth <dbl>, #> #   BP2_Depth <dbl>, Total_Depth <dbl>, VAF <dbl>, Gene1 <chr>, Gene2 <chr>, #> #   Contig <chr>, Filter <chr>, Is_Cosmic_GenePair <lgl>"},{"path":"https://umccr.github.io/dracarys/reference/tso_msi_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read TSO MSI JSON File — tso_msi_read","title":"Read TSO MSI JSON File — tso_msi_read","text":"Reads msi.json.gz file output TSO500 workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_msi_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read TSO MSI JSON File — tso_msi_read","text":"","code":"tso_msi_read(x)"},{"path":"https://umccr.github.io/dracarys/reference/tso_msi_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read TSO MSI JSON File — tso_msi_read","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_msi_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read TSO MSI JSON File — tso_msi_read","text":"","code":"x <- system.file(\"extdata/tso/sample705.msi.json.gz\", package = \"dracarys\") tso_msi_read(x) #> # A tibble: 1 × 6 #>   TotalMicrosatelliteSitesAssessed TotalMicrosatelliteS…¹ PercentageUnstableSi…² #>                              <int>                  <int>                  <dbl> #> 1                                0                      0                     NA #> # ℹ abbreviated names: ¹​TotalMicrosatelliteSitesUnstable, #> #   ²​PercentageUnstableSites #> # ℹ 3 more variables: ResultMessage <chr>, ResultIsValid <chr>, SumJsd <dbl>"},{"path":"https://umccr.github.io/dracarys/reference/tso_sar_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read TSO SampleAnalysisResults JSON File — tso_sar_read","title":"Read TSO SampleAnalysisResults JSON File — tso_sar_read","text":"Reads SampleAnalysisResults.json.gz file output TSO500 workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_sar_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read TSO SampleAnalysisResults JSON File — tso_sar_read","text":"","code":"tso_sar_read(x)"},{"path":"https://umccr.github.io/dracarys/reference/tso_sar_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read TSO SampleAnalysisResults JSON File — tso_sar_read","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_sar_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read TSO SampleAnalysisResults JSON File — tso_sar_read","text":"list tibbles","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_sar_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read TSO SampleAnalysisResults JSON File — tso_sar_read","text":"","code":"x <- system.file(\"extdata/tso/sample705_SampleAnalysisResults.json.gz\", package = \"dracarys\") d <- tso_sar_read(x) options(pillar.max_dec_width = 99) # for scientific notation switchoff d |>   dplyr::filter(name == \"sar_qc\") |>   dplyr::select(data) |>   tidyr::unnest(data) |>   tidyr::pivot_longer(dplyr::everything()) #> # A tibble: 24 × 2 #>    name                                 value #>    <chr>                                <dbl> #>  1 contamination_score                 61     #>  2 contamination_p_value                1     #>  3 median_exon_coverage                59     #>  4 pct_exon_1000x                       0     #>  5 gene_scaled_mad                      0.114 #>  6 median_bin_count_cnv_target          0.6   #>  7 total_pf_reads              1088930210     #>  8 mean_family_size                   449     #>  9 median_target_coverage              55     #> 10 pct_chimeric_reads                   0.81  #> # ℹ 14 more rows"},{"path":"https://umccr.github.io/dracarys/reference/tso_targetregcvg_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot TargetRegionCoverage — tso_targetregcvg_plot","title":"Plot TargetRegionCoverage — tso_targetregcvg_plot","text":"Plots stuff TargetRegionCoverage.json.gz file output TSO500 workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_targetregcvg_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot TargetRegionCoverage — tso_targetregcvg_plot","text":"","code":"tso_targetregcvg_plot(d, min_pct = 2)"},{"path":"https://umccr.github.io/dracarys/reference/tso_targetregcvg_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot TargetRegionCoverage — tso_targetregcvg_plot","text":"d Parsed tibble. min_pct Minimum percentage plotted (def: 2).","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_targetregcvg_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot TargetRegionCoverage — tso_targetregcvg_plot","text":"ggplot2 plot containing read depth X axis percentage covered Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_targetregcvg_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read TSO TargetRegionCoverage File — tso_targetregcvg_read","title":"Read TSO TargetRegionCoverage File — tso_targetregcvg_read","text":"Reads TargetRegionCoverage.json.gz file output TSO500 workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_targetregcvg_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read TSO TargetRegionCoverage File — tso_targetregcvg_read","text":"","code":"tso_targetregcvg_read(x)"},{"path":"https://umccr.github.io/dracarys/reference/tso_targetregcvg_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read TSO TargetRegionCoverage File — tso_targetregcvg_read","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_targetregcvg_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read TSO TargetRegionCoverage File — tso_targetregcvg_read","text":"tibble following columns: ConsensusReadDepth BasePair Percentage","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_targetregcvg_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read TSO TargetRegionCoverage File — tso_targetregcvg_read","text":"","code":"x <- system.file(\"extdata/tso/sample705.TargetRegionCoverage.json.gz\", package = \"dracarys\") d <- tso_targetregcvg_read(x) tso_targetregcvg_plot(d, min_pct = 0)"},{"path":"https://umccr.github.io/dracarys/reference/tso_tmbt_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read TSO TMB_Trace File — tso_tmbt_read","title":"Read TSO TMB_Trace File — tso_tmbt_read","text":"Reads TMB_Trace.tsv file output TSO500 workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_tmbt_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read TSO TMB_Trace File — tso_tmbt_read","text":"","code":"tso_tmbt_read(x)"},{"path":"https://umccr.github.io/dracarys/reference/tso_tmbt_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read TSO TMB_Trace File — tso_tmbt_read","text":"x Path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_tmbt_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read TSO TMB_Trace File — tso_tmbt_read","text":"","code":"x <- system.file(\"extdata/tso/sample705_TMB_Trace.tsv\", package = \"dracarys\") tso_tmbt_read(x) #> # A tibble: 1,639 × 20 #>    Chromosome Position RefCall AltCall    VAF Depth CytoBand GeneName            #>    <chr>         <dbl> <chr>   <chr>    <dbl> <dbl> <chr>    <chr>               #>  1 chr1        2488153 A       G       0.559     93 1p36.32  LOC100133445:TNFRS… #>  2 chr1        4367323 G       A       1         55 1p36.32  NA                  #>  3 chr1       11205058 C       T       1         52 1p36.22  MTOR:MTOR-AS1       #>  4 chr1       11288758 G       A       1         75 1p36.22  MTOR                #>  5 chr1       11301714 A       G       1         82 1p36.22  MTOR                #>  6 chr1       18957546 G       A       0.573     75 1p36.13  PAX7                #>  7 chr1       19027239 A       G       0.581    117 1p36.13  PAX7                #>  8 chr1       19071752 T       C       1        107 1p36.13  PAX7                #>  9 chr1       19071759 G       T       0.0182   110 1p36.13  PAX7                #> 10 chr1       19072926 A       G       1         79 1p36.13  PAX7                #> # ℹ 1,629 more rows #> # ℹ 12 more variables: VariantType <chr>, CosmicIDs <chr>, #> #   MaxCosmicCount <dbl>, AlleleCountsGnomadExome <dbl>, #> #   AlleleCountsGnomadGenome <dbl>, AlleleCounts1000Genomes <dbl>, #> #   MaxDatabaseAlleleCounts <dbl>, GermlineFilterDatabase <chr>, #> #   GermlineFilterProxi <chr>, CodingVariant <chr>, Nonsynonymous <chr>, #> #   IncludedInTMBNumerator <chr>"},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy UMCCR Results — umccr_tidy","title":"Tidy UMCCR Results — umccr_tidy","text":"Tidies UMCCR workflow results list tibbles writes individual tibbles TSV, Parquet, SparkDF, RDS format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy UMCCR Results — umccr_tidy","text":"","code":"umccr_tidy(   in_dir = NULL,   out_dir = NULL,   prefix = NULL,   local_dir = NULL,   out_format = \"tsv\",   dryrun = FALSE,   token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   pattern = NULL,   regexes = DR_FILE_REGEX )"},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy UMCCR Results — umccr_tidy","text":"in_dir Directory path UMCCR workflow results (can GDS, S3 local). out_dir Output directory. prefix Prefix output file(s). local_dir indir GDS S3 directory, 'recognisable' files first downloaded directory (def: <out_dir>/dracarys_<s3_or_gds>_sync). out_format Format output (tsv, parquet, ) (def: tsv). dryrun Just list files downloaded (def: FALSE). token ICA access token (default uses $ICA_ACCESS_TOKEN env var). pattern Pattern filter returned file type tibble (see name column DR_FILE_REGEX tibble). regexes Tibble regex function name.","code":""},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy UMCCR Results — umccr_tidy","text":"Tibble path input file resultant tidy object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy UMCCR Results — umccr_tidy","text":"","code":"if (FALSE) { # \\dontrun{ in_dir <- file.path(   \"s3://umccr-primary-data-prod/UMCCR-Validation/SBJ00596\",   \"ctTSO/2021-03-17/PTC_SSqCMM05pc_L2100067\" ) in_dir <- paste0(   \"gds://production/analysis_data/SBJ01639/tso_ctdna_tumor_only/\",   \"202204045ad5743c/L2200214/Results/PRJ220425_L2200214\" ) o1 <- sub(\"^gds://\", \"\", in_dir) o1 <- sub(\"s3:/\", \"~/s3\", in_dir) out_dir <- o1 out_dir <- file.path(fs::path_home(), \"icav1/g\", o1) # in_dir <- file.path(out_dir, \"dracarys_gds_sync\") prefix <- \"SBJ01639\" prefix <- \"PTC_SSqCMM05pc_L2100067\" out_format <- \"rds\" umccr_tidy(in_dir = in_dir, out_dir = out_dir, prefix = prefix, out_format = out_format, dryrun = F)  in_dir <- here::here(glue(\"nogit/tso/2022-12-13/SBJ02858/dracarys_gds_sync\")) out_dir <- file.path(in_dir, \"../out\") gds_local_dir <- NULL prefix <- \"SBJ02858\" dryrun <- F umccr_tidy(in_dir = in_dir, out_dir = out_dir, prefix = prefix, dryrun = F) } # }"},{"path":"https://umccr.github.io/dracarys/reference/write_dracarys_list_of_tbls.html","id":null,"dir":"Reference","previous_headings":"","what":"Write List of Tidy Tibbles — write_dracarys_list_of_tbls","title":"Write List of Tidy Tibbles — write_dracarys_list_of_tbls","text":"Write List Tidy Tibbles","code":""},{"path":"https://umccr.github.io/dracarys/reference/write_dracarys_list_of_tbls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write List of Tidy Tibbles — write_dracarys_list_of_tbls","text":"","code":"write_dracarys_list_of_tbls(   list_of_tbls,   out_dir = NULL,   prefix = NULL,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/write_dracarys_list_of_tbls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write List of Tidy Tibbles — write_dracarys_list_of_tbls","text":"list_of_tbls List tidy tibbles. out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/write_dracarys_list_of_tbls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write List of Tidy Tibbles — write_dracarys_list_of_tbls","text":"Tibble nested objects written output directory.","code":""}]
