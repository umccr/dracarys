[{"path":[]},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement peterdiakumis@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"flames","dir":"Articles","previous_headings":"","what":"Flames","title":"Flames","text":"Flames dracarys user stories. D‚Äôoh.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"cttso-summary","dir":"Articles","previous_headings":"Flames","what":"ctTSO Summary","title":"Flames","text":"Slack link","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"ffpe-vs--fresh-frozen","dir":"Articles","previous_headings":"Flames","what":"FFPE vs.¬†Fresh Frozen","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"coverage-depth-exploration","dir":"Articles","previous_headings":"Flames","what":"Coverage depth exploration","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"sv-runtime","dir":"Articles","previous_headings":"Flames","what":"SV runtime","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"msi-and-tmb","dir":"Articles","previous_headings":"Flames","what":"MSI and TMB","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"germline-duplication-rate","dir":"Articles","previous_headings":"Flames","what":"Germline duplication rate","title":"Flames","text":"Slack link1. Slack link2.","code":""},{"path":"https://umccr.github.io/dracarys/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Diakumis. Author, maintainer. Victor San Kho Lin. Author, contributor.","code":""},{"path":"https://umccr.github.io/dracarys/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Diakumis P, Lin V (2023). dracarys: Post-processing DRAGEN workflows. https://github.com/umccr/dracarys, https://umccr.github.io/dracarys/.","code":"@Manual{,   title = {dracarys: Post-processing DRAGEN workflows},   author = {Peter Diakumis and Victor San Kho Lin},   year = {2023},   note = {https://github.com/umccr/dracarys, https://umccr.github.io/dracarys/}, }"},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-dracarys---umccr-workflow-tidying","dir":"","previous_headings":"","what":"Post-processing DRAGEN workflows","title":"Post-processing DRAGEN workflows","text":"Docs: https://umccr.github.io/dracarys/","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-aim","dir":"","previous_headings":"","what":"üèÜ Aim","title":"Post-processing DRAGEN workflows","text":"Given ICA GDS local directory results UMCCR workflow, {dracarys} grab files interest transform ‚Äòtidier‚Äô structures output TSV/Parquet format downstream ingestion database/data lake. See supported workflows, running examples, CLI options sections .","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-installation","dir":"","previous_headings":"","what":"üçï Installation","title":"Post-processing DRAGEN workflows","text":"Linux & MacOS (non-M1) MacOS M1","code":"remotes::install_github(\"umccr/dracarys@vX.X.X\") # for vX.X.X Release/Tag mamba create \\   -n dracarys_env \\   -c umccr -c bioconda -c conda-forge \\   r-dracarys==X.X.X  conda activate dracarys_env CONDA_SUBDIR=osx-64 \\   mamba create \\   -n dracarys_env \\   -c umccr -c bioconda -c conda-forge \\   r-dracarys==X.X.X  conda activate dracarys_env docker pull --platform linux/amd64 ghcr.io/umccr/dracarys:X.X.X"},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-supported-workflows","dir":"","previous_headings":"","what":"‚ú® Supported Workflows","title":"Post-processing DRAGEN workflows","text":"See output files workflows supported Supported Files.","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-cli","dir":"","previous_headings":"","what":"üåÄ CLI","title":"Post-processing DRAGEN workflows","text":"dracarys.R command line interface available convenience. ‚Äôre using conda package, dracarys.R command already available inside activated conda environment. ‚Äôre using conda package, need export dracarys/inst/cli/ directory PATH order use dracarys.R.","code":"dracarys_cli=$(Rscript -e 'x = system.file(\"cli\", package = \"dracarys\"); cat(x, \"\\n\")' | xargs) export PATH=\"${dracarys_cli}:${PATH}\" dracarys.R --version dracarys.R 0.8.0  #-----------------------------------# dracarys.R --help usage: dracarys.R [-h] [-v] {tidy} ...  üêâ DRAGEN Output Post-Processing üî•  positional arguments:   {tidy}         sub-command help     tidy         Tidy UMCCR Workflow Outputs  options:   -h, --help     show this help message and exit   -v, --version  show program's version number and exit  #-----------------------------------# #------- Tidy ----------------------# dracarys.R tidy --help usage: dracarys.R tidy [-h] -i IN_DIR -o OUT_DIR -p PREFIX [-t TOKEN]                        [-g GDS_LOCAL_DIR] [-f {tsv,parquet,both}] [-n] [-q]  options:   -h, --help            show this help message and exit   -i IN_DIR, --in_dir IN_DIR                         ‚õÑÔ∏è Directory with untidy UMCCR workflow results. Can                         be GDS or local.   -o OUT_DIR, --out_dir OUT_DIR                         üî• Directory to output tidy results.   -p PREFIX, --prefix PREFIX                         üéª Prefix string used for all results.   -t TOKEN, --token TOKEN                         üôà ICA access token. Default: ICA_ACCESS_TOKEN env var.   -g GDS_LOCAL_DIR, --gds_local_dir GDS_LOCAL_DIR                         üì• If input is a GDS directory, download the                         recognisable files to this directory. Default:                         '<out_dir>/dracarys_gds_sync'.   -f {tsv,parquet,both}, --format {tsv,parquet,both}                         üé® Format of output. Default: tsv.   -n, --dryrun          üê´ Dry run - just show files to be tidied.   -q, --quiet           üò¥ Shush all the logs."},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-running","dir":"","previous_headings":"","what":"üöï Running","title":"Post-processing DRAGEN workflows","text":"{dracarys} takes input (--in_dir) directory results one UMCCR workflows. recursively scan directory supported files, download local directory (--gds_local_dir), parse, transform write tidied versions specified output directory (--out_dir). prefix (--prefix) prepended tidied files. output file format (--format) can tsv, parquet, . get just list supported files within specified input directory, use -n (--dryrun) option. within activated conda environment shell dracarys.R CLI available:","code":"# help(umccr_tidy) in_dir <- \"gds://path/to/subjectX_multiqc_data/\" out_dir <- tempdir() prefix <- \"subjectX\" umccr_tidy(in_dir = in_dir, out_dir = out_dir, prefix = prefix) dracarys.R tidy \\       -i gds://path/to/subjectX_multiqc_data/ \\       -o local_output_dir \\       -p subjectX_prefix docker container run \\   -v $(PWD):/mount1 \\   --platform=linux/amd64 \\   --env \"ICA_ACCESS_TOKEN\" \\   --rm -it \\   ghcr.io/umccr/dracarys:X.X.X \\     dracarys.R tidy \\       -i gds://path/to/subjectX_multiqc_data/ \\       -o /mount1/output_dir \\       -p subjectX_prefix"},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":null,"dir":"Reference","previous_headings":"","what":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"Contains methods reading displaying contents wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN. file contains estimated coverage contigs, autosomal estimated coverage.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"dracarys::File -> ContigMeanCovFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"ContigMeanCovFile$read() ContigMeanCovFile$plot() ContigMeanCovFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"Reads wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"","code":"ContigMeanCovFile$read(keep_alt = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"keep_alt Keep ALT + Mito chromosomes?","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"tibble following columns: label: file label. chrom: contig name. n_bases: number bases aligned contig (excludes bases duplicate marked reads, reads MAPQ=0, clipped bases). coverage: col2 / contig length","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"Plots wgs_contig_mean_cov_<phenotype>.csv files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"","code":"ContigMeanCovFile$plot(top_alt_n = 15)"},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"top_alt_n Number top covered alt contigs plot per phenotype.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"ggplot2 object chromosomes X axis, coverage Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"","code":"ContigMeanCovFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_contig_mean_cov_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_contig_mean_cov_tumor.csv.gz\", package = \"dracarys\") cc1 <- ContigMeanCovFile$new(x1) cc2 <- ContigMeanCovFile$new(x2) read(cc1) #> # A tibble: 25 √ó 4 #>    label     chrom     n_bases coverage #>    <chr>     <chr>       <dbl>    <dbl> #>  1 SEQC-II_N chr1  11391872260     49.4 #>  2 SEQC-II_N chr2  11910292998     49.5 #>  3 SEQC-II_N chr3   9864967562     49.8 #>  4 SEQC-II_N chr4   9380962565     49.4 #>  5 SEQC-II_N chr5   8851326991     49.5 #>  6 SEQC-II_N chr6   7013593668     41.2 #>  7 SEQC-II_N chr7   7641057161     48.1 #>  8 SEQC-II_N chr8   7051795336     48.7 #>  9 SEQC-II_N chr9   5706387709     46.9 #> 10 SEQC-II_N chr10  6468177560     48.5 #> # ‚Ñπ 15 more rows read(cc2, keep_alt = TRUE) #> # A tibble: 3,367 √ó 4 #>    label     chrom     n_bases coverage #>    <chr>     <chr>       <dbl>    <dbl> #>  1 SEQC-II_T chr1  19825282617     86.0 #>  2 SEQC-II_T chr2  20173660434     83.9 #>  3 SEQC-II_T chr3  17397714315     87.8 #>  4 SEQC-II_T chr4  15471335389     81.5 #>  5 SEQC-II_T chr5  15376687254     85.9 #>  6 SEQC-II_T chr6  13348447303     78.5 #>  7 SEQC-II_T chr7  16991597908    107.  #>  8 SEQC-II_T chr8  13202798183     91.2 #>  9 SEQC-II_T chr9  10085223132     82.8 #> 10 SEQC-II_T chr10 10799872299     81.0 #> # ‚Ñπ 3,357 more rows plot(cc1)"},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"Contains methods reading displaying contents wgs_coverage_metrics_<phenotype>.csv file output DRAGEN. file contains read depth coverage metrics.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"dracarys::File -> CoverageMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"CoverageMetricsFile$read() CoverageMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"Reads wgs_coverage_metrics_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"","code":"CoverageMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"tibble following columns: label: file label. var: variable name. var_abbrev: variable abbreviation. pct: percentage value. count: count value.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"","code":"CoverageMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_coverage_metrics_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_coverage_metrics_tumor.csv.gz\", package = \"dracarys\") cm1 <- CoverageMetricsFile$new(x1) cm2 <- CoverageMetricsFile$new(x2) read(cm1) #> # A tibble: 27 √ó 5 #>    label     var                                         var_abbrev    pct count #>    <chr>     <chr>                                       <chr>       <dbl> <dbl> #>  1 SEQC-II_N Uniformity of coverage (PCT > 0.2*mean) ov‚Ä¶ uniformit‚Ä¶  95.8     NA #>  2 SEQC-II_N PCT of genome with coverage [100x: inf)     %genome [‚Ä¶   0.25    NA #>  3 SEQC-II_N PCT of genome with coverage [ 50x: inf)     %genome [‚Ä¶  43.8     NA #>  4 SEQC-II_N PCT of genome with coverage [ 20x: inf)     %genome [‚Ä¶  93.2     NA #>  5 SEQC-II_N PCT of genome with coverage [ 15x: inf)     %genome [‚Ä¶  95.0     NA #>  6 SEQC-II_N PCT of genome with coverage [ 10x: inf)     %genome [‚Ä¶  95.8     NA #>  7 SEQC-II_N PCT of genome with coverage [  3x: inf)     %genome [‚Ä¶  96.7     NA #>  8 SEQC-II_N PCT of genome with coverage [  1x: inf)     %genome [‚Ä¶  97.2     NA #>  9 SEQC-II_N PCT of genome with coverage [  0x: inf)     %genome [‚Ä¶ 100       NA #> 10 SEQC-II_N PCT of genome with coverage [ 50x:100x)     %genome [‚Ä¶  43.6     NA #> # ‚Ñπ 17 more rows read(cm2) #> # A tibble: 27 √ó 5 #>    label     var                                          var_abbrev   pct count #>    <chr>     <chr>                                        <chr>      <dbl> <dbl> #>  1 SEQC-II_T Uniformity of coverage (PCT > 0.2*mean) ove‚Ä¶ uniformit‚Ä¶  96.1    NA #>  2 SEQC-II_T PCT of genome with coverage [100x: inf)      %genome [‚Ä¶  22.3    NA #>  3 SEQC-II_T PCT of genome with coverage [ 50x: inf)      %genome [‚Ä¶  89.5    NA #>  4 SEQC-II_T PCT of genome with coverage [ 20x: inf)      %genome [‚Ä¶  96.0    NA #>  5 SEQC-II_T PCT of genome with coverage [ 15x: inf)      %genome [‚Ä¶  96.2    NA #>  6 SEQC-II_T PCT of genome with coverage [ 10x: inf)      %genome [‚Ä¶  96.5    NA #>  7 SEQC-II_T PCT of genome with coverage [  3x: inf)      %genome [‚Ä¶  97.1    NA #>  8 SEQC-II_T PCT of genome with coverage [  1x: inf)      %genome [‚Ä¶  97.5    NA #>  9 SEQC-II_T PCT of genome with coverage [  0x: inf)      %genome [‚Ä¶ 100      NA #> 10 SEQC-II_T PCT of genome with coverage [ 50x:100x)      %genome [‚Ä¶  67.3    NA #> # ‚Ñπ 17 more rows"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":null,"dir":"Reference","previous_headings":"","what":"File R6 Class ‚Äî File","title":"File R6 Class ‚Äî File","text":"File base R6 class representing TSV/CSV/JSON output DRAGEN workflow. File path, basename, type, can presigned URL.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"File R6 Class ‚Äî File","text":"path Name full path file. is_url file presigned URL?","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"File R6 Class ‚Äî File","text":"File$new() File$bname() File$type() File$print() File$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"File R6 Class ‚Äî File","text":"Create new File object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$new(path = NULL, is_url = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class ‚Äî File","text":"path Name full path file. is_url file presigned URL?","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-bname-","dir":"Reference","previous_headings":"","what":"Method bname()","title":"File R6 Class ‚Äî File","text":"Basename file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$bname()"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"File R6 Class ‚Äî File","text":"Basename file character vector.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-type-","dir":"Reference","previous_headings":"","what":"Method type()","title":"File R6 Class ‚Äî File","text":"Get type file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$type()"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"File R6 Class ‚Äî File","text":"String describing specific type dracarys file (NA dracarys-recognised file).","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"File R6 Class ‚Äî File","text":"Print details File.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class ‚Äî File","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"File R6 Class ‚Äî File","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class ‚Äî File","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File R6 Class ‚Äî File","text":"","code":"F1 <- File$new(readr::readr_example(\"mtcars.csv\")) (bname_f1 <- F1$bname()) #> [1] \"mtcars.csv\" (F2 <- File$new(\"https://stratus-gds-aps2/foo/bar/baz.csv?bla\")) #> #--- File ---# #> Path: https://stratus-gds-aps2/foo/bar/baz.csv?bla  #> Basename: baz.csv  #> Type: NA  #> isURL: TRUE"},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"FineHistFile R6 Class ‚Äî FineHistFile","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"Contains methods reading displaying contents wgs_fine_hist_<phenotype>.csv file output DRAGEN. file contains two columns: Depth Overall. value Depth column ranges 0 1000+ Overall column indicates number loci covered corresponding depth.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"dracarys::File -> FineHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"FineHistFile$read() FineHistFile$plot() FineHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"Reads wgs_fine_hist_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"","code":"FineHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"tibble three columns: label depth number loci given depth","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"Plots wgs_fine_hist_<phenotype>.csv files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"","code":"FineHistFile$plot(x_lim = c(0, 300))"},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"x_lim X axis range plot.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"ggplot2 object depth coverage X axis, number loci depth Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"","code":"FineHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_fine_hist_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_fine_hist_tumor.csv.gz\", package = \"dracarys\") ch1 <- FineHistFile$new(x1) ch2 <- FineHistFile$new(x2) read(ch1) #> # A tibble: 2,001 √ó 3 #>    label     depth   n_loci #>    <chr>     <int>    <dbl> #>  1 SEQC-II_N     0 84762208 #>  2 SEQC-II_N     1  9324435 #>  3 SEQC-II_N     2  5702790 #>  4 SEQC-II_N     3  4424768 #>  5 SEQC-II_N     4  3833201 #>  6 SEQC-II_N     5  3570619 #>  7 SEQC-II_N     6  3534313 #>  8 SEQC-II_N     7  3609742 #>  9 SEQC-II_N     8  3788680 #> 10 SEQC-II_N     9  4050997 #> # ‚Ñπ 1,991 more rows read(ch2) #> # A tibble: 2,001 √ó 3 #>    label     depth   n_loci #>    <chr>     <int>    <dbl> #>  1 SEQC-II_T     0 75987894 #>  2 SEQC-II_T     1  8548864 #>  3 SEQC-II_T     2  4914437 #>  4 SEQC-II_T     3  3591147 #>  5 SEQC-II_T     4  2939892 #>  6 SEQC-II_T     5  2521559 #>  7 SEQC-II_T     6  2228452 #>  8 SEQC-II_T     7  2023887 #>  9 SEQC-II_T     8  1885489 #> 10 SEQC-II_T     9  1779691 #> # ‚Ñπ 1,991 more rows plot(ch1)  plot(ch2)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"Contains methods reading plotting contents fragment_length_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"dracarys::File -> FragmentLengthHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"FragmentLengthHistFile$read() FragmentLengthHistFile$plot() FragmentLengthHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"Reads fragment_length_hist.csv file, contains fragment length distribution sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"tibble following columns: fragmentLength: estimated fragment length count: number reads estimated fragment length sample: name sample","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"Plots fragment length distributions given fragment_length_hist.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$plot(min_count = 10)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"min_count Minimum read count plotted (Default: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"ggplot2 plot containing fragment lengths X axis read counts Y axis sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.fragment_length_hist.csv.gz\", package = \"dracarys\") fl <- FragmentLengthHistFile$new(x) fl$read() # or read(fl) #> # A tibble: 77,058 √ó 3 #>    fragmentLength count sample         #>             <int> <int> <chr>          #>  1             35     1 SEQC-II_normal #>  2             36     1 SEQC-II_normal #>  3             37     0 SEQC-II_normal #>  4             38     0 SEQC-II_normal #>  5             39     0 SEQC-II_normal #>  6             40     0 SEQC-II_normal #>  7             41     1 SEQC-II_normal #>  8             42     0 SEQC-II_normal #>  9             43     0 SEQC-II_normal #> 10             44     0 SEQC-II_normal #> # ‚Ñπ 77,048 more rows fl$plot() # or plot(fl)"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"Contains methods reading displaying contents mapping_metrics.csv file output DRAGEN. file contains mapping aligning metrics, like metrics computed Samtools Flagstat command. metrics available aggregate level (input data), per read group level. Unless explicitly stated, metrics units reads (.e., terms pairs alignments).","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"dracarys::File -> MappingMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"MappingMetricsFile$read() MappingMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"Reads mapping_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"","code":"MappingMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"tibble following columns: - category: summary read group - Phenotype: e.g. tumor, normal - RG: read group - var: metric variable - var_abbrev: metric variable abbreviation - count: count reads - pct: percentage reads","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"","code":"MappingMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.mapping_metrics.csv.gz\", package = \"dracarys\") mm <- MappingMetricsFile$new(x) mm$read() # or read(mm) #> # A tibble: 218 √ó 7 #>    category Phenotype RG    var                         var_abbrev   count   pct #>    <chr>    <chr>     <chr> <chr>                       <chr>        <dbl> <dbl> #>  1 summary  tumor     TOTAL Total Reads per RG          Tot         2.20e9 100   #>  2 summary  tumor     TOTAL Number of duplicate marked‚Ä¶ Dup         4.43e8  20.2 #>  3 summary  tumor     TOTAL Number of duplicate marked‚Ä¶ Dup Rem    NA       NA   #>  4 summary  tumor     TOTAL Number of unique reads (ex‚Ä¶ Unique      1.76e9  79.8 #>  5 summary  tumor     TOTAL Reads with mate sequenced   Mated       2.20e9 100   #>  6 summary  tumor     TOTAL Reads without mate sequenc‚Ä¶ noMated     0        0   #>  7 summary  tumor     TOTAL QC-failed reads             Failed      0        0   #>  8 summary  tumor     TOTAL Mapped reads                Mapped      2.20e9  99.8 #>  9 summary  tumor     TOTAL Mapped reads adjusted for ‚Ä¶ Mapped re‚Ä¶  2.20e9  99.8 #> 10 summary  tumor     TOTAL Mapped reads R1             R1map       1.10e9 100.  #> # ‚Ñπ 208 more rows"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiqcFile R6 Class ‚Äî MultiqcFile","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"Contains methods reading displaying contents multiqc_data.json file output MultiQC.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"dracarys::File -> MultiqcFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"MultiqcFile$read() MultiqcFile$write() MultiqcFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"Reads multiqc_data.json file output MultiQC.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"","code":"MultiqcFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"tidy tibble. label:","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"Writes tidy version multiqc_data.json file output MultiQC.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"","code":"MultiqcFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', ''). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"","code":"MultiqcFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MultiqcFile R6 Class ‚Äî MultiqcFile","text":"","code":"if (FALSE) { x <- \"/path/to/multiqc_data.json\" mqc <- MultiqcFile$new(x) mqc_parsed <- mqc$read() # or read(mqc) mqc$write(mqc_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") }"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PcgrJson R6 Class ‚Äî PcgrJsonFile","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"Contains methods reading displaying contents pcgr.json.gz file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"dracarys::File -> PcgrJsonFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"PcgrJsonFile$read() PcgrJsonFile$write() PcgrJsonFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"Reads pcgr.json.gz file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"","code":"PcgrJsonFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"List tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"Writes tidy version pcgr.json.gz file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"","code":"PcgrJsonFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"","code":"PcgrJsonFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PcgrJson R6 Class ‚Äî PcgrJsonFile","text":"","code":"if (FALSE) { x <- \"/path/to/pcgr.json.gz\" d <- PcgrJsonFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") }"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"Contains methods reading displaying contents pcgr.snvs_indels.tiers.tsv file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"dracarys::File -> PcgrTiersFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"PcgrTiersFile$read() PcgrTiersFile$write() PcgrTiersFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"Reads pcgr.snvs_indels.tiers.tsv file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"","code":"PcgrTiersFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"List tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"Writes tidy version pcgr.snvs_indels.tiers.tsv file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"","code":"PcgrTiersFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"","code":"PcgrTiersFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PcgrTiersFile R6 Class ‚Äî PcgrTiersFile","text":"","code":"if (FALSE) { x <- \"/path/to/pcgr.snvs_indels.tiers.tsv\" d <- PcgrTiersFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") }"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"Contains methods reading contents ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"dracarys::File -> PloidyEstimationMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"PloidyEstimationMetricsFile$read() PloidyEstimationMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"Reads ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"tibble following columns: - label: sample label (inferred file name) - var: variable interest (e.g. X median coverage) - value: value specific variable (e.g. X median coverage variable value  50)","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.ploidy_estimation_metrics.csv.gz\", package = \"dracarys\") pem <- PloidyEstimationMetricsFile$new(x) pem$read() # or read(pem) #> # A tibble: 28 √ó 3 #>    label   var                         value #>    <chr>   <chr>                       <chr> #>  1 SEQC-II Autosomal median coverage   56.31 #>  2 SEQC-II X median coverage           27.87 #>  3 SEQC-II Y median coverage           0.00  #>  4 SEQC-II 1 median / Autosomal median 1.01  #>  5 SEQC-II 2 median / Autosomal median 1.01  #>  6 SEQC-II 3 median / Autosomal median 1.02  #>  7 SEQC-II 4 median / Autosomal median 1.01  #>  8 SEQC-II 5 median / Autosomal median 1.01  #>  9 SEQC-II 6 median / Autosomal median 0.92  #> 10 SEQC-II 7 median / Autosomal median 1.00  #> # ‚Ñπ 18 more rows"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":null,"dir":"Reference","previous_headings":"","what":"ReplayFile R6 Class ‚Äî ReplayFile","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"Contains methods reading contents replay.json file output DRAGEN, contains DRAGEN command line, parameters version specific run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"dracarys::File -> ReplayFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"ReplayFile$read() ReplayFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"Reads replay.json file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"","code":"ReplayFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"list following elements: command_line: character DRAGEN command line used. dragen_config: tibble parameters used DRAGEN run. system: tibble dragen_version, nodename, kernel_release. label: character sample label (inferred file name) hash_table_build: tibble details DRAGEN hash table build.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"","code":"ReplayFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II-replay.json.gz\", package = \"dracarys\") r <- ReplayFile$new(x) r$read() # or read(r) #> $command_line #> [1] \"/opt/edico/bin/dragen --enable-variant-caller true --intermediate-results-dir /ephemeral/intermediate-results/ --cnv-use-somatic-vc-baf true --enable-cnv true --enable-duplicate-marking true --enable-map-align-output true --enable-sv true --fastq-list /ZnDLLh/fastq_list.csv --lic-instance-id-location /opt/instance-identity --output-directory SEQC-II_dragen_somatic --output-file-prefix SEQC-II --ref-dir /ephemeral/ref/hg38-v8-altaware-cnv-anchored/ --tumor-fastq-list /ZnDLLh/tumor_fastq_list.csv\" #>  #> $hash_table_build #> # A tibble: 3 √ó 2 #>   name                 value                                                     #>   <chr>                <chr>                                                     #> 1 sw_version           01.003.044.3.5.3-38-gefdaeaff                             #> 2 hash_table_version   8                                                         #> 3 command_line_options /opt/edico/bin/dragen --lic-instance-id-location /root/.‚Ä¶ #>  #> $dragen_config #> # A tibble: 470 √ó 2 #>    name                    value #>    <chr>                   <chr> #>  1 Aligner.align-direction 4     #>  2 Aligner.aln-en-mask     15    #>  3 Aligner.aln-enable      1     #>  4 Aligner.backtrace-delay 8     #>  5 Aligner.bed-score-bonus 0     #>  6 Aligner.chicken         0     #>  7 Aligner.dedup-min-qual  15    #>  8 Aligner.disable-lfsr    0     #>  9 Aligner.en-alt-hap-aln  1     #> 10 Aligner.en-chimeric-aln 1     #> # ‚Ñπ 460 more rows #>  #> $system #> # A tibble: 3 √ó 2 #>   name           value                                      #>   <chr>          <chr>                                      #> 1 dragen_version 05.021.609.3.9.3                           #> 2 nodename       trn.6f62637e545a418f8dfe9ce587e571d7-gt4mv #> 3 kernel_release 5.4.141-67.229.amzn2.x86_64                #>  #> $label #> [1] \"SEQC-II\" #>"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"Contains methods reading contents time_metrics.csv file output DRAGEN, contains breakdown run duration DRAGEN process.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"dracarys::File -> TimeMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"TimeMetricsFile$read() TimeMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"Reads time_metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"","code":"TimeMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"tibble following columns: Step: DRAGEN step Time: time HH:MM","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"","code":"TimeMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.time_metrics.csv.gz\", package = \"dracarys\") tm <- TimeMetricsFile$new(x) tm$read() # or read(tm) #> # A tibble: 19 √ó 3 #>    Label   Step                           Time  #>    <chr>   <chr>                          <chr> #>  1 SEQC-II Loading Reference              00:01 #>  2 SEQC-II Aligning Reads                 00:35 #>  3 SEQC-II Duplicate Marking              00:01 #>  4 SEQC-II Sorting and Marking Duplicates 01:31 #>  5 SEQC-II DRAGStr Calibration            00:00 #>  6 SEQC-II Saving Map/Align Output        01:31 #>  7 SEQC-II Partial Reconfiguration        00:00 #>  8 SEQC-II Variant Calling                01:31 #>  9 SEQC-II Calculating Target Counts      00:36 #> 10 SEQC-II Correcting GC Bias             00:00 #> 11 SEQC-II Normalizing Case Sample        00:00 #> 12 SEQC-II Performing Segmentation        00:00 #> 13 SEQC-II Generating Somatic Model Input 00:17 #> 14 SEQC-II Fitting Somatic Model          00:00 #> 15 SEQC-II Generating CNV Calls           00:00 #> 16 SEQC-II Generating CNV Track Files     00:00 #> 17 SEQC-II Partitioning                   00:35 #> 18 SEQC-II Structural Variant Calling     01:38 #> 19 SEQC-II Total Runtime                  04:10"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"Contains methods reading displaying contents AlignCollapseFusionCaller_metrics.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"dracarys::File -> TsoAlignCollapseFusionCallerMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"TsoAlignCollapseFusionCallerMetricsFile$read() TsoAlignCollapseFusionCallerMetricsFile$write() TsoAlignCollapseFusionCallerMetricsFile$plot() TsoAlignCollapseFusionCallerMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"Reads AlignCollapseFusionCaller_metrics.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"tibble following columns: section: name original JSON element name: name metric value: value metric percent: percentage","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"Writes tidy version AlignCollapseFusionCaller_metrics.json.gz file output TSO. Histo majority UmiStatistics section, write separately. Histo num supporting fragments: Num families 0/1/2/3... raw reads. Histo unique UMIs per fragment pos: Num pos 0/1/2/3... UMI seqs.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', ''). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"Generates UmiStatistics Histogram plots AlignCollapseFusionCaller_metrics.json.gz file output TSO. Histo majority UmiStatistics section, deal separately. Histo num supporting fragments: Num families 0/1/2/3... raw reads. Histo unique UMIs per fragment pos: Num pos 0/1/2/3... UMI seqs.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$plot(d, max_num = 15)"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"d Parsed object self$read(). max_num Maximum number display plots.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"histogram plot objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.AlignCollapseFusionCaller_metrics.json.gz\",   package = \"dracarys\" ) m <- TsoAlignCollapseFusionCallerMetricsFile$new(x) d_parsed <- m$read() # or read(m) m$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = c(\"tsv\", \"rds\"))"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"Contains methods reading displaying contents fragment_length_hist.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"dracarys::File -> TsoFragmentLengthHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"TsoFragmentLengthHistFile$read() TsoFragmentLengthHistFile$write() TsoFragmentLengthHistFile$plot() TsoFragmentLengthHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"Reads fragment_length_hist.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"tibble following columns: FragmentLength Count","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"Writes tidy version fragment_length_hist.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"Plots fragment length distributions given fragment_length_hist.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$plot(d, min_count = 10)"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"d Parsed object self$read(). min_count Minimum read count plotted (Default: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"ggplot2 plot containing fragment lengths X axis read counts Y axis sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.fragment_length_hist.json.gz\", package = \"dracarys\") fl <- TsoFragmentLengthHistFile$new(x) d_parsed <- fl$read() # or read(fl) fl$plot(d_parsed, 5)  fl$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"Contains methods reading displaying contents Fusions.csv file output TSO. Returns tibble columns (based input file header metadata): Sample: input sample ID. Name: Fusion name reported manta. Chr1/Chr2: chromosome 1st/2nd breakend. Pos1/Pos2: position 1st/2nd breakend. Direction: direction breakends joined together. Alt_Depth: number read-pairs supporting fusion call. BP1_Depth/BP2_Depth: Number read-pairs aligned 1st/2nd breakend. Total_Depth: Max number read-pairs aligned fusion breakend. VAF: Variant allele frequency. Gene1/Gene2: Genes overlap 1st/2nd breakend. Contig: fusion contig. Filter: Indicates whether fusion passed fusion filters. Is_Cosmic_GenePair: Indicates whether gene pair reported Cosmic(True/False).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"dracarys::File -> TsoFusionsCsvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"TsoFusionsCsvFile$read() TsoFusionsCsvFile$write() TsoFusionsCsvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"Reads Fusions.csv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"","code":"TsoFusionsCsvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"tibble several columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"Writes tidy version Fusions.csv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"","code":"TsoFusionsCsvFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"","code":"TsoFusionsCsvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"","code":"x <- system.file(\"extdata/tso/sample705_Fusions.csv\", package = \"dracarys\") fus <- TsoFusionsCsvFile$new(x) d_parsed <- fus$read() # or read(fus) fus$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"Contains methods reading displaying contents MergedSmallVariants.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"dracarys::File -> TsoMergedSmallVariantsVcfFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"TsoMergedSmallVariantsVcfFile$read() TsoMergedSmallVariantsVcfFile$write() TsoMergedSmallVariantsVcfFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"Reads MergedSmallVariants.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"","code":"TsoMergedSmallVariantsVcfFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"tibble variants.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"Writes tidy version MergedSmallVariants.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"","code":"TsoMergedSmallVariantsVcfFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"","code":"TsoMergedSmallVariantsVcfFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoMergedSmallVariantsVcfFile R6 Class ‚Äî TsoMergedSmallVariantsVcfFile","text":"","code":"if (FALSE) { x <- here::here(\"nogit/tso/2023-05-30/SBJ00595_L2100178/PTC_SrSqCMM1pc_L2100178_rerun_MergedSmallVariants.vcf.gz\") d <- TsoMergedSmallVariantsVcfFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\") d$write(d_parsed, prefix = \"FOO\", out_format = \"delta\", drid = \"wfr.123\") }"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"Contains methods reading displaying contents msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"dracarys::File -> TsoMsiFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"TsoMsiFile$read() TsoMsiFile$write() TsoMsiFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"Reads msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"","code":"TsoMsiFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"tibble following columns: label:","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"Writes tidy version msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"","code":"TsoMsiFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"","code":"TsoMsiFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.msi.json.gz\", package = \"dracarys\") msi <- TsoMsiFile$new(x) d_parsed <- msi$read() # or read(msi) msi$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"Contains methods reading displaying contents SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"dracarys::File -> TsoSampleAnalysisResultsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"TsoSampleAnalysisResultsFile$read() TsoSampleAnalysisResultsFile$write() TsoSampleAnalysisResultsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"Reads SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"list tibbles","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"Writes tidy version SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"","code":"x <- system.file(\"extdata/tso/sample705_SampleAnalysisResults.json.gz\", package = \"dracarys\") res <- TsoSampleAnalysisResultsFile$new(x) d_parsed <- res$read() # or read(res) res$write(d_parsed, tempfile(), \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"Contains methods reading displaying contents TargetRegionCoverage.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"dracarys::File -> TsoTargetRegionCoverageFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"TsoTargetRegionCoverageFile$read() TsoTargetRegionCoverageFile$write() TsoTargetRegionCoverageFile$plot() TsoTargetRegionCoverageFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"Reads TargetRegionCoverage.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"tibble following columns: ConsensusReadDepth BasePair Percentage","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"Writes tidy version TargetRegionCoverage.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"Plots TargetRegionCoverage.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$plot(d, min_pct = 2)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"d Parsed object self$read(). min_pct Minimum percentage plotted (Default: 2).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"ggplot2 plot containing read depth X axis percentage covered Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.TargetRegionCoverage.json.gz\", package = \"dracarys\") trc <- TsoTargetRegionCoverageFile$new(x) d_parsed <- trc$read() # or read(trc) trc$plot(d_parsed, 90) # or plot(trc, d_parsed, 90)  trc$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"Contains methods reading displaying contents tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"dracarys::File -> TsoTmbFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"TsoTmbFile$read() TsoTmbFile$write() TsoTmbFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"Reads tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"","code":"TsoTmbFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"tibble following columns: TmbPerMb AdjustedTmbPerMb NonsynonymousTmbPerMb AdjustedNonsynonymousTmbPerMb SomaticCodingVariantsCount NonsynonymousSomaticCodingVariantsCount TotalRegionSizeMb CodingRegionSizeMb","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"Writes tidy version tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"","code":"TsoTmbFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"","code":"TsoTmbFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.tmb.json.gz\", package = \"dracarys\") tmb <- TsoTmbFile$new(x) d_parsed <- tmb$read() # or read(tmb) tmb$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"Contains methods reading displaying contents TMB_Trace.tsv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"dracarys::File -> TsoTmbTraceTsvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"TsoTmbTraceTsvFile$read() TsoTmbTraceTsvFile$write() TsoTmbTraceTsvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"Reads TMB_Trace.tsv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"","code":"TsoTmbTraceTsvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"tibble variants.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"Writes tidy version TMB_Trace.tsv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"","code":"TsoTmbTraceTsvFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"","code":"TsoTmbTraceTsvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"","code":"x <- system.file(\"extdata/tso/sample705_TMB_Trace.tsv\", package = \"dracarys\") d <- TsoTmbTraceTsvFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"Contains methods reading displaying contents chord.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"dracarys::File -> UmChordTsvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"UmChordTsvFile$read() UmChordTsvFile$write() UmChordTsvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"Reads chord.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"","code":"UmChordTsvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"Writes tidy version chord.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"","code":"UmChordTsvFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"","code":"UmChordTsvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UmChordTsvFile R6 Class ‚Äî UmChordTsvFile","text":"","code":"if (FALSE) { x <- \"/path/to/chord.tsv.gz\" d <- UmChordTsvFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") }"},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"Contains methods reading displaying contents hrdetect.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"dracarys::File -> UmHrdetectTsvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"UmHrdetectTsvFile$read() UmHrdetectTsvFile$write() UmHrdetectTsvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"Reads hrdetect.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"","code":"UmHrdetectTsvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"Writes tidy version hrdetect.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"","code":"UmHrdetectTsvFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"","code":"UmHrdetectTsvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UmHrdetectTsvFile R6 Class ‚Äî UmHrdetectTsvFile","text":"","code":"if (FALSE) { x <- \"/path/to/hrdetect.tsv.gz\" d <- UmHrdetectTsvFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") }"},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":null,"dir":"Reference","previous_headings":"","what":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"Contains methods reading displaying contents qc_summary.tsv.gz file QC summary metrics output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"dracarys::File -> UmQcSumFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"UmQcSumFile$read() UmQcSumFile$write() UmQcSumFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"Reads qc_summary.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"","code":"UmQcSumFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"Writes tidy version qc_summary.tsv.gz QC summary file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"","code":"UmQcSumFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"","code":"UmQcSumFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UmQcSumFile R6 Class ‚Äî UmQcSumFile","text":"","code":"if (FALSE) { x <- \"/path/to/snv_2015.tsv.gz\" d <- UmQcSumFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") }"},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"Contains methods reading displaying contents snv_20XX.tsv.gz file SNV signatures output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"dracarys::File -> UmSigsSnvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"UmSigsSnvFile$read() UmSigsSnvFile$write() UmSigsSnvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"Reads snv.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"","code":"UmSigsSnvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"Writes tidy version snv_20XX.tsv.gz signature file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"","code":"UmSigsSnvFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"","code":"UmSigsSnvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UmSigsSnvFile R6 Class ‚Äî UmSigsSnvFile","text":"","code":"if (FALSE) { x <- \"/path/to/snv_2015.tsv.gz\" d <- UmSigsSnvFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") }"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"Contains methods reading displaying contents vc_metrics.csv file output DRAGEN, contains variant calling metrics. reported sample multi sample VCF gVCF files. Based run case, metrics reported either standard VARIANT CALLER JOINT CALLER. Metrics reported raw (PREFILTER) hard filtered (POSTFILTER) VCFs. PON (Panel Normals) COSMIC filtered variants counted though PASS variants POSTFILTER VCFs metrics, may result higher expected variant counts POSTFILTER VCF metrics.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"dracarys::File -> VCMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"VCMetricsFile$read() VCMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"Reads vc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"","code":"VCMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"tibble following columns: category sample var: variable name count: count value pct: percent value","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"","code":"VCMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.vc_metrics.csv.gz\", package = \"dracarys\") vm <- VCMetricsFile$new(x) vm$read() # or read(vm) #> # A tibble: 45 √ó 5 #>    category  sample           var                    count    pct #>    <chr>     <chr>            <chr>                  <dbl>  <dbl> #>  1 summary   \"\"               Number of samples          1  NA    #>  2 summary   \"\"               Reads Processed   2617162106  NA    #>  3 summary   \"\"               Child Sample              NA  NA    #>  4 prefilter \"SEQC-II_tumour\" Total                 177975 100    #>  5 prefilter \"SEQC-II_tumour\" Biallelic             177975 100    #>  6 prefilter \"SEQC-II_tumour\" Multiallelic               0   0    #>  7 prefilter \"SEQC-II_tumour\" SNPs                  143829  80.8  #>  8 prefilter \"SEQC-II_tumour\" Insertions (Hom)           0   0    #>  9 prefilter \"SEQC-II_tumour\" Insertions (Het)       16354   9.19 #> 10 prefilter \"SEQC-II_tumour\" Deletions (Hom)            0   0    #> # ‚Ñπ 35 more rows"},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse VCF with bcftools ‚Äî bcftools_parse_vcf","title":"Parse VCF with bcftools ‚Äî bcftools_parse_vcf","text":"Parse VCF bcftools. Uses bcftools hood heavy lifting field splitting, converts parsed character vector tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse VCF with bcftools ‚Äî bcftools_parse_vcf","text":"","code":"bcftools_parse_vcf(vcf, only_pass = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse VCF with bcftools ‚Äî bcftools_parse_vcf","text":"vcf VCF one samples. only_pass Keep PASS variants (TRUE default)?","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse VCF with bcftools ‚Äî bcftools_parse_vcf","text":"tibble main, FORMAT, INFO fields detected VCF header columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse VCF regions with bcftools ‚Äî bcftools_parse_vcf_regions","title":"Parse VCF regions with bcftools ‚Äî bcftools_parse_vcf_regions","text":"Parses VCF regions bcftools. VCF subset written temporary file local filesystem, parsed tibble object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse VCF regions with bcftools ‚Äî bcftools_parse_vcf_regions","text":"","code":"bcftools_parse_vcf_regions(vcf, r, only_pass = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse VCF regions with bcftools ‚Äî bcftools_parse_vcf_regions","text":"vcf Path VCF. Can S3, http local. presigned URL, need also concatenate VCF index 'vcf_url##idx##vcfi_url'. r Character vector regions subset (e.g. c('chr1:123-456', 'chr2:789-1000')) only_pass Keep PASS variants (TRUE default)?","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse VCF regions with bcftools ‚Äî bcftools_parse_vcf_regions","text":"tibble main, FORMAT, INFO fields detected VCF header columns, regions specified r ().","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse VCF regions with bcftools ‚Äî bcftools_parse_vcf_regions","text":"","code":"if (FALSE) { vcf_local <- here::here(\"nogit/tso/2023-05-30/SBJ00595_L2100178/PTC_SrSqCMM1pc_L2100178_rerun_MergedSmallVariants.vcf.gz\") r <- c(\"chr1:115256529-115256529\", \"chr2:29443613-29443613\") bcftools_parse_vcf_regions(vcf_local, r) }"},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Print current timestamp for logging ‚Äî date_log","title":"Print current timestamp for logging ‚Äî date_log","text":"Print current timestamp logging","code":""},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print current timestamp for logging ‚Äî date_log","text":"","code":"date_log()"},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print current timestamp for logging ‚Äî date_log","text":"Current timestamp character.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate dracarys Function ‚Äî dr_func_eval","title":"Evaluate dracarys Function ‚Äî dr_func_eval","text":"somewhat hack getting function evaluate based lookup vector. function found, returns NULL.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate dracarys Function ‚Äî dr_func_eval","text":"","code":"dr_func_eval(f, v = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate dracarys Function ‚Äî dr_func_eval","text":"f Name function evaluate. v Character vector strings evaluating functions. default, points functions DR_FILE_REGEX dracarys tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate dracarys Function ‚Äî dr_func_eval","text":"Evaluated function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate dracarys Function ‚Äî dr_func_eval","text":"","code":"mean_1_to_10 <- dr_func_eval(\"mean\", v = c(\"mean\", \"sd\"))(1:10) x <- system.file(\"extdata/tso/sample705.fragment_length_hist.json.gz\", package = \"dracarys\") obj <- dr_func_eval(\"TsoFragmentLengthHistFile\")$new(x)"},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys GDS Download ‚Äî dr_gds_download","title":"dracarys GDS Download ‚Äî dr_gds_download","text":"Download GDS files can processed dracarys.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dracarys GDS Download ‚Äî dr_gds_download","text":"","code":"dr_gds_download(   gdsdir,   outdir,   token,   pattern = NULL,   dryrun = FALSE,   regexes = DR_FILE_REGEX )"},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dracarys GDS Download ‚Äî dr_gds_download","text":"gdsdir Full path GDS directory. outdir Path output directory. token ICA access token (def: $ICA_ACCESS_TOKEN env var). pattern Pattern filter returned file type tibble. dryrun TRUE, just list files downloaded (download ).","code":""},{"path":"https://umccr.github.io/dracarys/reference/dracarys-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys: Post-processing DRAGEN workflows ‚Äî dracarys-package","title":"dracarys: Post-processing DRAGEN workflows ‚Äî dracarys-package","text":"Post-processing DRAGEN workflows.","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/dracarys-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dracarys: Post-processing DRAGEN workflows ‚Äî dracarys-package","text":"Maintainer: Peter Diakumis peterdiakumis@gmail.com (ORCID) Authors: Victor San Kho Lin (ORCID) [contributor]","code":""},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Empty Tibble Given Column Names ‚Äî empty_tbl","title":"Create Empty Tibble Given Column Names ‚Äî empty_tbl","text":"https://stackoverflow.com//62535671/2169986. Useful handling edge cases empty data.","code":""},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Empty Tibble Given Column Names ‚Äî empty_tbl","text":"","code":"empty_tbl(cnames, ctypes = readr::cols(.default = \"c\"))"},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Empty Tibble Given Column Names ‚Äî empty_tbl","text":"cnames Character vector column names use. ctypes Character vector column types corresponding cnames.","code":""},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Empty Tibble Given Column Names ‚Äî empty_tbl","text":"tibble 0 rows given column names.","code":""},{"path":"https://umccr.github.io/dracarys/reference/file_regex_getter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dracarys `DR_FILE_REGEX`` ‚Äî file_regex_getter","title":"Get dracarys `DR_FILE_REGEX`` ‚Äî file_regex_getter","text":"Get dracarys `DR_FILE_REGEX``","code":""},{"path":"https://umccr.github.io/dracarys/reference/file_regex_getter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dracarys `DR_FILE_REGEX`` ‚Äî file_regex_getter","text":"","code":"file_regex_getter()"},{"path":"https://umccr.github.io/dracarys/reference/file_regex_getter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dracarys `DR_FILE_REGEX`` ‚Äî file_regex_getter","text":"DR_FILE_REGEX R tibble object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Download via CLI ‚Äî gds_file_download","title":"GDS File Download via CLI ‚Äî gds_file_download","text":"GDS File Download via CLI","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Download via CLI ‚Äî gds_file_download","text":"","code":"gds_file_download(gds, out, token = Sys.getenv(\"ICA_ACCESS_TOKEN\"))"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Download via CLI ‚Äî gds_file_download","text":"gds Full path GDS file. Path output file. token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Download via API ‚Äî gds_file_download_api","title":"GDS File Download via API ‚Äî gds_file_download_api","text":"GDS File Download via API","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Download via API ‚Äî gds_file_download_api","text":"","code":"gds_file_download_api(gds_fileid, out_file, token)"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Download via API ‚Äî gds_file_download_api","text":"gds_fileid GDS file ID. out_file Path output file. token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GDS File Download via API ‚Äî gds_file_download_api","text":"","code":"if (FALSE) { gds_fileid <- \"fil.f9aa2ba7af0c4330095d08dadd2e16b0\" out <- tempfile() token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") }"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Presigned URL ‚Äî gds_file_presignedurl","title":"GDS File Presigned URL ‚Äî gds_file_presignedurl","text":"Returns presigned URL given GDS file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Presigned URL ‚Äî gds_file_presignedurl","text":"","code":"gds_file_presignedurl(gds_fileid, token)"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Presigned URL ‚Äî gds_file_presignedurl","text":"gds_fileid GDS file ID. token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GDS File Presigned URL ‚Äî gds_file_presignedurl","text":"Presigned URL valid.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS Files List ‚Äî gds_files_list","title":"GDS Files List ‚Äî gds_files_list","text":"List files ICA GDS filesystem.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS Files List ‚Äî gds_files_list","text":"","code":"gds_files_list(gdsdir, token, page_size = 100, include = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS Files List ‚Äî gds_files_list","text":"gdsdir Full path GDS directory. token ICA access token (def: $ICA_ACCESS_TOKEN env var). page_size Page size (def: 100). include Use PresignedUrl include presigned URLs files within GDS directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GDS Files List ‚Äî gds_files_list","text":"Tibble file basename, file size, file full data path, file dir name.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_filter_relevant.html","id":null,"dir":"Reference","previous_headings":"","what":"List Relevant Files In GDS Directory ‚Äî gds_files_list_filter_relevant","title":"List Relevant Files In GDS Directory ‚Äî gds_files_list_filter_relevant","text":"Lists relevant files GDS directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_filter_relevant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Relevant Files In GDS Directory ‚Äî gds_files_list_filter_relevant","text":"","code":"gds_files_list_filter_relevant(gdsdir, token, pattern = NULL, include = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_filter_relevant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Relevant Files In GDS Directory ‚Äî gds_files_list_filter_relevant","text":"gdsdir GDS directory. token ICA access token. pattern Pattern filter returned file type tibble. include Use PresignedUrl include presigned URLs files within GDS directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_filter_relevant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Relevant Files In GDS Directory ‚Äî gds_files_list_filter_relevant","text":"tibble type, bname, size, file_id, path, presigned URL.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List GDS Volumes ‚Äî gds_volumes_list","title":"List GDS Volumes ‚Äî gds_volumes_list","text":"Lists GDS volumes accessible provided ICA token.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List GDS Volumes ‚Äî gds_volumes_list","text":"","code":"gds_volumes_list(token, page_size = 10)"},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List GDS Volumes ‚Äî gds_volumes_list","text":"token ICA access token (def: $ICA_ACCESS_TOKEN env var). page_size Page size (def: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List GDS Volumes ‚Äî gds_volumes_list","text":"tibble vol name vol id.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate ICA access token ‚Äî ica_token_validate","title":"Validate ICA access token ‚Äî ica_token_validate","text":"Validates ICA access token parsing checking expiration date.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate ICA access token ‚Äî ica_token_validate","text":"","code":"ica_token_validate(token = Sys.getenv(\"ICA_ACCESS_TOKEN\"))"},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate ICA access token ‚Äî ica_token_validate","text":"token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate ICA access token ‚Äî ica_token_validate","text":"Returns token valid, else errors .","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Match File to Regex ‚Äî match_regex","title":"Match File to Regex ‚Äî match_regex","text":"Matches given file regexes found DR_FILE_REGEX match, returns 'name' match.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match File to Regex ‚Äî match_regex","text":"","code":"match_regex(x, regexes = DR_FILE_REGEX)"},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match File to Regex ‚Äî match_regex","text":"x File match. regexes Tibble regex function name.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match File to Regex ‚Äî match_regex","text":"function corresponding matching regex DR_FILE_REGEX, NA match made.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match File to Regex ‚Äî match_regex","text":"","code":"match_regex(\"foo.msi.json.gz\") #> [1] \"TsoMsiFile\" match_regex(\"foo.fake.tsv\") #> [1] NA"},{"path":"https://umccr.github.io/dracarys/reference/meta_bcl_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for bcl_convert workflow ‚Äî meta_bcl_convert","title":"Metadata for bcl_convert workflow ‚Äî meta_bcl_convert","text":"Metadata bcl_convert workflow","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_bcl_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for bcl_convert workflow ‚Äî meta_bcl_convert","text":"","code":"meta_bcl_convert(pmeta, status = \"Succeeded\")"},{"path":"https://umccr.github.io/dracarys/reference/meta_bcl_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for bcl_convert workflow ‚Äî meta_bcl_convert","text":"pmeta Path portal workflows metadata table, tibble already parsed data. status Workflow status keep (default: Succeeded).","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_bcl_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for bcl_convert workflow ‚Äî meta_bcl_convert","text":"tibble metadata per workflow run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_bcl_convert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for bcl_convert workflow ‚Äî meta_bcl_convert","text":"","code":"pmeta <- system.file(\"extdata/portal_meta_top4.csv\", package = \"dracarys\") (m <- meta_bcl_convert(pmeta)) #> Error in portal_meta_read(pmeta): pmeta should be an already parsed dataframe or a local file."},{"path":"https://umccr.github.io/dracarys/reference/meta_rnasum.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for rnasum workflow ‚Äî meta_rnasum","title":"Metadata for rnasum workflow ‚Äî meta_rnasum","text":"Metadata rnasum workflow","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_rnasum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for rnasum workflow ‚Äî meta_rnasum","text":"","code":"meta_rnasum(pmeta, status = \"Succeeded\")"},{"path":"https://umccr.github.io/dracarys/reference/meta_rnasum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for rnasum workflow ‚Äî meta_rnasum","text":"pmeta Path portal workflows metadata table, tibble already parsed data. status Workflow status keep (default: Succeeded).","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_rnasum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for rnasum workflow ‚Äî meta_rnasum","text":"tibble metadata per workflow run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_rnasum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for rnasum workflow ‚Äî meta_rnasum","text":"","code":"pmeta <- system.file(\"extdata/portal_meta_top4.csv\", package = \"dracarys\") (m <- meta_rnasum(pmeta)) #> Error in portal_meta_read(pmeta): pmeta should be an already parsed dataframe or a local file."},{"path":"https://umccr.github.io/dracarys/reference/meta_tso_ctdna_tumor_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for tso_ctdna_tumor_only workflow ‚Äî meta_tso_ctdna_tumor_only","title":"Metadata for tso_ctdna_tumor_only workflow ‚Äî meta_tso_ctdna_tumor_only","text":"Metadata tso_ctdna_tumor_only workflow","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_tso_ctdna_tumor_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for tso_ctdna_tumor_only workflow ‚Äî meta_tso_ctdna_tumor_only","text":"","code":"meta_tso_ctdna_tumor_only(pmeta, status = c(\"Succeeded\"))"},{"path":"https://umccr.github.io/dracarys/reference/meta_tso_ctdna_tumor_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for tso_ctdna_tumor_only workflow ‚Äî meta_tso_ctdna_tumor_only","text":"pmeta Path portal workflows metadata table, tibble already parsed data. status Workflow status keep (default: Succeeded).","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_tso_ctdna_tumor_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for tso_ctdna_tumor_only workflow ‚Äî meta_tso_ctdna_tumor_only","text":"tibble metadata per workflow run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_tso_ctdna_tumor_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for tso_ctdna_tumor_only workflow ‚Äî meta_tso_ctdna_tumor_only","text":"","code":"pmeta <- system.file(\"extdata/portal_meta_top4.csv\", package = \"dracarys\") (m <- meta_tso_ctdna_tumor_only(pmeta)) #> Error in portal_meta_read(pmeta): pmeta should be an already parsed dataframe or a local file."},{"path":"https://umccr.github.io/dracarys/reference/meta_umccrise.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for umccrise workflow ‚Äî meta_umccrise","title":"Metadata for umccrise workflow ‚Äî meta_umccrise","text":"Metadata umccrise workflow","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_umccrise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for umccrise workflow ‚Äî meta_umccrise","text":"","code":"meta_umccrise(pmeta, status = \"Succeeded\")"},{"path":"https://umccr.github.io/dracarys/reference/meta_umccrise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for umccrise workflow ‚Äî meta_umccrise","text":"pmeta Path portal workflows metadata table, tibble already parsed data. status Workflow status keep (default: Succeeded).","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_umccrise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for umccrise workflow ‚Äî meta_umccrise","text":"tibble metadata per workflow run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_umccrise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for umccrise workflow ‚Äî meta_umccrise","text":"","code":"pmeta <- system.file(\"extdata/portal_meta_top4.csv\", package = \"dracarys\") (m <- meta_umccrise(pmeta)) #> Error in portal_meta_read(pmeta): pmeta should be an already parsed dataframe or a local file."},{"path":"https://umccr.github.io/dracarys/reference/meta_wgs_alignment_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for wgs_alignment_qc workflow ‚Äî meta_wgs_alignment_qc","title":"Metadata for wgs_alignment_qc workflow ‚Äî meta_wgs_alignment_qc","text":"Metadata wgs_alignment_qc workflow","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_wgs_alignment_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for wgs_alignment_qc workflow ‚Äî meta_wgs_alignment_qc","text":"","code":"meta_wgs_alignment_qc(pmeta, status = \"Succeeded\")"},{"path":"https://umccr.github.io/dracarys/reference/meta_wgs_alignment_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for wgs_alignment_qc workflow ‚Äî meta_wgs_alignment_qc","text":"pmeta Path portal workflows metadata table, tibble already parsed data. status Workflow status keep (default: Succeeded).","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_wgs_alignment_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for wgs_alignment_qc workflow ‚Äî meta_wgs_alignment_qc","text":"tibble metadata per workflow run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_wgs_alignment_qc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for wgs_alignment_qc workflow ‚Äî meta_wgs_alignment_qc","text":"","code":"pmeta <- system.file(\"extdata/portal_meta_top4.csv\", package = \"dracarys\") (m <- meta_wgs_alignment_qc(pmeta)) #> Error in portal_meta_read(pmeta): pmeta should be an already parsed dataframe or a local file."},{"path":"https://umccr.github.io/dracarys/reference/meta_wgs_tumor_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for wgs_tumor_normal workflow ‚Äî meta_wgs_tumor_normal","title":"Metadata for wgs_tumor_normal workflow ‚Äî meta_wgs_tumor_normal","text":"Metadata wgs_tumor_normal workflow","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_wgs_tumor_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for wgs_tumor_normal workflow ‚Äî meta_wgs_tumor_normal","text":"","code":"meta_wgs_tumor_normal(pmeta, status = \"Succeeded\")"},{"path":"https://umccr.github.io/dracarys/reference/meta_wgs_tumor_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for wgs_tumor_normal workflow ‚Äî meta_wgs_tumor_normal","text":"pmeta Path portal workflows metadata table, tibble already parsed data. status Workflow status keep (default: Succeeded).","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_wgs_tumor_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for wgs_tumor_normal workflow ‚Äî meta_wgs_tumor_normal","text":"tibble metadata per workflow run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_wgs_tumor_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for wgs_tumor_normal workflow ‚Äî meta_wgs_tumor_normal","text":"","code":"pmeta <- system.file(\"extdata/portal_meta_top4.csv\", package = \"dracarys\") (m <- meta_wgs_tumor_normal(pmeta)) #> Error in portal_meta_read(pmeta): pmeta should be an already parsed dataframe or a local file."},{"path":"https://umccr.github.io/dracarys/reference/meta_wts_tumor_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata for wts_tumor_only workflow ‚Äî meta_wts_tumor_only","title":"Metadata for wts_tumor_only workflow ‚Äî meta_wts_tumor_only","text":"Metadata wts_tumor_only workflow","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_wts_tumor_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata for wts_tumor_only workflow ‚Äî meta_wts_tumor_only","text":"","code":"meta_wts_tumor_only(pmeta, status = \"Succeeded\")"},{"path":"https://umccr.github.io/dracarys/reference/meta_wts_tumor_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata for wts_tumor_only workflow ‚Äî meta_wts_tumor_only","text":"pmeta Path portal workflows metadata table, tibble already parsed data. status Workflow status keep (default: Succeeded).","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_wts_tumor_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata for wts_tumor_only workflow ‚Äî meta_wts_tumor_only","text":"tibble metadata per workflow run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/meta_wts_tumor_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata for wts_tumor_only workflow ‚Äî meta_wts_tumor_only","text":"","code":"pmeta <- system.file(\"extdata/portal_meta_top4.csv\", package = \"dracarys\") (m <- meta_wts_tumor_only(pmeta)) #> Error in portal_meta_read(pmeta): pmeta should be an already parsed dataframe or a local file."},{"path":"https://umccr.github.io/dracarys/reference/multiqc_column_map_append.html","id":null,"dir":"Reference","previous_headings":"","what":"Append New MultiQC Workflow Columns ‚Äî multiqc_column_map_append","title":"Append New MultiQC Workflow Columns ‚Äî multiqc_column_map_append","text":"Append New MultiQC Workflow Columns","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_column_map_append.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append New MultiQC Workflow Columns ‚Äî multiqc_column_map_append","text":"","code":"multiqc_column_map_append(d, w, m)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_column_map_append.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append New MultiQC Workflow Columns ‚Äî multiqc_column_map_append","text":"d Tidy MultiQC tibble raw names (.e. pre-rename). w New workflow name. m Path 'inst/extdata/multiqc_column_map.tsv' dracarys file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Format MultiQC Config Date ‚Äî multiqc_date_fmt","title":"Format MultiQC Config Date ‚Äî multiqc_date_fmt","text":"Format MultiQC Config Date","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format MultiQC Config Date ‚Äî multiqc_date_fmt","text":"","code":"multiqc_date_fmt(cdate)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format MultiQC Config Date ‚Äî multiqc_date_fmt","text":"cdate String config date \"YYYY-MM-DD, HH:MM UTC\" format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format MultiQC Config Date ‚Äî multiqc_date_fmt","text":"Properly formatted datetime string \"YYYY-MM-DDTHH:MM:SS\" format. input string formatted differently, return NA.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format MultiQC Config Date ‚Äî multiqc_date_fmt","text":"","code":"cdate <- \"2023-04-07, 09:09 UTC\" (res1 <- multiqc_date_fmt(cdate)) #> [1] \"2023-04-07T09:09:00\" (res2 <- multiqc_date_fmt(\"2023-04-07\")) #> [1] NA (res3 <- multiqc_date_fmt(\"UNKNOWN\")) #> [1] NA"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiQC Extract Bar Graph Data ‚Äî multiqc_parse_bargraph_plot","title":"MultiQC Extract Bar Graph Data ‚Äî multiqc_parse_bargraph_plot","text":"Extracts bar_graph data given plot name MultiQC JSON. bar_graph element JSON object contains:","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiQC Extract Bar Graph Data ‚Äî multiqc_parse_bargraph_plot","text":"","code":"multiqc_parse_bargraph_plot(dat)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiQC Extract Bar Graph Data ‚Äî multiqc_parse_bargraph_plot","text":"dat Parsed JSON list element specific plot data extract.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiQC Extract Bar Graph Data ‚Äî multiqc_parse_bargraph_plot","text":"Tibble name data list-column.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MultiQC Extract Bar Graph Data ‚Äî multiqc_parse_bargraph_plot","text":"samples array N subarrays (strings) length . datasets array N subarrays (objects) length B. subarrays contains name (single string) data (array length equal length index-corresponding samples subarray).","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MultiQC Extract Bar Graph Data ‚Äî multiqc_parse_bargraph_plot","text":"","code":"if (FALSE) { j1 <- here::here(\"nogit/bcl_convert/multiqc_data.json\") j2 <- here::here(\"nogit/warehouse/wgs_tumor_normal/SBJ03197/2023-04-30_0813ce/dracarys_gds_sync/multiqc_data.json\") j <- j1 j <- j2 multiqc_list_plots(j) parsed <- RJSONIO::fromJSON(j) dat <- parsed$report_plot_data$mapping_dup_percentage_plot dat <- parsed$report_plot_data$time_metrics_plot dat <- parsed$report_plot_data$bclconvert_lane_counts dat <- parsed$report_plot_data$bclconvert_sample_counts multiqc_parse_bargraph_plot(dat) }"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MultiQC 'report_general_stats_data' JSON Element ‚Äî multiqc_parse_gen","title":"Parse MultiQC 'report_general_stats_data' JSON Element ‚Äî multiqc_parse_gen","text":"Parses MultiQC 'report_general_stats_data' JSON Element. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MultiQC 'report_general_stats_data' JSON Element ‚Äî multiqc_parse_gen","text":"","code":"multiqc_parse_gen(p)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MultiQC 'report_general_stats_data' JSON Element ‚Äî multiqc_parse_gen","text":"p Parsed MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MultiQC 'report_general_stats_data' JSON Element ‚Äî multiqc_parse_gen","text":"list.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Plot Data from MultiQC JSON ‚Äî multiqc_parse_plots","title":"Parse Plot Data from MultiQC JSON ‚Äî multiqc_parse_plots","text":"Parse Plot Data MultiQC JSON","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Plot Data from MultiQC JSON ‚Äî multiqc_parse_plots","text":"","code":"multiqc_parse_plots(j, plot_names = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Plot Data from MultiQC JSON ‚Äî multiqc_parse_plots","text":"j Path multiqc_data.json file. plot_names Names plots parse. Use \"everything\" wantz plotz.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Plot Data from MultiQC JSON ‚Äî multiqc_parse_plots","text":"Nested tibble plot name result list column (use tidyr::unnest access).","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Plot Data from MultiQC JSON ‚Äî multiqc_parse_plots","text":"","code":"if (FALSE) { j <- here::here(\"nogit/warehouse/cttso/2023/05/wfr.ec3748db414f422381e419d367f73eec/dracarys_gds_sync/multiqc_data.json\") multiqc_parse_plots(j, plot_names = c(\"fastqc_gc_content_mean_sequence_quality_plot\", \"dragen_coverage_per_contig\")) multiqc_parse_plots(j, plot_names = NULL) }"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MultiQC 'report_saved_raw_data' JSON Element ‚Äî multiqc_parse_raw","title":"Parse MultiQC 'report_saved_raw_data' JSON Element ‚Äî multiqc_parse_raw","text":"Parses MultiQC 'report_saved_raw_data' JSON Element.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MultiQC 'report_saved_raw_data' JSON Element ‚Äî multiqc_parse_raw","text":"","code":"multiqc_parse_raw(p)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MultiQC 'report_saved_raw_data' JSON Element ‚Äî multiqc_parse_raw","text":"p Parsed MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MultiQC 'report_saved_raw_data' JSON Element ‚Äî multiqc_parse_raw","text":"list.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiQC Extract XY Line Plot Data ‚Äî multiqc_parse_xyline_plot","title":"MultiQC Extract XY Line Plot Data ‚Äî multiqc_parse_xyline_plot","text":"Extracts xy_line data given plot name MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiQC Extract XY Line Plot Data ‚Äî multiqc_parse_xyline_plot","text":"","code":"multiqc_parse_xyline_plot(dat)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiQC Extract XY Line Plot Data ‚Äî multiqc_parse_xyline_plot","text":"dat Parsed JSON list element specific plot data extract.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiQC Extract XY Line Plot Data ‚Äî multiqc_parse_xyline_plot","text":"Tibble name data list-column.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MultiQC Extract XY Line Plot Data ‚Äî multiqc_parse_xyline_plot","text":"Note dragen_coverage_per_contig/non_main_contig plots conform normal structure xy_line plots, handle separately.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage ‚Äî multiqc_parse_xyline_plot_contig_cvg","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage ‚Äî multiqc_parse_xyline_plot_contig_cvg","text":"MultiQC Extract XY Line Plot Data DRAGEN Contig Coverage","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage ‚Äî multiqc_parse_xyline_plot_contig_cvg","text":"","code":"multiqc_parse_xyline_plot_contig_cvg(dat)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage ‚Äî multiqc_parse_xyline_plot_contig_cvg","text":"dat Parsed JSON list element specific plot data extract.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage ‚Äî multiqc_parse_xyline_plot_contig_cvg","text":"Tibble name data list-column.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy MultiQC JSON ‚Äî multiqc_tidy_json","title":"Tidy MultiQC JSON ‚Äî multiqc_tidy_json","text":"Tidies 'multiqc_data.json' output MultiQC. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy MultiQC JSON ‚Äî multiqc_tidy_json","text":"","code":"multiqc_tidy_json(j)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy MultiQC JSON ‚Äî multiqc_tidy_json","text":"j Path multiqc_data.json file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy MultiQC JSON ‚Äî multiqc_tidy_json","text":"tidy tibble column corresponds single metric, row corresponds single sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/portal_meta_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ICA Workflows Metadata via Portal API ‚Äî portal_meta_read","title":"Read ICA Workflows Metadata via Portal API ‚Äî portal_meta_read","text":"Reads ICA Workflows Metadata via Portal API","code":""},{"path":"https://umccr.github.io/dracarys/reference/portal_meta_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ICA Workflows Metadata via Portal API ‚Äî portal_meta_read","text":"","code":"portal_meta_read(   pmeta = NULL,   rows = 100,   params = \"\",   AWS_REGION = Sys.getenv(\"AWS_REGION\"),   AWS_ACCESS_KEY_ID = Sys.getenv(\"AWS_ACCESS_KEY_ID\"),   AWS_SECRET_ACCESS_KEY = Sys.getenv(\"AWS_SECRET_ACCESS_KEY\"),   AWS_SESSION_TOKEN = Sys.getenv(\"AWS_SESSION_TOKEN\") )"},{"path":"https://umccr.github.io/dracarys/reference/portal_meta_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ICA Workflows Metadata via Portal API ‚Äî portal_meta_read","text":"pmeta Path downloaded portal metadata file, already parsed metadata tibble. rows Number rows return. params String containing additional params pass /workflows endpoint, e.g. '&type_name=bclconvert'. AWS_REGION AWS_REGION, uses env var default. AWS_ACCESS_KEY_ID AWS_ACCESS_KEY_ID, uses env var default. AWS_SECRET_ACCESS_KEY AWS_SECRET_ACCESS_KEY, uses env var default. AWS_SESSION_TOKEN AWS_SESSION_TOKEN, uses env var default.","code":""},{"path":"https://umccr.github.io/dracarys/reference/portal_meta_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ICA Workflows Metadata via Portal API ‚Äî portal_meta_read","text":"tibble results given query.","code":""},{"path":"https://umccr.github.io/dracarys/reference/portal_meta_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read ICA Workflows Metadata via Portal API ‚Äî portal_meta_read","text":"","code":"if (FALSE) { portal_meta_read(params = \"&type_name=bcl_convert\", rows = 4) }"},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Local R Dataframe to Spark-backed Table ‚Äî rdf2tab","title":"Write Local R Dataframe to Spark-backed Table ‚Äî rdf2tab","text":"First converts local R dataframe Spark DataFrame using SparkR, appends specified table.","code":""},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Local R Dataframe to Spark-backed Table ‚Äî rdf2tab","text":"","code":"rdf2tab(rdf, outpath, drid = NULL, ...)"},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Local R Dataframe to Spark-backed Table ‚Äî rdf2tab","text":"rdf Local R dataframe outpath Path output table. drid dracarys ID use dataset (e.g. wfrid.123, prid.456) ... Additional arguments SparkR::write.df.","code":""},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Local R Dataframe to Spark-backed Table ‚Äî rdf2tab","text":"","code":"if (FALSE) { rdf <- mtcars rdf2tab(rdf, \"dev.wf1.mtcars\", drid = \"wfr.123\") }"},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":null,"dir":"Reference","previous_headings":"","what":"Read File object ‚Äî read.File","title":"Read File object ‚Äî read.File","text":"Read file based type.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read File object ‚Äî read.File","text":"","code":"# S3 method for File read(x, ...)"},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read File object ‚Äî read.File","text":"x Object class File. ... Arguments passed appropriate read_* function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Reading ‚Äî read","title":"Generic Reading ‚Äî read","text":"Generic function reading dracarys objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Reading ‚Äî read","text":"","code":"read(x, ...)"},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Reading ‚Äî read","text":"x Object respective class. ... Additional arguments.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Reading ‚Äî read","text":"Possibly tibble list, depending object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":null,"dir":"Reference","previous_headings":"","what":"Session Information Kable ‚Äî session_info_kable","title":"Session Information Kable ‚Äî session_info_kable","text":"Session information kables vignettes.","code":""},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Session Information Kable ‚Äî session_info_kable","text":"","code":"session_info_kable(pkgs = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session Information Kable ‚Äî session_info_kable","text":"pkgs Vector R packages display vignette. default returns .","code":""},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Session Information Kable ‚Äî session_info_kable","text":"list two kables containing information platform specified packages.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","title":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","text":"Processes multiple TimeMetricsFile objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","text":"","code":"time_metrics_process(x, id = seq_len(length(x)))"},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","text":"x Atomic vector one TimeMetricsFile objects. id ID input, used disambiguate files generated samples. Default: index 1 length x.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","text":"tibble following columns: Step: DRAGEN step Time: time HH:MM","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.time_metrics.csv.gz\", package = \"dracarys\") x <- TimeMetricsFile$new(x) (tm <- time_metrics_process(c(x, x), id = c(\"run1\", \"run2\"))) #> # A tibble: 2 √ó 21 #>   ID    Label   `Total Runtime` `Loading Reference` `Aligning Reads` #>   <chr> <chr>   <chr>           <chr>               <chr>            #> 1 run1  SEQC-II 04:10           00:01               00:35            #> 2 run2  SEQC-II 04:10           00:01               00:35            #> # ‚Ñπ 16 more variables: `Duplicate Marking` <chr>, #> #   `Sorting and Marking Duplicates` <chr>, `DRAGStr Calibration` <chr>, #> #   `Saving Map/Align Output` <chr>, `Partial Reconfiguration` <chr>, #> #   `Variant Calling` <chr>, `Calculating Target Counts` <chr>, #> #   `Correcting GC Bias` <chr>, `Normalizing Case Sample` <chr>, #> #   `Performing Segmentation` <chr>, `Generating Somatic Model Input` <chr>, #> #   `Fitting Somatic Model` <chr>, `Generating CNV Calls` <chr>, ‚Ä¶"},{"path":"https://umccr.github.io/dracarys/reference/tso_rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate TSO Report ‚Äî tso_rmd","title":"Generate TSO Report ‚Äî tso_rmd","text":"Generates HTML report results UMCCR TSO500 ctDNA workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate TSO Report ‚Äî tso_rmd","text":"","code":"tso_rmd(tidy_rds, out_dir, prefix, quiet = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/tso_rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate TSO Report ‚Äî tso_rmd","text":"tidy_rds Path RDS object output tso_tidy. out_dir Output directory. prefix Prefix output file(s). quiet Suppress warning messages.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_rmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate TSO Report ‚Äî tso_rmd","text":"Path rendered HTML report.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_rmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate TSO Report ‚Äî tso_rmd","text":"","code":"if (FALSE) { tidy_rds <- \"~/tmp/tso/SBJ02858.rds\" tso_tidy(...) |> saveRDS(tidy_rds) quiet <- TRUE out_dir <- file.path(\"~/tmp/tso/out2\") prefix <- \"SBJ02858\" tso_rmd(tidy_rds = tidy_rds, out_dir = out_dir, prefix = prefix, quiet = quiet) }"},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy UMCCR Results ‚Äî umccr_tidy","title":"Tidy UMCCR Results ‚Äî umccr_tidy","text":"Tidies UMCCR workflow results list tibbles writes individual tibbles TSV /Parquet format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy UMCCR Results ‚Äî umccr_tidy","text":"","code":"umccr_tidy(   in_dir = NULL,   out_dir = NULL,   prefix = NULL,   gds_local_dir = NULL,   out_format = \"tsv\",   dryrun = FALSE,   token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   pattern = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy UMCCR Results ‚Äî umccr_tidy","text":"in_dir Directory path UMCCR workflow results (can GDS local). out_dir Output directory. prefix Prefix output file(s). gds_local_dir indir GDS directory, 'recognisable' files first downloaded directory. out_format Format output (tsv, parquet, ) (def: tsv). dryrun Just list files downloaded (def: FALSE). token ICA access token (default uses $ICA_ACCESS_TOKEN env var). pattern Pattern filter returned file type tibble (see name column DR_FILE_REGEX tibble).","code":""},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy UMCCR Results ‚Äî umccr_tidy","text":"Tibble path input file resultant tidy object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy UMCCR Results ‚Äî umccr_tidy","text":"","code":"if (FALSE) { in_dir <- paste0(   \"gds://production/analysis_data/SBJ01639/tso_ctdna_tumor_only/\",   \"202204045ad5743c/L2200214/Results/PRJ220425_L2200214/\" ) out_dir <- here::here(\"nogit/tso/2023-08-01\") in_dir <- file.path(out_dir, \"dracarys_gds_sync\") prefix <- \"SBJ01639\" out_format <- \"rds\" umccr_tidy(in_dir = in_dir, out_dir = out_dir, prefix = prefix, out_format = out_format, dryrun = F)  in_dir <- here::here(glue(\"nogit/tso/2022-12-13/SBJ02858/dracarys_gds_sync\")) out_dir <- file.path(in_dir, \"../out\") gds_local_dir <- NULL prefix <- \"SBJ02858\" dryrun <- F umccr_tidy(in_dir = in_dir, out_dir = out_dir, prefix = prefix, dryrun = F) }"},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-0100-2023-06-22","dir":"Changelog","previous_headings":"","what":"dracarys 0.10.0 (2023-06-22)","title":"dracarys 0.10.0 (2023-06-22)","text":"0.9.0 - 0.10.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-090-2023-05-10","dir":"Changelog","previous_headings":"","what":"dracarys 0.9.0 (2023-05-10)","title":"dracarys 0.9.0 (2023-05-10)","text":"0.8.0 - 0.9.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-080-2023-02-24","dir":"Changelog","previous_headings":"","what":"dracarys 0.8.0 (2023-02-24)","title":"dracarys 0.8.0 (2023-02-24)","text":"0.7.0 - 0.8.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-070-2023-02-15","dir":"Changelog","previous_headings":"","what":"dracarys 0.7.0 (2023-02-15)","title":"dracarys 0.7.0 (2023-02-15)","text":"0.6.0 - 0.7.0 diff Mostly added use cases based requests curation team related umccrise (CHORD, HRDetect, QC summary), PCGR, MultiQC. umccr_tidy: workhorse handles tidying method dispatch. gds_file_presignedurl PcgrJsonFile PcgrTiersFile UmChordTsvFile UmHrdetectTsvFile UmQcSumFile UmSigsSnvFile MultiqcFile Updated README unified dracarys tidy CLI. Added fun column FILE_REGEX handling method dispatch. GH Actions: Remove linux/arm64 docker since conda pkgs don‚Äôt generally ARM64 equivalents. GH Actions: use ‚Äúminiforge-variant: Mambaforge‚Äù (see issue).","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-060-2023-01-09","dir":"Changelog","previous_headings":"","what":"dracarys 0.6.0 (2023-01-09)","title":"dracarys 0.6.0 (2023-01-09)","text":"0.5.0 - 0.6.0 diff replace ::set-output. add linux/arm64 support. replace select .data quotes. bump Roxygen 7.2.1 -> 7.2.2 add {fs}, {httr}, {jose}, {sessioninfo} dependencies. import %||% {rlang} specify fallback values NULL cases. ‚ú® pkgdown: change theme simplex. bump mambaforge: 4.12.0-2 -> 22.9.0-2 bump conda-lock: 1.0.5 -> 1.3.0 add support tidying outputs UMCCR TSO500 ctDNA workflow, generating HTML file tidy results workflow. tso_tidy tidying outputs UMCCR TSO500 ctDNA workflow. tso_rmd generating HTML file tidy results workflow. dr_gds_download downloading dracarys-related files GDS. gds_files_list listing files GDS via API. gds_file_download gds_file_download_api downloading files GDS via ica binary API (via presigned URLs), respectively. ica_token_validate validating ICA access token valid expired. TsoCombinedVariantOutputFile: files deemed less info compared output files. dracarys_tidy_multiqc: renamed dracarys_multiqc. mkdir: use fs::create_dir instead. Remove {tibble}, {readr} {ggplot} multi-imports R6, since can get away just importing single function one R6 classes.","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-050-2022-09-28","dir":"Changelog","previous_headings":"","what":"dracarys 0.5.0 (2022-09-28)","title":"dracarys 0.5.0 (2022-09-28)","text":"0.4.0 - 0.5.0 diff move map separate TSV CLI: add option output format (tsv, parquet, ) (pr18). new contributors: @victorskl","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-040-2022-09-12","dir":"Changelog","previous_headings":"","what":"dracarys 0.4.0 (2022-09-12)","title":"dracarys 0.4.0 (2022-09-12)","text":"0.3.0 - 0.4.0 diff also add Quarto HTML report template","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-030-2022-08-28","dir":"Changelog","previous_headings":"","what":"dracarys 0.3.0 (2022-08-28)","title":"dracarys 0.3.0 (2022-08-28)","text":"0.2.0 - 0.3.0 diff ‚≠ê MultiQC: support DRAGEN ctdna output (pr13).","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-020-2022-07-23","dir":"Changelog","previous_headings":"","what":"dracarys 0.2.0 (2022-07-23)","title":"dracarys 0.2.0 (2022-07-23)","text":"0.1.0 - 0.2.0 diff Add MULTIQC_COLUMNS tibble maps raw metric name cleaner name (pr12). Support MultiQC JSONs (bcbio-wts bcbio-wgs).","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-010-2022-07-11","dir":"Changelog","previous_headings":"","what":"dracarys 0.1.0 (2022-07-11)","title":"dracarys 0.1.0 (2022-07-11)","text":"Initial release dracarys. Support MultiQC JSON tidying. Add conda, conda-lock, Docker support (pr11). Initially supporting just MultiQC json input (dragen-alignment, dragen-transcriptome, dragen-tumor-normal, dragen-umccrise, bcbio-umccrise).","code":""}]
