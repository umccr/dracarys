[{"path":[]},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement peterdiakumis@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://umccr.github.io/dracarys/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://umccr.github.io/dracarys/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 University Melbourne Centre Cancer Research - Genomics Platform Group Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://umccr.github.io/dracarys/articles/files.html","id":"workflows","dir":"Articles","previous_headings":"","what":"Workflows","title":"Files Supported","text":"wgs_alignment_qc wts_alignment_qc wts_tumor_only wgs_tumor_normal-germ wgs_tumor_normal-som umccrise oncoanalyser_wgs oncoanalyser_wts oncoanalyser_wgts sash","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"flames","dir":"Articles","previous_headings":"","what":"Flames","title":"Flames","text":"Flames dracarys user stories. D’oh.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"cttso-summary","dir":"Articles","previous_headings":"Flames","what":"ctTSO Summary","title":"Flames","text":"Slack link","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"ffpe-vs--fresh-frozen","dir":"Articles","previous_headings":"Flames","what":"FFPE vs. Fresh Frozen","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"coverage-depth-exploration","dir":"Articles","previous_headings":"Flames","what":"Coverage depth exploration","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"sv-runtime","dir":"Articles","previous_headings":"Flames","what":"SV runtime","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"msi-and-tmb","dir":"Articles","previous_headings":"Flames","what":"MSI and TMB","title":"Flames","text":"Slack link.","code":""},{"path":"https://umccr.github.io/dracarys/articles/flames.html","id":"germline-duplication-rate","dir":"Articles","previous_headings":"Flames","what":"Germline duplication rate","title":"Flames","text":"Slack link1. Slack link2.","code":""},{"path":"https://umccr.github.io/dracarys/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Diakumis. Author, maintainer. Victor San Kho Lin. Author, contributor.","code":""},{"path":"https://umccr.github.io/dracarys/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Diakumis P, Lin V (2024). dracarys: Post-processing DRAGEN workflows. https://github.com/umccr/dracarys, https://umccr.github.io/dracarys/.","code":"@Manual{,   title = {dracarys: Post-processing DRAGEN workflows},   author = {Peter Diakumis and Victor San Kho Lin},   year = {2024},   note = {https://github.com/umccr/dracarys, https://umccr.github.io/dracarys/}, }"},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-dracarys---umccr-workflow-tidying","dir":"","previous_headings":"","what":"Post-processing DRAGEN workflows","title":"Post-processing DRAGEN workflows","text":"Docs: https://umccr.github.io/dracarys/","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-aim","dir":"","previous_headings":"","what":"🏆 Aim","title":"Post-processing DRAGEN workflows","text":"Given ICA GDS, AWS S3 local directory results UMCCR workflow, {dracarys} grab files interest transform ‘tidier’ structures output TSV/Parquet/RDS format downstream ingestion database/data lake. See supported workflows, running examples, CLI options sections .","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-installation","dir":"","previous_headings":"","what":"🍕 Installation","title":"Post-processing DRAGEN workflows","text":"Linux & MacOS (non-M1) MacOS M1","code":"remotes::install_github(\"umccr/dracarys@vX.X.X\") # for vX.X.X Release/Tag mamba create \\   -n dracarys_env \\   -c umccr -c bioconda -c conda-forge \\   r-dracarys==X.X.X  conda activate dracarys_env CONDA_SUBDIR=osx-64 \\   mamba create \\   -n dracarys_env \\   -c umccr -c bioconda -c conda-forge \\   r-dracarys==X.X.X  conda activate dracarys_env docker pull --platform linux/amd64 ghcr.io/umccr/dracarys:X.X.X"},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-supported-workflows","dir":"","previous_headings":"","what":"✨ Supported Workflows","title":"Post-processing DRAGEN workflows","text":"{dracarys} supports outputs following UMCCR workflows: See output files workflows supported Supported Files.","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-cli","dir":"","previous_headings":"","what":"🌀 CLI","title":"Post-processing DRAGEN workflows","text":"dracarys.R command line interface available convenience. ’re using conda package, dracarys.R command already available inside activated conda environment. ’re using conda package, need export dracarys/inst/cli/ directory PATH order use dracarys.R.","code":"dracarys_cli=$(Rscript -e 'x = system.file(\"cli\", package = \"dracarys\"); cat(x, \"\\n\")' | xargs) export PATH=\"${dracarys_cli}:${PATH}\" dracarys.R --version dracarys.R 0.14.0  #-----------------------------------# dracarys.R --help usage: dracarys.R [-h] [-v] {tidy} ...  🐉 DRAGEN Output Post-Processing 🔥  positional arguments:   {tidy}         sub-command help     tidy         Tidy UMCCR Workflow Outputs  options:   -h, --help     show this help message and exit   -v, --version  show program's version number and exit  #-----------------------------------# #------- Tidy ----------------------# dracarys.R tidy --help usage: dracarys.R tidy [-h] -i IN_DIR -o OUT_DIR -p PREFIX [-t TOKEN]                        [-l LOCAL_DIR] [-f FORMAT] [-n] [-q]  options:   -h, --help            show this help message and exit   -i IN_DIR, --in_dir IN_DIR                         ⛄️ Directory with untidy UMCCR workflow results. Can                         be GDS, S3 or local.   -o OUT_DIR, --out_dir OUT_DIR                         🔥 Directory to output tidy results.   -p PREFIX, --prefix PREFIX                         🎻 Prefix string used for all results.   -t TOKEN, --token TOKEN                         🙈 ICA access token. Default: ICA_ACCESS_TOKEN env var.   -l LOCAL_DIR, --local_dir LOCAL_DIR                         📥 If input is a GDS/S3 directory, download the                         recognisable files to this directory. Default:                         '<out_dir>/dracarys_<gds|s3>_sync'.   -f FORMAT, --format FORMAT                         🎨 Format of output. Default: tsv.   -n, --dryrun          🐫 Dry run - just show files to be tidied.   -q, --quiet           😴 Shush all the logs."},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-running","dir":"","previous_headings":"","what":"🚕 Running","title":"Post-processing DRAGEN workflows","text":"{dracarys} takes input (--in_dir) directory results one UMCCR workflows. recursively scan directory supported files, download local directory (--gds_local_dir), parse, transform write tidied versions specified output directory (--out_dir). prefix (--prefix) prepended tidied files. output file format (--format) can tsv, parquet, . get just list supported files within specified input directory, use -n (--dryrun) option. within activated conda environment shell dracarys.R CLI available:","code":"# help(umccr_tidy) in_dir <- \"gds://path/to/subjectX_multiqc_data/\" out_dir <- tempdir() prefix <- \"subjectX\" umccr_tidy(in_dir = in_dir, out_dir = out_dir, prefix = prefix) dracarys.R tidy \\       -i gds://path/to/subjectX_multiqc_data/ \\       -o local_output_dir \\       -p subjectX_prefix docker container run \\   -v $(PWD):/mount1 \\   --platform=linux/amd64 \\   --env \"ICA_ACCESS_TOKEN\" \\   --rm -it \\   ghcr.io/umccr/dracarys:X.X.X \\     dracarys.R tidy \\       -i gds://path/to/subjectX_multiqc_data/ \\       -o /mount1/output_dir \\       -p subjectX_prefix"},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"Contains methods reading displaying contents bcftools_stats.txt file (QUAL section) output running bcftools stats.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"dracarys::File -> BcftoolsStatsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"BcftoolsStatsFile$read() BcftoolsStatsFile$write() BcftoolsStatsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"Reads QUAL section bcftools_stats.txt file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"","code":"BcftoolsStatsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"Writes tidy version bcftools_stats.txt (QUAL section) file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"","code":"BcftoolsStatsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"","code":"BcftoolsStatsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BcftoolsStatsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BcftoolsStatsFile R6 Class — BcftoolsStatsFile","text":"","code":"if (FALSE) { x <- \"/path/to/bcftools_stats.txt\" d <- BcftoolsStatsFile$new(x) d_parsed <- d$read() d$write(d_parsed, out_dir = tempdir(), prefix = \"sample123\", out_format = \"tsv\") }"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":null,"dir":"Reference","previous_headings":"","what":"BclconvertReports R6 Class — BclconvertReports","title":"BclconvertReports R6 Class — BclconvertReports","text":"Reads writes tidy versions files within Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"BclconvertReports R6 Class — BclconvertReports","text":"path Path Reports directory. contents Tibble file path, basename, size.","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"BclconvertReports R6 Class — BclconvertReports","text":"BclconvertReports$new() BclconvertReports$print() BclconvertReports$read() BclconvertReports$write() BclconvertReports$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Create new BclconvertReports object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$new(path = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"path Path Reports directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Print details BclconvertReports directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Reads contents Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$read()"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"BclconvertReports R6 Class — BclconvertReports","text":"list tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"BclconvertReports R6 Class — BclconvertReports","text":"Writes tidied contents Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"BclconvertReports R6 Class — BclconvertReports","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"BclconvertReports$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"BclconvertReports R6 Class — BclconvertReports","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/BclconvertReports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BclconvertReports R6 Class — BclconvertReports","text":"","code":"if (FALSE) { b <- BclconvertReports$new(here::here(\"nogit/bcl_convert/WGS_TsqNano/Reports\")) b$path b$contents d <- b$read() b$write(d, out_dir = tempdir(), prefix = \"sampleA\", out_format = \"tsv\") }"},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"FastqcMetrics R6 Class — FastqcMetricsFile","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"Contains methods reading displaying contents fastqc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"dracarys::File -> FastqcMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"FastqcMetricsFile$read() FastqcMetricsFile$write() FastqcMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"Reads fastqc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"","code":"FastqcMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"tibble. TODO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"Writes tidy version fastqc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"","code":"FastqcMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"","code":"FastqcMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FastqcMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FastqcMetrics R6 Class — FastqcMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.fastqc_metrics.csv.gz\", package = \"dracarys\") fq <- FastqcMetricsFile$new(x) d <- fq$read() fq$write(d, out_dir = tempdir(), prefix = \"seqc_fq\", out_format = \"tsv\") # fq$plot(d)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":null,"dir":"Reference","previous_headings":"","what":"File R6 Class — File","title":"File R6 Class — File","text":"File base R6 class representing TSV/CSV/JSON output UMCCR workflow. File path, basename, type, can presigned URL.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"File R6 Class — File","text":"path Name full path file. is_url file presigned URL?","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"File R6 Class — File","text":"File$new() File$bname() File$type() File$print() File$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"File R6 Class — File","text":"Create new File object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class — File","text":"","code":"File$new(path = NULL, is_url = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class — File","text":"path Name full path file. is_url file presigned URL?","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-bname-","dir":"Reference","previous_headings":"","what":"Method bname()","title":"File R6 Class — File","text":"Basename file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class — File","text":"","code":"File$bname()"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"File R6 Class — File","text":"Basename file character vector.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-type-","dir":"Reference","previous_headings":"","what":"Method type()","title":"File R6 Class — File","text":"Get type file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class — File","text":"","code":"File$type()"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"File R6 Class — File","text":"String describing specific type dracarys file (NA dracarys-recognised file).","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"File R6 Class — File","text":"Print details File.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class — File","text":"","code":"File$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class — File","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"File R6 Class — File","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class — File","text":"","code":"File$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class — File","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File R6 Class — File","text":"","code":"F1 <- File$new(readr::readr_example(\"mtcars.csv\")) (bname_f1 <- F1$bname()) #> [1] \"mtcars.csv\" (F2 <- File$new(\"https://stratus-gds-aps2/foo/bar/baz.csv?bla\")) #> #--- File ---# #> Path: https://stratus-gds-aps2/foo/bar/baz.csv?bla  #> Basename: baz.csv  #> Type: NA  #> isURL: TRUE"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"Contains methods reading plotting contents fragment_length_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"dracarys::File -> FragmentLengthHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"FragmentLengthHistFile$read() FragmentLengthHistFile$write() FragmentLengthHistFile$plot() FragmentLengthHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"Reads fragment_length_hist.csv file, contains fragment length distribution sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"tibble following columns: sample: name sample fragmentLength: estimated fragment length count: number reads estimated fragment length","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"Writes tidy version fragment_length_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"Plots fragment length distributions given fragment_length_hist.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$plot(d, min_count = 10)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"d Parsed object self$read(). min_count Minimum read count plotted (Default: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"ggplot2 plot containing fragment lengths X axis read counts Y axis sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FragmentLengthHistFile R6 Class — FragmentLengthHistFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.fragment_length_hist.csv.gz\", package = \"dracarys\") fl <- FragmentLengthHistFile$new(x) d <- fl$read() # or read(fl) fl$plot(d) # or plot(fl)  fl$write(d |> dplyr::filter(count > 10), out_dir = tempdir(), prefix = \"seqc_fl\")"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"MappingMetricsFile R6 Class — MappingMetricsFile","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"Contains methods reading displaying contents mapping_metrics.csv file output DRAGEN. file contains mapping aligning metrics, like metrics computed Samtools Flagstat command. metrics available aggregate level (input data), per read group level. NOTE: keeping read group level metrics (.e. removing aggregate data). Unless explicitly stated, metrics units reads (.e., terms pairs alignments).","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"dracarys::File -> MappingMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"MappingMetricsFile$read() MappingMetricsFile$write() MappingMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"Reads mapping_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"","code":"MappingMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"tibble one row X metrics per read group.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"Writes tidy version mapping_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"","code":"MappingMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"","code":"MappingMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MappingMetricsFile R6 Class — MappingMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.mapping_metrics.csv.gz\", package = \"dracarys\") mm <- MappingMetricsFile$new(x) d <- mm$read() # or read(mm) mm$write(d, out_dir = tempdir(), prefix = \"seqc_mm\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiqcFile R6 Class — MultiqcFile","title":"MultiqcFile R6 Class — MultiqcFile","text":"Contains methods reading displaying contents multiqc_data.json file output MultiQC.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"MultiqcFile R6 Class — MultiqcFile","text":"dracarys::File -> MultiqcFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MultiqcFile R6 Class — MultiqcFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MultiqcFile R6 Class — MultiqcFile","text":"MultiqcFile$read() MultiqcFile$write() MultiqcFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"MultiqcFile R6 Class — MultiqcFile","text":"Reads multiqc_data.json file output MultiQC.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiqcFile R6 Class — MultiqcFile","text":"","code":"MultiqcFile$read(plot = FALSE, plot_names = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiqcFile R6 Class — MultiqcFile","text":"plot Return tibble data plots (def: FALSE). plot_names Names plots parse. Use \"everything\" wantz plotz.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MultiqcFile R6 Class — MultiqcFile","text":"tidy tibble. label:","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"MultiqcFile R6 Class — MultiqcFile","text":"Writes tidy version multiqc_data.json file output MultiQC.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiqcFile R6 Class — MultiqcFile","text":"","code":"MultiqcFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiqcFile R6 Class — MultiqcFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', ''). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MultiqcFile R6 Class — MultiqcFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiqcFile R6 Class — MultiqcFile","text":"","code":"MultiqcFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiqcFile R6 Class — MultiqcFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MultiqcFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MultiqcFile R6 Class — MultiqcFile","text":"","code":"if (FALSE) { x <- \"/path/to/multiqc_data.json\" mqc <- MultiqcFile$new(x) mqc_parsed <- mqc$read() # or read(mqc) mqc$write(mqc_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\") mqc_plots_parsed <- mqc$read(plot = TRUE, plot_names = \"everything\") mqc$write(mqc_plots_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"rds\") }"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PcgrJson R6 Class — PcgrJsonFile","title":"PcgrJson R6 Class — PcgrJsonFile","text":"Contains methods reading displaying contents pcgr.json.gz file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PcgrJson R6 Class — PcgrJsonFile","text":"dracarys::File -> PcgrJsonFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PcgrJson R6 Class — PcgrJsonFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PcgrJson R6 Class — PcgrJsonFile","text":"PcgrJsonFile$read() PcgrJsonFile$write() PcgrJsonFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PcgrJson R6 Class — PcgrJsonFile","text":"Reads pcgr.json.gz file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrJson R6 Class — PcgrJsonFile","text":"","code":"PcgrJsonFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PcgrJson R6 Class — PcgrJsonFile","text":"List tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"PcgrJson R6 Class — PcgrJsonFile","text":"Writes tidy version pcgr.json.gz file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrJson R6 Class — PcgrJsonFile","text":"","code":"PcgrJsonFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrJson R6 Class — PcgrJsonFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PcgrJson R6 Class — PcgrJsonFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrJson R6 Class — PcgrJsonFile","text":"","code":"PcgrJsonFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrJson R6 Class — PcgrJsonFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PcgrJson R6 Class — PcgrJsonFile","text":"","code":"if (FALSE) { x <- \"/path/to/pcgr.json.gz\" d <- PcgrJsonFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") }"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PcgrTiersFile R6 Class — PcgrTiersFile","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"Contains methods reading displaying contents pcgr.snvs_indels.tiers.tsv file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"dracarys::File -> PcgrTiersFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"PcgrTiersFile$read() PcgrTiersFile$write() PcgrTiersFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"Reads pcgr.snvs_indels.tiers.tsv file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"","code":"PcgrTiersFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"List tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"Writes tidy version pcgr.snvs_indels.tiers.tsv file output PCGR.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"","code":"PcgrTiersFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"","code":"PcgrTiersFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PcgrTiersFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PcgrTiersFile R6 Class — PcgrTiersFile","text":"","code":"if (FALSE) { x <- \"/path/to/pcgr.snvs_indels.tiers.tsv\" d <- PcgrTiersFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") }"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"Contains methods reading contents ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"dracarys::File -> PloidyEstimationMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"PloidyEstimationMetricsFile$read() PloidyEstimationMetricsFile$write() PloidyEstimationMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"Reads ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"Writes tidy version ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PloidyEstimationMetricsFile R6 Class — PloidyEstimationMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.ploidy_estimation_metrics.csv.gz\", package = \"dracarys\") pem <- PloidyEstimationMetricsFile$new(x) d <- pem$read() # or read(pem) pem$write(d, out_dir = tempdir(), prefix = \"seqc_ploidy\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":null,"dir":"Reference","previous_headings":"","what":"ReplayFile R6 Class — ReplayFile","title":"ReplayFile R6 Class — ReplayFile","text":"Contains methods reading contents replay.json file output DRAGEN, contains DRAGEN command line, parameters version specific run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ReplayFile R6 Class — ReplayFile","text":"dracarys::File -> ReplayFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ReplayFile R6 Class — ReplayFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ReplayFile R6 Class — ReplayFile","text":"ReplayFile$read() ReplayFile$write() ReplayFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"ReplayFile R6 Class — ReplayFile","text":"Reads replay.json file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class — ReplayFile","text":"","code":"ReplayFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ReplayFile R6 Class — ReplayFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"ReplayFile R6 Class — ReplayFile","text":"Writes tidy version replay.json file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class — ReplayFile","text":"","code":"ReplayFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReplayFile R6 Class — ReplayFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ReplayFile R6 Class — ReplayFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class — ReplayFile","text":"","code":"ReplayFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReplayFile R6 Class — ReplayFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ReplayFile R6 Class — ReplayFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II-replay.json.gz\", package = \"dracarys\") r <- ReplayFile$new(x) d <- r$read() # or read(r) r$write(d, out_dir = tempdir(), prefix = \"seqc_replay\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"SvMetricsFile R6 Class — SvMetricsFile","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"Contains methods reading displaying contents sv_metrics.csv file output DRAGEN","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"dracarys::File -> SvMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"SvMetricsFile$read() SvMetricsFile$write() SvMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"Reads sv_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"","code":"SvMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"Writes tidy version sv_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"","code":"SvMetricsFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"","code":"SvMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/SvMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SvMetricsFile R6 Class — SvMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.sv_metrics.csv.gz\", package = \"dracarys\") sv <- SvMetricsFile$new(x) d <- sv$read() sv$write(d, out_dir = tempdir(), prefix = \"seqc_sv\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TimeMetricsFile R6 Class — TimeMetricsFile","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"Contains methods reading contents time_metrics.csv file output DRAGEN, contains breakdown run duration DRAGEN process.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"dracarys::File -> TimeMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"TimeMetricsFile$read() TimeMetricsFile$write() TimeMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"Reads time_metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"","code":"TimeMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"Writes tidy version time_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"","code":"TimeMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"","code":"TimeMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TimeMetricsFile R6 Class — TimeMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.time_metrics.csv.gz\", package = \"dracarys\") tm <- TimeMetricsFile$new(x) d <- tm$read() # or read(tm) tm$write(d, out_dir = tempdir(), prefix = \"seqc_time\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"Contains methods reading displaying contents trimmer_metrics.csv file output DRAGEN","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"dracarys::File -> TrimmerMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"TrimmerMetricsFile$read() TrimmerMetricsFile$write() TrimmerMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"Reads trimmer_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"","code":"TrimmerMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"Writes tidy version trimmer_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"","code":"TrimmerMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"","code":"TrimmerMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TrimmerMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TrimmerMetricsFile R6 Class — TrimmerMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.trimmer_metrics.csv.gz\", package = \"dracarys\") tm <- TrimmerMetricsFile$new(x) d <- tm$read() tm$write(d, out_dir = tempdir(), prefix = \"seqc_tm\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"Contains methods reading displaying contents AlignCollapseFusionCaller_metrics.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"dracarys::File -> TsoAlignCollapseFusionCallerMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"TsoAlignCollapseFusionCallerMetricsFile$read() TsoAlignCollapseFusionCallerMetricsFile$write() TsoAlignCollapseFusionCallerMetricsFile$plot() TsoAlignCollapseFusionCallerMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"Reads AlignCollapseFusionCaller_metrics.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"tibble following columns: section: name original JSON element name: name metric value: value metric percent: percentage","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"Writes tidy version AlignCollapseFusionCaller_metrics.json.gz file output TSO. Histo majority UmiStatistics section, write separately. Histo num supporting fragments: Num families 0/1/2/3... raw reads. Histo unique UMIs per fragment pos: Num pos 0/1/2/3... UMI seqs.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', ''). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"Generates UmiStatistics Histogram plots AlignCollapseFusionCaller_metrics.json.gz file output TSO. Histo majority UmiStatistics section, deal separately. Histo num supporting fragments: Num families 0/1/2/3... raw reads. Histo unique UMIs per fragment pos: Num pos 0/1/2/3... UMI seqs.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$plot(d, max_num = 15)"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"d Parsed object self$read(). max_num Maximum number display plots.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"histogram plot objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class — TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.AlignCollapseFusionCaller_metrics.json.gz\",   package = \"dracarys\" ) m <- TsoAlignCollapseFusionCallerMetricsFile$new(x) d_parsed <- m$read() # or read(m) m$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = c(\"tsv\", \"rds\"))"},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"Contains methods reading displaying contents CombinedVariantOutput.tsv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"dracarys::File -> TsoCombinedVariantOutputFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"TsoCombinedVariantOutputFile$read() TsoCombinedVariantOutputFile$write() TsoCombinedVariantOutputFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"Reads CombinedVariantOutput.tsv file output TSO extracts Small Variants section (due inconsistencies sections).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"","code":"TsoCombinedVariantOutputFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"tibble variants.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"Writes tidy version CombinedVariantOutput.tsv (Small Variants) file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"","code":"TsoCombinedVariantOutputFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"","code":"TsoCombinedVariantOutputFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCombinedVariantOutputFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoCombinedVariantOutputFile R6 Class — TsoCombinedVariantOutputFile","text":"","code":"if (FALSE) { x <- \"/path/to/CombinedVariantOutput.tsv\" d <- TsoCombinedVariantOutputFile$new(x) d$read() }"},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"Contains methods reading displaying contents CopyNumberVariants.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"dracarys::File -> TsoCopyNumberVariantsVcfFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"TsoCopyNumberVariantsVcfFile$read() TsoCopyNumberVariantsVcfFile$write() TsoCopyNumberVariantsVcfFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"Reads CopyNumberVariants.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"","code":"TsoCopyNumberVariantsVcfFile$read(only_pass = TRUE, alias = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"only_pass include PASS variants (def: TRUE). alias Substitute sample names S1/S2/... alias (def: TRUE).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"tibble variants.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"Writes tidy version CopyNumberVariants.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"","code":"TsoCopyNumberVariantsVcfFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"","code":"TsoCopyNumberVariantsVcfFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoCopyNumberVariantsVcfFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoCopyNumberVariantsVcfFile R6 Class — TsoCopyNumberVariantsVcfFile","text":"","code":"if (FALSE) { x <- normalizePath(\"CopyNumberVariants.vcf.gz\") d <- TsoCopyNumberVariantsVcfFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\") d$write(d_parsed, prefix = \"FOO\", out_format = \"delta\", drid = \"wfr.123\") }"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"Contains methods reading displaying contents fragment_length_hist.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"dracarys::File -> TsoFragmentLengthHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"TsoFragmentLengthHistFile$read() TsoFragmentLengthHistFile$write() TsoFragmentLengthHistFile$plot() TsoFragmentLengthHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"Reads fragment_length_hist.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"tibble following columns: FragmentLength Count","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"Writes tidy version fragment_length_hist.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"Plots fragment length distributions given fragment_length_hist.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$plot(d, min_count = 10)"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"d Parsed object self$read(). min_count Minimum read count plotted (def: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"ggplot2 plot containing fragment lengths X axis read counts Y axis sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoFragmentLengthHistFile R6 Class — TsoFragmentLengthHistFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.fragment_length_hist.json.gz\", package = \"dracarys\") fl <- TsoFragmentLengthHistFile$new(x) d_parsed <- fl$read() # or read(fl) fl$plot(d_parsed, 5)  fl$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"Contains methods reading displaying contents Fusions.csv file output TSO. Returns tibble columns (based input file header metadata): Sample: input sample ID. Name: Fusion name reported manta. Chr1/Chr2: chromosome 1st/2nd breakend. Pos1/Pos2: position 1st/2nd breakend. Direction: direction breakends joined together. Alt_Depth: number read-pairs supporting fusion call. BP1_Depth/BP2_Depth: Number read-pairs aligned 1st/2nd breakend. Total_Depth: Max number read-pairs aligned fusion breakend. VAF: Variant allele frequency. Gene1/Gene2: Genes overlap 1st/2nd breakend. Contig: fusion contig. Filter: Indicates whether fusion passed fusion filters. Is_Cosmic_GenePair: Indicates whether gene pair reported Cosmic(True/False).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"dracarys::File -> TsoFusionsCsvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"TsoFusionsCsvFile$read() TsoFusionsCsvFile$write() TsoFusionsCsvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"Reads Fusions.csv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"","code":"TsoFusionsCsvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"tibble several columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"Writes tidy version Fusions.csv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"","code":"TsoFusionsCsvFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"","code":"TsoFusionsCsvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoFusionsCsvFile R6 Class — TsoFusionsCsvFile","text":"","code":"x <- system.file(\"extdata/tso/sample705_Fusions.csv\", package = \"dracarys\") fus <- TsoFusionsCsvFile$new(x) d_parsed <- fus$read() # or read(fus) fus$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"Contains methods reading displaying contents MergedSmallVariants.genome.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"dracarys::File -> TsoMergedSmallVariantsGenomeVcfFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"TsoMergedSmallVariantsGenomeVcfFile$read() TsoMergedSmallVariantsGenomeVcfFile$write() TsoMergedSmallVariantsGenomeVcfFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"Reads MergedSmallVariants.genome.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"","code":"TsoMergedSmallVariantsGenomeVcfFile$read(only_pass = TRUE, alias = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"only_pass include PASS variants (def: TRUE). alias Substitute sample names S1/S2/... alias (def: TRUE).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"tibble variants.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"Writes tidy version MergedSmallVariants.genome.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"","code":"TsoMergedSmallVariantsGenomeVcfFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"","code":"TsoMergedSmallVariantsGenomeVcfFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsGenomeVcfFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoMergedSmallVariantsGenomeVcfFile R6 Class — TsoMergedSmallVariantsGenomeVcfFile","text":"","code":"if (FALSE) { x <- \"MergedSmallVariants.genome.vcf.gz\" d <- TsoMergedSmallVariantsGenomeVcfFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\") }"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"Contains methods reading displaying contents MergedSmallVariants.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"dracarys::File -> TsoMergedSmallVariantsVcfFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"TsoMergedSmallVariantsVcfFile$read() TsoMergedSmallVariantsVcfFile$write() TsoMergedSmallVariantsVcfFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"Reads MergedSmallVariants.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"","code":"TsoMergedSmallVariantsVcfFile$read(only_pass = TRUE, alias = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"only_pass include PASS variants (def: TRUE). alias Substitute sample names S1/S2/... alias (def: TRUE).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"tibble variants.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"Writes tidy version MergedSmallVariants.vcf.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"","code":"TsoMergedSmallVariantsVcfFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"","code":"TsoMergedSmallVariantsVcfFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMergedSmallVariantsVcfFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoMergedSmallVariantsVcfFile R6 Class — TsoMergedSmallVariantsVcfFile","text":"","code":"if (FALSE) { x <- \"MergedSmallVariants.vcf.gz\" d <- TsoMergedSmallVariantsVcfFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\") d$write(d_parsed, prefix = \"FOO\", out_format = \"delta\", drid = \"wfr.123\") }"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoMsiFile R6 Class — TsoMsiFile","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"Contains methods reading displaying contents msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"dracarys::File -> TsoMsiFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"TsoMsiFile$read() TsoMsiFile$write() TsoMsiFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"Reads msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"","code":"TsoMsiFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"tibble following columns: label:","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"Writes tidy version msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"","code":"TsoMsiFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"","code":"TsoMsiFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoMsiFile R6 Class — TsoMsiFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.msi.json.gz\", package = \"dracarys\") msi <- TsoMsiFile$new(x) d_parsed <- msi$read() # or read(msi) msi$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"Contains methods reading displaying contents SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"dracarys::File -> TsoSampleAnalysisResultsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"TsoSampleAnalysisResultsFile$read() TsoSampleAnalysisResultsFile$write() TsoSampleAnalysisResultsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"Reads SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"list tibbles","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"Writes tidy version SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoSampleAnalysisResultsFile R6 Class — TsoSampleAnalysisResultsFile","text":"","code":"x <- system.file(\"extdata/tso/sample705_SampleAnalysisResults.json.gz\", package = \"dracarys\") res <- TsoSampleAnalysisResultsFile$new(x) d_parsed <- res$read() # or read(res) res$write(d_parsed, tempfile(), \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"Contains methods reading displaying contents TargetRegionCoverage.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"dracarys::File -> TsoTargetRegionCoverageFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"TsoTargetRegionCoverageFile$read() TsoTargetRegionCoverageFile$write() TsoTargetRegionCoverageFile$plot() TsoTargetRegionCoverageFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"Reads TargetRegionCoverage.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"tibble following columns: ConsensusReadDepth BasePair Percentage","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"Writes tidy version TargetRegionCoverage.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"Plots TargetRegionCoverage.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$plot(d, min_pct = 2)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"d Parsed object self$read(). min_pct Minimum percentage plotted (def: 2).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"ggplot2 plot containing read depth X axis percentage covered Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoTargetRegionCoverageFile R6 Class — TsoTargetRegionCoverageFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.TargetRegionCoverage.json.gz\", package = \"dracarys\") trc <- TsoTargetRegionCoverageFile$new(x) d_parsed <- trc$read() # or read(trc) trc$plot(d_parsed, 0) # or plot(trc, d_parsed, 90)  trc$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoTmbFile R6 Class — TsoTmbFile","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"Contains methods reading displaying contents tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"dracarys::File -> TsoTmbFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"TsoTmbFile$read() TsoTmbFile$write() TsoTmbFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"Reads tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"","code":"TsoTmbFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"tibble following columns: TmbPerMb AdjustedTmbPerMb NonsynonymousTmbPerMb AdjustedNonsynonymousTmbPerMb SomaticCodingVariantsCount NonsynonymousSomaticCodingVariantsCount TotalRegionSizeMb CodingRegionSizeMb","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"Writes tidy version tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"","code":"TsoTmbFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"","code":"TsoTmbFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoTmbFile R6 Class — TsoTmbFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.tmb.json.gz\", package = \"dracarys\") tmb <- TsoTmbFile$new(x) d_parsed <- tmb$read() # or read(tmb) tmb$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"Contains methods reading displaying contents TMB_Trace.tsv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"dracarys::File -> TsoTmbTraceTsvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"TsoTmbTraceTsvFile$read() TsoTmbTraceTsvFile$write() TsoTmbTraceTsvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"Reads TMB_Trace.tsv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"","code":"TsoTmbTraceTsvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"tibble variants.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"Writes tidy version TMB_Trace.tsv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"","code":"TsoTmbTraceTsvFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"","code":"TsoTmbTraceTsvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoTmbTraceTsvFile R6 Class — TsoTmbTraceTsvFile","text":"","code":"x <- system.file(\"extdata/tso/sample705_TMB_Trace.tsv\", package = \"dracarys\") d <- TsoTmbTraceTsvFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"UmChordTsvFile R6 Class — UmChordTsvFile","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"Contains methods reading displaying contents chord.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"dracarys::File -> UmChordTsvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"UmChordTsvFile$read() UmChordTsvFile$write() UmChordTsvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"Reads chord.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"","code":"UmChordTsvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"Writes tidy version chord.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"","code":"UmChordTsvFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"","code":"UmChordTsvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmChordTsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UmChordTsvFile R6 Class — UmChordTsvFile","text":"","code":"if (FALSE) { x <- \"/path/to/chord.tsv.gz\" d <- UmChordTsvFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\") }"},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"Contains methods reading displaying contents hrdetect.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"dracarys::File -> UmHrdetectTsvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"UmHrdetectTsvFile$read() UmHrdetectTsvFile$write() UmHrdetectTsvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"Reads hrdetect.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"","code":"UmHrdetectTsvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"Writes tidy version hrdetect.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"","code":"UmHrdetectTsvFile$write(d, out_dir, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"","code":"UmHrdetectTsvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmHrdetectTsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UmHrdetectTsvFile R6 Class — UmHrdetectTsvFile","text":"","code":"if (FALSE) { x <- \"/path/to/hrdetect.tsv.gz\" d <- UmHrdetectTsvFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\") }"},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":null,"dir":"Reference","previous_headings":"","what":"UmQcSumFile R6 Class — UmQcSumFile","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"Contains methods reading displaying contents qc_summary.tsv.gz file QC summary metrics output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"dracarys::File -> UmQcSumFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"UmQcSumFile$read() UmQcSumFile$write() UmQcSumFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"Reads qc_summary.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"","code":"UmQcSumFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"Writes tidy version qc_summary.tsv.gz QC summary file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"","code":"UmQcSumFile$write(d, out_dir, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"","code":"UmQcSumFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmQcSumFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UmQcSumFile R6 Class — UmQcSumFile","text":"","code":"if (FALSE) { x <- \"/path/to/snv_2015.tsv.gz\" d <- UmQcSumFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\") }"},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"UmSigsSnvFile R6 Class — UmSigsSnvFile","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"Contains methods reading displaying contents snv_20XX.tsv.gz file SNV signatures output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"dracarys::File -> UmSigsSnvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"UmSigsSnvFile$read() UmSigsSnvFile$write() UmSigsSnvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"Reads snv.tsv.gz file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"","code":"UmSigsSnvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"Writes tidy version snv_20XX.tsv.gz signature file output umccrise.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"","code":"UmSigsSnvFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"","code":"UmSigsSnvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/UmSigsSnvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UmSigsSnvFile R6 Class — UmSigsSnvFile","text":"","code":"if (FALSE) { x <- \"/path/to/snv_2015.tsv.gz\" d <- UmSigsSnvFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"tsv\") }"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"VCMetricsFile R6 Class — VCMetricsFile","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"Contains methods reading displaying contents vc_metrics.csv file output DRAGEN, contains variant calling metrics.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"dracarys::File -> VCMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"VCMetricsFile$read() VCMetricsFile$write() VCMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"Reads vc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"","code":"VCMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"Writes tidy version vc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"","code":"VCMetricsFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"","code":"VCMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VCMetricsFile R6 Class — VCMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.vc_metrics.csv.gz\", package = \"dracarys\") vm <- VCMetricsFile$new(x) d <- vm$read() # or read(vm) vm$write(d, out_dir = tempdir(), prefix = \"seqc_vc\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":null,"dir":"Reference","previous_headings":"","what":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"Contains methods reading displaying contents wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN. file contains estimated coverage contigs, autosomal estimated coverage.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"dracarys::File -> WgsContigMeanCovFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"WgsContigMeanCovFile$read() WgsContigMeanCovFile$write() WgsContigMeanCovFile$plot() WgsContigMeanCovFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"Reads wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"","code":"WgsContigMeanCovFile$read(keep_alt = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"keep_alt Keep ALT + Mito chromosomes?","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"tibble following columns: label: file label. chrom: contig name. n_bases: number bases aligned contig (excludes bases duplicate marked reads, reads MAPQ=0, clipped bases). coverage: col2 / contig length","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"Writes tidy version wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"","code":"WgsContigMeanCovFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"Plots wgs_contig_mean_cov_<phenotype>.csv files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"","code":"WgsContigMeanCovFile$plot(d, top_alt_n = 15)"},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"d Parsed object self$read(). top_alt_n Number top covered alt contigs plot per phenotype.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"ggplot2 object chromosomes X axis, coverage Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"","code":"WgsContigMeanCovFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsContigMeanCovFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WgsContigMeanCovFile R6 Class — WgsContigMeanCovFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_contig_mean_cov_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_contig_mean_cov_tumor.csv.gz\", package = \"dracarys\") cc1 <- WgsContigMeanCovFile$new(x1) cc2 <- WgsContigMeanCovFile$new(x2) d1 <- cc1$read() d2 <- cc2$read() cc1$write(d1, out_dir = tempdir(), prefix = \"seqc_n\", out_format = \"tsv\") cc2$write(d2, out_dir = tempdir(), prefix = \"seqc_t\", out_format = \"tsv\")  cc1$plot(d1)  cc2$plot(d2)"},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"Contains methods reading displaying contents wgs_coverage_metrics_<phenotype>.csv file output DRAGEN. file contains read depth coverage metrics.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"dracarys::File -> WgsCoverageMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"WgsCoverageMetricsFile$read() WgsCoverageMetricsFile$write() WgsCoverageMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"Reads wgs_coverage_metrics_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"","code":"WgsCoverageMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"Writes tidy version wgs_coverage_metrics_<phenotype>.csv file output DRAGEN","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"","code":"WgsCoverageMetricsFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"","code":"WgsCoverageMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsCoverageMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WgsCoverageMetricsFile R6 Class — WgsCoverageMetricsFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_coverage_metrics_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_coverage_metrics_tumor.csv.gz\", package = \"dracarys\") cm1 <- WgsCoverageMetricsFile$new(x1) cm2 <- WgsCoverageMetricsFile$new(x2) d1 <- read(cm1) d2 <- read(cm2) cm1$write(d1, out_dir = tempdir(), prefix = \"seqc_n\", out_format = \"tsv\") cm2$write(d2, out_dir = tempdir(), prefix = \"seqc_t\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"WgsFineHistFile R6 Class — WgsFineHistFile","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"Contains methods reading displaying contents wgs_fine_hist_<phenotype>.csv file output DRAGEN. file contains two columns: Depth Overall. value Depth column ranges 0 1000+ Overall column indicates number loci covered corresponding depth.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"dracarys::File -> WgsFineHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"WgsFineHistFile$read() WgsFineHistFile$write() WgsFineHistFile$plot() WgsFineHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"Reads wgs_fine_hist_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"","code":"WgsFineHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"tibble following columns: depth number loci given depth","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"Writes tidy version wgs_fine_hist_<phenotype>.csv file output DRAGEN","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"","code":"WgsFineHistFile$write(   d,   out_dir = NULL,   prefix,   out_format = \"tsv\",   drid = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"Plots wgs_fine_hist_<phenotype>.csv files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"","code":"WgsFineHistFile$plot(d, x_lim = c(0, 300))"},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"d Parsed object self$read(). x_lim X axis range plot.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"ggplot2 object depth coverage X axis, number loci depth Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"","code":"WgsFineHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsFineHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WgsFineHistFile R6 Class — WgsFineHistFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_fine_hist_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_fine_hist_tumor.csv.gz\", package = \"dracarys\") ch1 <- WgsFineHistFile$new(x1) ch2 <- WgsFineHistFile$new(x2) d1 <- read(ch1) d2 <- read(ch2) ch1$plot(d1)  ch2$plot(d2)  ch1$write(d1, out_dir = tempdir(), prefix = \"seqc_n\", out_format = \"tsv\") ch2$write(d2, out_dir = tempdir(), prefix = \"seqc_t\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"WgsHistFile R6 Class — WgsHistFile","title":"WgsHistFile R6 Class — WgsHistFile","text":"Contains methods reading displaying contents wgs_hist.csv file output DRAGEN","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"WgsHistFile R6 Class — WgsHistFile","text":"dracarys::File -> WgsHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"WgsHistFile R6 Class — WgsHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"WgsHistFile R6 Class — WgsHistFile","text":"WgsHistFile$read() WgsHistFile$write() WgsHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"WgsHistFile R6 Class — WgsHistFile","text":"Reads wgs_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsHistFile R6 Class — WgsHistFile","text":"","code":"WgsHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"WgsHistFile R6 Class — WgsHistFile","text":"tibble one row metrics spread across individual columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"WgsHistFile R6 Class — WgsHistFile","text":"Writes tidy version wgs_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsHistFile R6 Class — WgsHistFile","text":"","code":"WgsHistFile$write(d, out_dir = NULL, prefix, out_format = \"tsv\", drid = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsHistFile R6 Class — WgsHistFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s). drid dracarys ID use dataset (e.g. wfrid.123, prid.456).","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"WgsHistFile R6 Class — WgsHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"WgsHistFile R6 Class — WgsHistFile","text":"","code":"WgsHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"WgsHistFile R6 Class — WgsHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/WgsHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WgsHistFile R6 Class — WgsHistFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.wgs_hist.csv.gz\", package = \"dracarys\") h <- WgsHistFile$new(x) d <- h$read() h$write(d, out_dir = tempdir(), prefix = \"seqc_sv\", out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse VCF with bcftools — bcftools_parse_vcf","title":"Parse VCF with bcftools — bcftools_parse_vcf","text":"Parse VCF bcftools. Uses bcftools hood heavy lifting field splitting, converts parsed character vector tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse VCF with bcftools — bcftools_parse_vcf","text":"","code":"bcftools_parse_vcf(vcf, only_pass = TRUE, alias = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse VCF with bcftools — bcftools_parse_vcf","text":"vcf VCF one samples. only_pass Keep PASS variants (def: TRUE). alias Substitute sample names S1/S2/... alias (def: TRUE).","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse VCF with bcftools — bcftools_parse_vcf","text":"tibble main, FORMAT, INFO fields detected VCF header columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse VCF with bcftools — bcftools_parse_vcf","text":"VCFs 0 variants, returns tibble 0 rows proper number columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","title":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","text":"Parses VCF regions bcftools. VCF subset written temporary file local filesystem, parsed tibble object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","text":"","code":"bcftools_parse_vcf_regions(vcf, r, only_pass = TRUE)"},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","text":"vcf Path VCF. Can S3, http local. presigned URL, need also concatenate VCF index 'vcf_url##idx##vcfi_url'. r Character vector regions subset (e.g. c('chr1:123-456', 'chr2:789-1000')) only_pass Keep PASS variants (def: TRUE).","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","text":"tibble main, FORMAT, INFO fields detected VCF header columns, regions specified r ().","code":""},{"path":"https://umccr.github.io/dracarys/reference/bcftools_parse_vcf_regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse VCF regions with bcftools — bcftools_parse_vcf_regions","text":"","code":"if (FALSE) { vcf_local <- here::here(\"MergedSmallVariants.vcf.gz\") r <- c(\"chr1:115256529-115256529\", \"chr2:29443613-29443613\") bcftools_parse_vcf_regions(vcf_local, r) }"},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_adaptermetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"BCLConvert Adapter Metrics — bclconvert_read_adaptermetrics","title":"BCLConvert Adapter Metrics — bclconvert_read_adaptermetrics","text":"Reads Adapter_Metrics.csv file Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_adaptermetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BCLConvert Adapter Metrics — bclconvert_read_adaptermetrics","text":"","code":"bclconvert_read_adaptermetrics(x)"},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_adaptermetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BCLConvert Adapter Metrics — bclconvert_read_adaptermetrics","text":"x Path Adapter_Metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_adaptermetrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BCLConvert Adapter Metrics — bclconvert_read_adaptermetrics","text":"Tibble","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_adaptermetrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BCLConvert Adapter Metrics — bclconvert_read_adaptermetrics","text":"","code":"if (FALSE) { x <- here::here(\"nogit/bcl_convert/WGS_TsqNano/Reports/Adapter_Metrics.csv\") bclconvert_read_adaptermetrics(x) }"},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_demultiplexstats.html","id":null,"dir":"Reference","previous_headings":"","what":"BCLConvert Demultiplex Stats — bclconvert_read_demultiplexstats","title":"BCLConvert Demultiplex Stats — bclconvert_read_demultiplexstats","text":"Reads Demultiplex_Stats.csv file Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_demultiplexstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BCLConvert Demultiplex Stats — bclconvert_read_demultiplexstats","text":"","code":"bclconvert_read_demultiplexstats(x)"},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_demultiplexstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BCLConvert Demultiplex Stats — bclconvert_read_demultiplexstats","text":"x Path Demultiplex_Stats.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_demultiplexstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BCLConvert Demultiplex Stats — bclconvert_read_demultiplexstats","text":"Tibble","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_demultiplexstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BCLConvert Demultiplex Stats — bclconvert_read_demultiplexstats","text":"","code":"if (FALSE) { x <- here::here(\"nogit/bcl_convert/WGS_TsqNano/Reports/Demultiplex_Stats.csv\") bclconvert_read_demultiplexstats(x) }"},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_indexhoppingcounts.html","id":null,"dir":"Reference","previous_headings":"","what":"BCLConvert Index Hopping Counts — bclconvert_read_indexhoppingcounts","title":"BCLConvert Index Hopping Counts — bclconvert_read_indexhoppingcounts","text":"Reads Index_Hopping_Counts.csv file Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_indexhoppingcounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BCLConvert Index Hopping Counts — bclconvert_read_indexhoppingcounts","text":"","code":"bclconvert_read_indexhoppingcounts(x)"},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_indexhoppingcounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BCLConvert Index Hopping Counts — bclconvert_read_indexhoppingcounts","text":"x Path Index_Hopping_Counts.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_indexhoppingcounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BCLConvert Index Hopping Counts — bclconvert_read_indexhoppingcounts","text":"Tibble","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_indexhoppingcounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BCLConvert Index Hopping Counts — bclconvert_read_indexhoppingcounts","text":"","code":"if (FALSE) { x <- here::here(\"nogit/bcl_convert/WGS_TsqNano/Reports/Index_Hopping_Counts.csv\") bclconvert_read_indexhoppingcounts(x) }"},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_topunknownbarcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"BCLConvert Top Unknown Barcodes — bclconvert_read_topunknownbarcodes","title":"BCLConvert Top Unknown Barcodes — bclconvert_read_topunknownbarcodes","text":"Reads Top_Unknown_Barcodes.csv file Reports directory output BCLConvert.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_topunknownbarcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BCLConvert Top Unknown Barcodes — bclconvert_read_topunknownbarcodes","text":"","code":"bclconvert_read_topunknownbarcodes(x)"},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_topunknownbarcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BCLConvert Top Unknown Barcodes — bclconvert_read_topunknownbarcodes","text":"x Path Top_Unknown_Barcodes.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_topunknownbarcodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BCLConvert Top Unknown Barcodes — bclconvert_read_topunknownbarcodes","text":"Tibble","code":""},{"path":"https://umccr.github.io/dracarys/reference/bclconvert_read_topunknownbarcodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BCLConvert Top Unknown Barcodes — bclconvert_read_topunknownbarcodes","text":"","code":"if (FALSE) { x <- here::here(\"nogit/bcl_convert/WGS_TsqNano/Reports/Top_Unknown_Barcodes.csv\") bclconvert_read_topunknownbarcodes(x) }"},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Print current timestamp for logging — date_log","title":"Print current timestamp for logging — date_log","text":"Print current timestamp logging","code":""},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print current timestamp for logging — date_log","text":"","code":"date_log()"},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print current timestamp for logging — date_log","text":"Current timestamp character.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate dracarys Function — dr_func_eval","title":"Evaluate dracarys Function — dr_func_eval","text":"somewhat hack getting function evaluate based lookup vector. function found, returns NULL.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate dracarys Function — dr_func_eval","text":"","code":"dr_func_eval(f, v = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate dracarys Function — dr_func_eval","text":"f Name function evaluate. v Character vector strings evaluating functions. default, points functions DR_FILE_REGEX dracarys tibble.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate dracarys Function — dr_func_eval","text":"Evaluated function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_func_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate dracarys Function — dr_func_eval","text":"","code":"mean_1_to_10 <- dr_func_eval(\"mean\", v = c(\"mean\", \"sd\"))(1:10) x <- system.file(\"extdata/tso/sample705.fragment_length_hist.json.gz\", package = \"dracarys\") obj <- dr_func_eval(\"TsoFragmentLengthHistFile\")$new(x)"},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys GDS Download — dr_gds_download","title":"dracarys GDS Download — dr_gds_download","text":"Download GDS files can processed dracarys.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dracarys GDS Download — dr_gds_download","text":"","code":"dr_gds_download(   gdsdir,   outdir,   token,   page_size = 100,   pattern = NULL,   dryrun = FALSE,   regexes = DR_FILE_REGEX,   recursive = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dracarys GDS Download — dr_gds_download","text":"gdsdir Full path GDS directory. outdir Path output directory. token ICA access token (def: $ICA_ACCESS_TOKEN env var). page_size Page size (def: 100). pattern Pattern filter returned file type tibble. dryrun TRUE, just list files downloaded (download ). regexes Tibble regex function name. recursive files returned recursively specified GDS directory (TRUE), directly specified GDS directory (FALSE) (def: TRUE).","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_output_format_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Output Format is Valid — dr_output_format_valid","title":"Output Format is Valid — dr_output_format_valid","text":"Checks specified output format valid.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_output_format_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output Format is Valid — dr_output_format_valid","text":"","code":"dr_output_format_valid(x)"},{"path":"https://umccr.github.io/dracarys/reference/dr_output_format_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output Format is Valid — dr_output_format_valid","text":"x Output format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_s3_download.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys S3 Download — dr_s3_download","title":"dracarys S3 Download — dr_s3_download","text":"Download S3 files can processed dracarys.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_s3_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dracarys S3 Download — dr_s3_download","text":"","code":"dr_s3_download(   s3dir,   outdir,   page_size = 100,   pattern = NULL,   regexes = DR_FILE_REGEX,   dryrun = FALSE )"},{"path":"https://umccr.github.io/dracarys/reference/dr_s3_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dracarys S3 Download — dr_s3_download","text":"s3dir Full path S3 directory. outdir Path output directory. page_size Page size (def: 100). pattern Pattern filter returned file type tibble. regexes Tibble regex function name. dryrun TRUE, just list files downloaded (download ).","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_s3_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dracarys S3 Download — dr_s3_download","text":"","code":"s3dir <- file.path(   \"s3://umccr-primary-data-prod/UMCCR-Validation/SBJ00596\",   \"ctTSO/2021-03-17/PTC_SSqCMM05pc_L2100067\" ) outdir <- sub(\"s3:/\", \"~/s3\", s3dir)"},{"path":"https://umccr.github.io/dracarys/reference/dracarys-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys: Post-processing DRAGEN workflows — dracarys-package","title":"dracarys: Post-processing DRAGEN workflows — dracarys-package","text":"Post-processing DRAGEN workflows.","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/dracarys-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dracarys: Post-processing DRAGEN workflows — dracarys-package","text":"Maintainer: Peter Diakumis peterdiakumis@gmail.com (ORCID) Authors: Victor San Kho Lin (ORCID) [contributor]","code":""},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Empty Tibble Given Column Names — empty_tbl","title":"Create Empty Tibble Given Column Names — empty_tbl","text":"https://stackoverflow.com//62535671/2169986. Useful handling edge cases empty data.","code":""},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Empty Tibble Given Column Names — empty_tbl","text":"","code":"empty_tbl(cnames, ctypes = readr::cols(.default = \"c\"))"},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Empty Tibble Given Column Names — empty_tbl","text":"cnames Character vector column names use. ctypes Character vector column types corresponding cnames.","code":""},{"path":"https://umccr.github.io/dracarys/reference/empty_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Empty Tibble Given Column Names — empty_tbl","text":"tibble 0 rows given column names.","code":""},{"path":"https://umccr.github.io/dracarys/reference/file_regex_getter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dracarys DR_FILE_REGEX — file_regex_getter","title":"Get dracarys DR_FILE_REGEX — file_regex_getter","text":"Get dracarys DR_FILE_REGEX","code":""},{"path":"https://umccr.github.io/dracarys/reference/file_regex_getter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dracarys DR_FILE_REGEX — file_regex_getter","text":"","code":"file_regex_getter()"},{"path":"https://umccr.github.io/dracarys/reference/file_regex_getter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dracarys DR_FILE_REGEX — file_regex_getter","text":"DR_FILE_REGEX R tibble object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Download via CLI — gds_file_download","title":"GDS File Download via CLI — gds_file_download","text":"GDS File Download via CLI","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Download via CLI — gds_file_download","text":"","code":"gds_file_download(gds, out, token = Sys.getenv(\"ICA_ACCESS_TOKEN\"))"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Download via CLI — gds_file_download","text":"gds Full path GDS file. Path output file. token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Download via API — gds_file_download_api","title":"GDS File Download via API — gds_file_download_api","text":"GDS File Download via API","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Download via API — gds_file_download_api","text":"","code":"gds_file_download_api(gds_fileid, out_file, token)"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Download via API — gds_file_download_api","text":"gds_fileid GDS file ID. out_file Path output file. token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GDS File Download via API — gds_file_download_api","text":"","code":"if (FALSE) { gds_fileid <- \"fil.f9aa2ba7af0c4330095d08dadd2e16b0\" out <- tempfile() token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") }"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Presigned URL — gds_file_presignedurl","title":"GDS File Presigned URL — gds_file_presignedurl","text":"Returns presigned URL given GDS file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Presigned URL — gds_file_presignedurl","text":"","code":"gds_file_presignedurl(gds_fileid, token)"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Presigned URL — gds_file_presignedurl","text":"gds_fileid GDS file ID. token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_presignedurl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GDS File Presigned URL — gds_file_presignedurl","text":"Presigned URL valid.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS Files List — gds_files_list","title":"GDS Files List — gds_files_list","text":"List files ICA GDS filesystem.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS Files List — gds_files_list","text":"","code":"gds_files_list(   gdsdir,   token,   page_size = NULL,   include_url = FALSE,   no_recurse = TRUE,   page_token = NULL,   recursive = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS Files List — gds_files_list","text":"gdsdir Full path GDS directory. token ICA access token (def: $ICA_ACCESS_TOKEN env var). page_size Page size (def: 10). include_url Include presigned URLs files within GDS directory (def: FALSE). no_recurse recurse file list .e. just give first <page_size> items without recursing list using <page_token>. page_token Page token (def: NULL). Used internally recursion. recursive files returned recursively specified GDS directory, directly specified GDS directory (def: TRUE).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GDS Files List — gds_files_list","text":"Tibble file basename, file size, file full data path, file dir name.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GDS Files List — gds_files_list","text":"","code":"if (FALSE) { gdsdir <- file.path(   \"gds://production/primary_data\",   \"240322_A00130_0290_BH5HLLDSXC/20240323f56ec5a5/WGS_TsqNano\" ) gdsdir <- file.path(   \"gds://bssh.acddbfda498038ed99fa94fe79523959/Runs\",   \"240322_A00130_0290_BH5HLLDSXC_r.3TbcOsEKZUyetygkqIOXcg/InterOp\" ) gdsdir <- file.path(   \"gds://production/analysis_data/SBJ00699/umccrise\",   \"202203277dcf8562/L2200352__L2100146/SBJ00699__MDX220105/coverage\" ) token <- ica_token_validate() page_size <- 11 include_url <- TRUE page_token <- NULL no_recurse <- TRUE recursive <- NULL gds_files_list(gdsdir, token, page_size, include_url, no_recurse, page_token, recursive) }"},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_filter_relevant.html","id":null,"dir":"Reference","previous_headings":"","what":"List Relevant Files In GDS Directory — gds_files_list_filter_relevant","title":"List Relevant Files In GDS Directory — gds_files_list_filter_relevant","text":"Lists relevant files GDS directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_filter_relevant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Relevant Files In GDS Directory — gds_files_list_filter_relevant","text":"","code":"gds_files_list_filter_relevant(   gdsdir,   token,   pattern = NULL,   include_url = FALSE,   page_size = 100,   regexes = DR_FILE_REGEX )"},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_filter_relevant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Relevant Files In GDS Directory — gds_files_list_filter_relevant","text":"gdsdir GDS directory. token ICA access token. pattern Pattern filter returned file type tibble. include_url Include presigned URLs files within GDS directory (def: FALSE). page_size Page size (def: 100). regexes Tibble regex function name.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list_filter_relevant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Relevant Files In GDS Directory — gds_files_list_filter_relevant","text":"tibble type, bname, size, file_id, path, presigned URL.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List GDS Volumes — gds_volumes_list","title":"List GDS Volumes — gds_volumes_list","text":"Lists GDS volumes accessible provided ICA token.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List GDS Volumes — gds_volumes_list","text":"","code":"gds_volumes_list(token, page_size = 10)"},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List GDS Volumes — gds_volumes_list","text":"token ICA access token (def: $ICA_ACCESS_TOKEN env var). page_size Page size (def: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_volumes_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List GDS Volumes — gds_volumes_list","text":"tibble vol name vol id.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate ICA access token — ica_token_validate","title":"Validate ICA access token — ica_token_validate","text":"Validates ICA access token parsing checking expiration date.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate ICA access token — ica_token_validate","text":"","code":"ica_token_validate(token = Sys.getenv(\"ICA_ACCESS_TOKEN\"))"},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate ICA access token — ica_token_validate","text":"token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate ICA access token — ica_token_validate","text":"Returns token valid, else errors .","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Match File to Regex — match_regex","title":"Match File to Regex — match_regex","text":"Matches given file regexes found DR_FILE_REGEX match, returns 'name' match.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match File to Regex — match_regex","text":"","code":"match_regex(x, regexes = DR_FILE_REGEX)"},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match File to Regex — match_regex","text":"x File match. regexes Tibble regex function name.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match File to Regex — match_regex","text":"function corresponding matching regex DR_FILE_REGEX, NA match made.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match File to Regex — match_regex","text":"","code":"match_regex(\"foo.msi.json.gz\") #> [1] \"TsoMsiFile\" match_regex(\"foo.fake.tsv\") #> [1] NA"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_column_map_append.html","id":null,"dir":"Reference","previous_headings":"","what":"Append New MultiQC Workflow Columns — multiqc_column_map_append","title":"Append New MultiQC Workflow Columns — multiqc_column_map_append","text":"Append New MultiQC Workflow Columns","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_column_map_append.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append New MultiQC Workflow Columns — multiqc_column_map_append","text":"","code":"multiqc_column_map_append(d, w, m)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_column_map_append.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append New MultiQC Workflow Columns — multiqc_column_map_append","text":"d Tidy MultiQC tibble raw names (.e. pre-rename). w New workflow name. m Path 'inst/extdata/multiqc_column_map.tsv' dracarys file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Format MultiQC Config Date — multiqc_date_fmt","title":"Format MultiQC Config Date — multiqc_date_fmt","text":"Format MultiQC Config Date","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format MultiQC Config Date — multiqc_date_fmt","text":"","code":"multiqc_date_fmt(cdate)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format MultiQC Config Date — multiqc_date_fmt","text":"cdate String config date \"YYYY-MM-DD, HH:MM UTC\" format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format MultiQC Config Date — multiqc_date_fmt","text":"Properly formatted datetime string \"YYYY-MM-DDTHH:MM:SS\" format. input string formatted differently, return NA.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_date_fmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format MultiQC Config Date — multiqc_date_fmt","text":"","code":"cdate <- \"2023-04-07, 09:09 UTC\" (res1 <- multiqc_date_fmt(cdate)) #> [1] \"2023-04-07T09:09:00\" (res2 <- multiqc_date_fmt(\"2023-04-07\")) #> [1] NA (res3 <- multiqc_date_fmt(\"UNKNOWN\")) #> [1] NA"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"Extracts bar_graph data given plot name MultiQC JSON. bar_graph element JSON object contains:","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"","code":"multiqc_parse_bargraph_plot(dat)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"dat Parsed JSON list element specific plot data extract.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"Tibble name data list-column.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"samples array N subarrays (strings) length . datasets array N subarrays (objects) length B. subarrays contains name (single string) data (array length equal length index-corresponding samples subarray).","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_bargraph_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MultiQC Extract Bar Graph Data — multiqc_parse_bargraph_plot","text":"","code":"if (FALSE) { j1 <- here::here(\"nogit/bcl_convert/multiqc_data.json\") j2 <- here::here(\"nogit/dracarys_gds_sync/multiqc_data.json\") j <- j1 j <- j2 multiqc_list_plots(j) parsed <- RJSONIO::fromJSON(j) dat <- parsed$report_plot_data$mapping_dup_percentage_plot dat <- parsed$report_plot_data$time_metrics_plot dat <- parsed$report_plot_data$bclconvert_lane_counts dat <- parsed$report_plot_data$bclconvert_sample_counts multiqc_parse_bargraph_plot(dat) }"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MultiQC 'report_general_stats_data' JSON Element — multiqc_parse_gen","title":"Parse MultiQC 'report_general_stats_data' JSON Element — multiqc_parse_gen","text":"Parses MultiQC 'report_general_stats_data' JSON Element. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MultiQC 'report_general_stats_data' JSON Element — multiqc_parse_gen","text":"","code":"multiqc_parse_gen(p)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MultiQC 'report_general_stats_data' JSON Element — multiqc_parse_gen","text":"p Parsed MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MultiQC 'report_general_stats_data' JSON Element — multiqc_parse_gen","text":"list.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","title":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","text":"Parse Plot Data MultiQC JSON","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","text":"","code":"multiqc_parse_plots(j, plot_names = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","text":"j Path multiqc_data.json file. plot_names Names plots parse. Use \"everything\" wantz plotz.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","text":"Nested tibble plot name result list column (use tidyr::unnest access).","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Plot Data from MultiQC JSON — multiqc_parse_plots","text":"","code":"if (FALSE) { j <- \"dracarys_gds_sync/multiqc_data.json\" multiqc_parse_plots(j, plot_names = c(\"dragen_coverage_per_contig\")) multiqc_parse_plots(j, plot_names = \"everything\") multiqc_parse_plots(j, plot_names = NULL) }"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw","title":"Parse MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw","text":"Parses MultiQC 'report_saved_raw_data' JSON Element.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw","text":"","code":"multiqc_parse_raw(p)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw","text":"p Parsed MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw","text":"list tibbles tool, tibble contains metrics per sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw_interop.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Interop MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw_interop","title":"Parse Interop MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw_interop","text":"Parses Interop MultiQC 'report_saved_raw_data' JSON Element.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw_interop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Interop MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw_interop","text":"","code":"multiqc_parse_raw_interop(p)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw_interop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Interop MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw_interop","text":"p Parsed Interop MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw_interop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Interop MultiQC 'report_saved_raw_data' JSON Element — multiqc_parse_raw_interop","text":"list summary per-lane tibbles.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","title":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","text":"Extracts xy_line data given plot name MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","text":"","code":"multiqc_parse_xyline_plot(dat)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","text":"dat Parsed JSON list element specific plot data extract.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","text":"Tibble name data list-column.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MultiQC Extract XY Line Plot Data — multiqc_parse_xyline_plot","text":"Note dragen_coverage_per_contig/non_main_contig plots conform normal structure xy_line plots, handle separately.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":null,"dir":"Reference","previous_headings":"","what":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage — multiqc_parse_xyline_plot_contig_cvg","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage — multiqc_parse_xyline_plot_contig_cvg","text":"MultiQC Extract XY Line Plot Data DRAGEN Contig Coverage","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage — multiqc_parse_xyline_plot_contig_cvg","text":"","code":"multiqc_parse_xyline_plot_contig_cvg(dat)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage — multiqc_parse_xyline_plot_contig_cvg","text":"dat Parsed JSON list element specific plot data extract.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_xyline_plot_contig_cvg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MultiQC Extract XY Line Plot Data for DRAGEN Contig Coverage — multiqc_parse_xyline_plot_contig_cvg","text":"Tibble name data list-column.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy MultiQC JSON — multiqc_tidy_json","title":"Tidy MultiQC JSON — multiqc_tidy_json","text":"Tidies 'multiqc_data.json' output MultiQC. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy MultiQC JSON — multiqc_tidy_json","text":"","code":"multiqc_tidy_json(j)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy MultiQC JSON — multiqc_tidy_json","text":"j Path multiqc_data.json file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy MultiQC JSON — multiqc_tidy_json","text":"tidy tibble column corresponds single metric, row corresponds single sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Local R Dataframe to Spark-backed Table — rdf2tab","title":"Write Local R Dataframe to Spark-backed Table — rdf2tab","text":"First converts local R dataframe Spark DataFrame using SparkR, appends specified table.","code":""},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Local R Dataframe to Spark-backed Table — rdf2tab","text":"","code":"rdf2tab(rdf, outpath, drid = NULL, ...)"},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Local R Dataframe to Spark-backed Table — rdf2tab","text":"rdf Local R dataframe outpath Path output table. drid dracarys ID use dataset (e.g. wfrid.123, prid.456) ... Additional arguments SparkR::write.df.","code":""},{"path":"https://umccr.github.io/dracarys/reference/rdf2tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Local R Dataframe to Spark-backed Table — rdf2tab","text":"","code":"if (FALSE) { rdf <- mtcars rdf2tab(rdf, \"dev.wf1.mtcars\", drid = \"wfr.123\") }"},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":null,"dir":"Reference","previous_headings":"","what":"Read File object — read.File","title":"Read File object — read.File","text":"Read file based type.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read File object — read.File","text":"","code":"# S3 method for File read(x, ...)"},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read File object — read.File","text":"x Object class File. ... Arguments passed appropriate read_* function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Reading — read","title":"Generic Reading — read","text":"Generic function reading dracarys objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Reading — read","text":"","code":"read(x, ...)"},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Reading — read","text":"x Object respective class. ... Additional arguments.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Reading — read","text":"Possibly tibble list, depending object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_files_list_filter_relevant.html","id":null,"dir":"Reference","previous_headings":"","what":"List Relevant Files In AWS S3 Directory — s3_files_list_filter_relevant","title":"List Relevant Files In AWS S3 Directory — s3_files_list_filter_relevant","text":"Lists relevant files AWS S3 directory.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_files_list_filter_relevant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Relevant Files In AWS S3 Directory — s3_files_list_filter_relevant","text":"","code":"s3_files_list_filter_relevant(   s3dir,   pattern = NULL,   page_size = 1000,   max_items = 1000,   presign = FALSE,   expiry_sec = 43200 )"},{"path":"https://umccr.github.io/dracarys/reference/s3_files_list_filter_relevant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Relevant Files In AWS S3 Directory — s3_files_list_filter_relevant","text":"s3dir S3 directory. pattern Pattern filter returned file type tibble. page_size size page get AWS service call (def: 1000). max_items total number items return command’s output (def: 1000). presign Include presigned URLs (def: FALSE). expiry_sec Number seconds presigned URL valid (generated) (def: 43200 (12hrs)).","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_files_list_filter_relevant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Relevant Files In AWS S3 Directory — s3_files_list_filter_relevant","text":"tibble path, date, file size, file type, presigned URL requested.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_files_list_filter_relevant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Relevant Files In AWS S3 Directory — s3_files_list_filter_relevant","text":"","code":"if (FALSE) { s3dir <- \"s3://umccr-primary-data-prod/cancer_report_tables\" s3_files_list_filter_relevant(s3dir = s3dir, presign = TRUE) }"},{"path":"https://umccr.github.io/dracarys/reference/s3_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search AWS S3 Objects — s3_search","title":"Search AWS S3 Objects — s3_search","text":"Searches given pattern UMCCR umccr-primary-data-prod AWS S3 bucket.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search AWS S3 Objects — s3_search","text":"","code":"s3_search(pat, rows)"},{"path":"https://umccr.github.io/dracarys/reference/s3_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search AWS S3 Objects — s3_search","text":"pat Pattern search (e.g. 'multiqc_data.json'). rows Max number rows return.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search AWS S3 Objects — s3_search","text":"Tibble S3 path, object size, date modified, id, unique hash.","code":""},{"path":"https://umccr.github.io/dracarys/reference/s3_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search AWS S3 Objects — s3_search","text":"","code":"if (FALSE) { pat <- \"qc_summary.tsv.gz\" s3_search(pat, 10) }"},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":null,"dir":"Reference","previous_headings":"","what":"Session Information Kable — session_info_kable","title":"Session Information Kable — session_info_kable","text":"Session information kables vignettes.","code":""},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Session Information Kable — session_info_kable","text":"","code":"session_info_kable(pkgs = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session Information Kable — session_info_kable","text":"pkgs Vector R packages display vignette. default returns .","code":""},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Session Information Kable — session_info_kable","text":"list two kables containing information platform specified packages.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Multiple TimeMetricsFile Objects — time_metrics_process","title":"Process Multiple TimeMetricsFile Objects — time_metrics_process","text":"Processes multiple TimeMetricsFile objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Multiple TimeMetricsFile Objects — time_metrics_process","text":"","code":"time_metrics_process(x, id = seq_len(length(x)))"},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Multiple TimeMetricsFile Objects — time_metrics_process","text":"x Atomic vector one TimeMetricsFile objects. id ID input, used disambiguate files generated samples. Default: index 1 length x.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Multiple TimeMetricsFile Objects — time_metrics_process","text":"tibble following columns: Step: DRAGEN step Time: time HH:MM","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Multiple TimeMetricsFile Objects — time_metrics_process","text":"","code":"p <- system.file(\"extdata/wgs/SEQC-II.time_metrics.csv.gz\", package = \"dracarys\") x <- TimeMetricsFile$new(p) (tm <- time_metrics_process(c(x, x), id = c(\"run1\", \"run2\"))) #> # A tibble: 2 × 20 #>   ID    `Total Runtime` `Loading Reference` `Aligning Reads` `Duplicate Marking` #>   <chr> <chr>           <chr>               <chr>            <chr>               #> 1 run1  04:10           00:01               00:35            00:01               #> 2 run2  04:10           00:01               00:35            00:01               #> # ℹ 15 more variables: `Sorting and Marking Duplicates` <chr>, #> #   `DRAGStr Calibration` <chr>, `Saving Map/Align Output` <chr>, #> #   `Partial Reconfiguration` <chr>, `Variant Calling` <chr>, #> #   `Calculating Target Counts` <chr>, `Correcting GC Bias` <chr>, #> #   `Normalizing Case Sample` <chr>, `Performing Segmentation` <chr>, #> #   `Generating Somatic Model Input` <chr>, `Fitting Somatic Model` <chr>, #> #   `Generating CNV Calls` <chr>, `Generating CNV Track Files` <chr>, …"},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy UMCCR Results — umccr_tidy","title":"Tidy UMCCR Results — umccr_tidy","text":"Tidies UMCCR workflow results list tibbles writes individual tibbles TSV, Parquet, SparkDF, RDS format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy UMCCR Results — umccr_tidy","text":"","code":"umccr_tidy(   in_dir = NULL,   out_dir = NULL,   prefix = NULL,   local_dir = NULL,   out_format = \"tsv\",   dryrun = FALSE,   token = Sys.getenv(\"ICA_ACCESS_TOKEN\"),   pattern = NULL )"},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy UMCCR Results — umccr_tidy","text":"in_dir Directory path UMCCR workflow results (can GDS, S3 local). out_dir Output directory. prefix Prefix output file(s). local_dir indir GDS S3 directory, 'recognisable' files first downloaded directory. out_format Format output (tsv, parquet, ) (def: tsv). dryrun Just list files downloaded (def: FALSE). token ICA access token (default uses $ICA_ACCESS_TOKEN env var). pattern Pattern filter returned file type tibble (see name column DR_FILE_REGEX tibble).","code":""},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy UMCCR Results — umccr_tidy","text":"Tibble path input file resultant tidy object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/umccr_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy UMCCR Results — umccr_tidy","text":"","code":"if (FALSE) { in_dir <- file.path(   \"s3://umccr-primary-data-prod/UMCCR-Validation/SBJ00596\",   \"ctTSO/2021-03-17/PTC_SSqCMM05pc_L2100067\" ) in_dir <- paste0(   \"gds://production/analysis_data/SBJ01639/tso_ctdna_tumor_only/\",   \"202204045ad5743c/L2200214/Results/PRJ220425_L2200214\" ) o1 <- sub(\"^gds://\", \"\", in_dir) o1 <- sub(\"s3:/\", \"~/s3\", in_dir) out_dir <- o1 out_dir <- file.path(fs::path_home(), \"icav1/g\", o1) # in_dir <- file.path(out_dir, \"dracarys_gds_sync\") prefix <- \"SBJ01639\" prefix <- \"PTC_SSqCMM05pc_L2100067\" out_format <- \"rds\" umccr_tidy(in_dir = in_dir, out_dir = out_dir, prefix = prefix, out_format = out_format, dryrun = F)  in_dir <- here::here(glue(\"nogit/tso/2022-12-13/SBJ02858/dracarys_gds_sync\")) out_dir <- file.path(in_dir, \"../out\") gds_local_dir <- NULL prefix <- \"SBJ02858\" dryrun <- F umccr_tidy(in_dir = in_dir, out_dir = out_dir, prefix = prefix, dryrun = F) }"},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-0140-2024-05-13","dir":"Changelog","previous_headings":"","what":"dracarys 0.14.0 (2024-05-13)","title":"dracarys 0.14.0 (2024-05-13)","text":"0.13.0 - 0.14.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-0130-2024-03-15","dir":"Changelog","previous_headings":"","what":"dracarys 0.13.0 (2024-03-15)","title":"dracarys 0.13.0 (2024-03-15)","text":"0.12.0 - 0.13.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-0120-2023-12-12","dir":"Changelog","previous_headings":"","what":"dracarys 0.12.0 (2023-12-12)","title":"dracarys 0.12.0 (2023-12-12)","text":"0.11.0 - 0.12.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-0110-2023-08-22","dir":"Changelog","previous_headings":"","what":"dracarys 0.11.0 (2023-08-22)","title":"dracarys 0.11.0 (2023-08-22)","text":"0.10.0 - 0.11.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-0100-2023-06-22","dir":"Changelog","previous_headings":"","what":"dracarys 0.10.0 (2023-06-22)","title":"dracarys 0.10.0 (2023-06-22)","text":"0.9.0 - 0.10.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-090-2023-05-10","dir":"Changelog","previous_headings":"","what":"dracarys 0.9.0 (2023-05-10)","title":"dracarys 0.9.0 (2023-05-10)","text":"0.8.0 - 0.9.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-080-2023-02-24","dir":"Changelog","previous_headings":"","what":"dracarys 0.8.0 (2023-02-24)","title":"dracarys 0.8.0 (2023-02-24)","text":"0.7.0 - 0.8.0 diff","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-070-2023-02-15","dir":"Changelog","previous_headings":"","what":"dracarys 0.7.0 (2023-02-15)","title":"dracarys 0.7.0 (2023-02-15)","text":"0.6.0 - 0.7.0 diff Mostly added use cases based requests curation team related umccrise (CHORD, HRDetect, QC summary), PCGR, MultiQC. umccr_tidy: workhorse handles tidying method dispatch. gds_file_presignedurl PcgrJsonFile PcgrTiersFile UmChordTsvFile UmHrdetectTsvFile UmQcSumFile UmSigsSnvFile MultiqcFile Updated README unified dracarys tidy CLI. Added fun column FILE_REGEX handling method dispatch. GH Actions: Remove linux/arm64 docker since conda pkgs don’t generally ARM64 equivalents. GH Actions: use “miniforge-variant: Mambaforge” (see issue).","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-060-2023-01-09","dir":"Changelog","previous_headings":"","what":"dracarys 0.6.0 (2023-01-09)","title":"dracarys 0.6.0 (2023-01-09)","text":"0.5.0 - 0.6.0 diff replace ::set-output. add linux/arm64 support. replace select .data quotes. bump Roxygen 7.2.1 -> 7.2.2 add {fs}, {httr}, {jose}, {sessioninfo} dependencies. import %||% {rlang} specify fallback values NULL cases. ✨ pkgdown: change theme simplex. bump mambaforge: 4.12.0-2 -> 22.9.0-2 bump conda-lock: 1.0.5 -> 1.3.0 add support tidying outputs UMCCR TSO500 ctDNA workflow, generating HTML file tidy results workflow. tso_tidy tidying outputs UMCCR TSO500 ctDNA workflow. tso_rmd generating HTML file tidy results workflow. dr_gds_download downloading dracarys-related files GDS. gds_files_list listing files GDS via API. gds_file_download gds_file_download_api downloading files GDS via ica binary API (via presigned URLs), respectively. ica_token_validate validating ICA access token valid expired. TsoCombinedVariantOutputFile: files deemed less info compared output files. dracarys_tidy_multiqc: renamed dracarys_multiqc. mkdir: use fs::create_dir instead. Remove {tibble}, {readr} {ggplot} multi-imports R6, since can get away just importing single function one R6 classes.","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-050-2022-09-28","dir":"Changelog","previous_headings":"","what":"dracarys 0.5.0 (2022-09-28)","title":"dracarys 0.5.0 (2022-09-28)","text":"0.4.0 - 0.5.0 diff move map separate TSV CLI: add option output format (tsv, parquet, ) (pr18). new contributors: @victorskl","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-040-2022-09-12","dir":"Changelog","previous_headings":"","what":"dracarys 0.4.0 (2022-09-12)","title":"dracarys 0.4.0 (2022-09-12)","text":"0.3.0 - 0.4.0 diff also add Quarto HTML report template","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-030-2022-08-28","dir":"Changelog","previous_headings":"","what":"dracarys 0.3.0 (2022-08-28)","title":"dracarys 0.3.0 (2022-08-28)","text":"0.2.0 - 0.3.0 diff ⭐ MultiQC: support DRAGEN ctdna output (pr13).","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-020-2022-07-23","dir":"Changelog","previous_headings":"","what":"dracarys 0.2.0 (2022-07-23)","title":"dracarys 0.2.0 (2022-07-23)","text":"0.1.0 - 0.2.0 diff Add MULTIQC_COLUMNS tibble maps raw metric name cleaner name (pr12). Support MultiQC JSONs (bcbio-wts bcbio-wgs).","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-010-2022-07-11","dir":"Changelog","previous_headings":"","what":"dracarys 0.1.0 (2022-07-11)","title":"dracarys 0.1.0 (2022-07-11)","text":"Initial release dracarys. Support MultiQC JSON tidying. Add conda, conda-lock, Docker support (pr11). Initially supporting just MultiQC json input (dragen-alignment, dragen-transcriptome, dragen-tumor-normal, dragen-umccrise, bcbio-umccrise).","code":""}]
