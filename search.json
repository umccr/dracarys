[{"path":"https://umccr.github.io/dracarys/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Diakumis. Author, maintainer. Victor San Kho Lin. Author, contributor.","code":""},{"path":"https://umccr.github.io/dracarys/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Diakumis P, Lin V (2023). dracarys: Post-processing DRAGEN workflows. https://github.com/umccr/dracarys, https://umccr.github.io/dracarys/.","code":"@Manual{,   title = {dracarys: Post-processing DRAGEN workflows},   author = {Peter Diakumis and Victor San Kho Lin},   year = {2023},   note = {https://github.com/umccr/dracarys, https://umccr.github.io/dracarys/}, }"},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-dracarys---dragen-workflow-post-processing","dir":"","previous_headings":"","what":"Post-processing DRAGEN workflows","title":"Post-processing DRAGEN workflows","text":"Docs: https://umccr.github.io/dracarys/","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Post-processing DRAGEN workflows","text":"used inside conda environment:","code":"remotes::install_github(\"umccr/dracarys\") conda install r-dracarys -c umccr -c conda-forge -c bioconda"},{"path":[]},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-multiqc","dir":"","previous_headings":"Main modules","what":"üåà multiqc","title":"Post-processing DRAGEN workflows","text":"Generate ‚Äòtidier‚Äô form multiqc_data.json MultiQC data summary file. Builds functionality TidyMultiqc. TSV /Parquet outputs generated. TSV file, row corresponds single sample, column corresponds single quality metric/variable. See CLI section options.","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-tso","dir":"","previous_headings":"Main modules","what":"üå∂ tso","title":"Post-processing DRAGEN workflows","text":"Generate ‚Äòtidier‚Äô form UMCCR TSO500 ctDNA workflow results. Input GDS (local) directory ‚Äòraw‚Äô TSO500 ctDNA results, output includes relevant GDS files synced, tidy form parquet/tsv format, HTML report results table form, RDS R file feeds HTML report. See CLI section options.","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-cli","dir":"","previous_headings":"","what":"üíª CLI","title":"Post-processing DRAGEN workflows","text":"dracarys command line interface available convenience. ‚Äôre using conda package, dracarys.R command already set inside activated conda environment. ‚Äôre using conda package, need export dracarys/inst/cli/ directory PATH order use dracarys.R.","code":"dracarys_cli=$(Rscript -e 'x = system.file(\"cli\", package = \"dracarys\"); cat(x, \"\\n\")' | xargs) export PATH=\"${dracarys_cli}:${PATH}\" $ dracarys.R --version dracarys.R 0.6.0  #------- multiqc -------#   $ dracarys.R multiqc --help usage: dracarys.R multiqc [-h] -j JSON -o OUTDIR -p PREFIX [-q]                           [-f {tsv,parquet,both}]  optional arguments:   -h, --help            show this help message and exit   -j JSON, --json JSON  üí© Path to 'multiqc_data.json'.   -o OUTDIR, --outdir OUTDIR                         üéÅ Output results to this directory.   -p PREFIX, --prefix PREFIX                         ‚ú® Prefix output files with this string.   -q, --quiet           üò¥ Shush all the logs.   -f {tsv,parquet,both}, --format {tsv,parquet,both}                         üç¶ Format of output (default: tsv). #------- tso -------#   $ dracarys.R tso --help usage: dracarys.R tso [-h] -i IN_DIR -o OUT_DIR [-r REPORT_DIR] -p PREFIX                       [-t TOKEN] [-g GDS_LOCAL_DIR] [--rds_dir RDS_DIR]                       [-f {tsv,parquet,both}] [-n] [-q] [--quiet_rmd]  optional arguments:   -h, --help            show this help message and exit   -i IN_DIR, --in_dir IN_DIR                         üí© Directory with TSO500 ctDNA workflow results (GDS or                         local).   -o OUT_DIR, --out_dir OUT_DIR                         üéÅ Output tidy results to this directory.   -r REPORT_DIR, --report_dir REPORT_DIR                         ‚ú® Output HTML report with tidy RDS object to this                         directory.   -p PREFIX, --prefix PREFIX                         üíÉ Prefix string (used for all results).   -t TOKEN, --token TOKEN                         üôà ICA access token (def. ICA_ACCESS_TOKEN env var).   -g GDS_LOCAL_DIR, --gds_local_dir GDS_LOCAL_DIR                         üìã If input is a GDS directory, download the                         'recognisable' files to this directory. If not                         specified, files will be downloaded to                         'out_dir/dracarys_gds_sync'.   --rds_dir RDS_DIR     üíß Directory to save RDS object with results from tidy                         function.   -f {tsv,parquet,both}, --format {tsv,parquet,both}                         üç¶ Format of output (default: tsv).   -n, --dryrun          üê´ Dry run (just print tibble with files to be tidied).   -q, --quiet           üò¥ Shush all the logs (also see --quiet_rmd).   --quiet_rmd           üò¥ Shush just the Rmd rendering logs."},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":null,"dir":"Reference","previous_headings":"","what":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"Contains methods reading displaying contents wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN. file contains estimated coverage contigs, autosomal estimated coverage.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"dracarys::File -> ContigMeanCovFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"ContigMeanCovFile$read() ContigMeanCovFile$plot() ContigMeanCovFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"Reads wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"","code":"ContigMeanCovFile$read(keep_alt = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"keep_alt Keep ALT + Mito chromosomes?","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"tibble following columns: label: file label. chrom: contig name. n_bases: number bases aligned contig (excludes bases duplicate marked reads, reads MAPQ=0, clipped bases). coverage: col2 / contig length","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"Plots wgs_contig_mean_cov_<phenotype>.csv files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"","code":"ContigMeanCovFile$plot(top_alt_n = 15)"},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"top_alt_n Number top covered alt contigs plot per phenotype.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"ggplot2 object chromosomes X axis, coverage Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"","code":"ContigMeanCovFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ContigMeanCovFile R6 Class ‚Äî ContigMeanCovFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_contig_mean_cov_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_contig_mean_cov_tumor.csv.gz\", package = \"dracarys\") cc1 <- ContigMeanCovFile$new(x1) cc2 <- ContigMeanCovFile$new(x2) read(cc1) #> # A tibble: 25 √ó 4 #>    label     chrom     n_bases coverage #>    <chr>     <chr>       <dbl>    <dbl> #>  1 SEQC-II_N chr1  11391872260     49.4 #>  2 SEQC-II_N chr2  11910292998     49.5 #>  3 SEQC-II_N chr3   9864967562     49.8 #>  4 SEQC-II_N chr4   9380962565     49.4 #>  5 SEQC-II_N chr5   8851326991     49.5 #>  6 SEQC-II_N chr6   7013593668     41.2 #>  7 SEQC-II_N chr7   7641057161     48.1 #>  8 SEQC-II_N chr8   7051795336     48.7 #>  9 SEQC-II_N chr9   5706387709     46.9 #> 10 SEQC-II_N chr10  6468177560     48.5 #> # ‚Ä¶ with 15 more rows read(cc2, keep_alt = TRUE) #> # A tibble: 3,367 √ó 4 #>    label     chrom     n_bases coverage #>    <chr>     <chr>       <dbl>    <dbl> #>  1 SEQC-II_T chr1  19825282617     86.0 #>  2 SEQC-II_T chr2  20173660434     83.9 #>  3 SEQC-II_T chr3  17397714315     87.8 #>  4 SEQC-II_T chr4  15471335389     81.5 #>  5 SEQC-II_T chr5  15376687254     85.9 #>  6 SEQC-II_T chr6  13348447303     78.5 #>  7 SEQC-II_T chr7  16991597908    107.  #>  8 SEQC-II_T chr8  13202798183     91.2 #>  9 SEQC-II_T chr9  10085223132     82.8 #> 10 SEQC-II_T chr10 10799872299     81.0 #> # ‚Ä¶ with 3,357 more rows plot(cc1)"},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"Contains methods reading displaying contents wgs_coverage_metrics_<phenotype>.csv file output DRAGEN. file contains read depth coverage metrics.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"dracarys::File -> CoverageMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"CoverageMetricsFile$read() CoverageMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"Reads wgs_coverage_metrics_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"","code":"CoverageMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"tibble following columns: label: file label. var: variable name. var_abbrev: variable abbreviation. pct: percentage value. count: count value.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"","code":"CoverageMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CoverageMetricsFile R6 Class ‚Äî CoverageMetricsFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_coverage_metrics_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_coverage_metrics_tumor.csv.gz\", package = \"dracarys\") cm1 <- CoverageMetricsFile$new(x1) cm2 <- CoverageMetricsFile$new(x2) read(cm1) #> # A tibble: 27 √ó 5 #>    label     var                                            var_a‚Ä¶¬π    pct count #>    <chr>     <chr>                                          <chr>    <dbl> <dbl> #>  1 SEQC-II_N Uniformity of coverage (PCT > 0.2*mean) over ‚Ä¶ unifor‚Ä¶  95.8     NA #>  2 SEQC-II_N PCT of genome with coverage [100x: inf)        %genom‚Ä¶   0.25    NA #>  3 SEQC-II_N PCT of genome with coverage [ 50x: inf)        %genom‚Ä¶  43.8     NA #>  4 SEQC-II_N PCT of genome with coverage [ 20x: inf)        %genom‚Ä¶  93.2     NA #>  5 SEQC-II_N PCT of genome with coverage [ 15x: inf)        %genom‚Ä¶  95.0     NA #>  6 SEQC-II_N PCT of genome with coverage [ 10x: inf)        %genom‚Ä¶  95.8     NA #>  7 SEQC-II_N PCT of genome with coverage [  3x: inf)        %genom‚Ä¶  96.7     NA #>  8 SEQC-II_N PCT of genome with coverage [  1x: inf)        %genom‚Ä¶  97.2     NA #>  9 SEQC-II_N PCT of genome with coverage [  0x: inf)        %genom‚Ä¶ 100       NA #> 10 SEQC-II_N PCT of genome with coverage [ 50x:100x)        %genom‚Ä¶  43.6     NA #> # ‚Ä¶ with 17 more rows, and abbreviated variable name ¬π‚Äãvar_abbrev read(cm2) #> # A tibble: 27 √ó 5 #>    label     var                                             var_a‚Ä¶¬π   pct count #>    <chr>     <chr>                                           <chr>   <dbl> <dbl> #>  1 SEQC-II_T Uniformity of coverage (PCT > 0.2*mean) over g‚Ä¶ unifor‚Ä¶  96.1    NA #>  2 SEQC-II_T PCT of genome with coverage [100x: inf)         %genom‚Ä¶  22.3    NA #>  3 SEQC-II_T PCT of genome with coverage [ 50x: inf)         %genom‚Ä¶  89.5    NA #>  4 SEQC-II_T PCT of genome with coverage [ 20x: inf)         %genom‚Ä¶  96.0    NA #>  5 SEQC-II_T PCT of genome with coverage [ 15x: inf)         %genom‚Ä¶  96.2    NA #>  6 SEQC-II_T PCT of genome with coverage [ 10x: inf)         %genom‚Ä¶  96.5    NA #>  7 SEQC-II_T PCT of genome with coverage [  3x: inf)         %genom‚Ä¶  97.1    NA #>  8 SEQC-II_T PCT of genome with coverage [  1x: inf)         %genom‚Ä¶  97.5    NA #>  9 SEQC-II_T PCT of genome with coverage [  0x: inf)         %genom‚Ä¶ 100      NA #> 10 SEQC-II_T PCT of genome with coverage [ 50x:100x)         %genom‚Ä¶  67.3    NA #> # ‚Ä¶ with 17 more rows, and abbreviated variable name ¬π‚Äãvar_abbrev"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":null,"dir":"Reference","previous_headings":"","what":"File R6 Class ‚Äî File","title":"File R6 Class ‚Äî File","text":"File base R6 class representing TSV/CSV/JSON output DRAGEN workflow. File path, basename, type, default read method type.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"File R6 Class ‚Äî File","text":"path Name full path file.","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"File R6 Class ‚Äî File","text":"File$new() File$bname() File$type() File$print() File$read() File$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"File R6 Class ‚Äî File","text":"Create new File object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$new(path = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class ‚Äî File","text":"path Name full path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-bname-","dir":"Reference","previous_headings":"","what":"Method bname()","title":"File R6 Class ‚Äî File","text":"Basename file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$bname()"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"File R6 Class ‚Äî File","text":"Basename file character vector.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-type-","dir":"Reference","previous_headings":"","what":"Method type()","title":"File R6 Class ‚Äî File","text":"Get type file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$type()"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"File R6 Class ‚Äî File","text":"String describing type file (CSV, TSV, JSON ).","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"File R6 Class ‚Äî File","text":"Print details File.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class ‚Äî File","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"File R6 Class ‚Äî File","text":"Read file based type.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$read(...)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class ‚Äî File","text":"... Arguments passed appropriate read_* function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"File R6 Class ‚Äî File","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class ‚Äî File","text":"","code":"File$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class ‚Äî File","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File R6 Class ‚Äî File","text":"","code":"F1 <- File$new(readr::readr_example(\"mtcars.csv\")) F1$read(col_types = readr::cols(\"double\")) #> # A tibble: 32 √ó 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # ‚Ä¶ with 22 more rows F1$bname() #> [1] \"mtcars.csv\""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"FineHistFile R6 Class ‚Äî FineHistFile","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"Contains methods reading displaying contents wgs_fine_hist_<phenotype>.csv file output DRAGEN. file contains two columns: Depth Overall. value Depth column ranges 0 1000+ Overall column indicates number loci covered corresponding depth.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"dracarys::File -> FineHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"FineHistFile$read() FineHistFile$plot() FineHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"Reads wgs_fine_hist_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"","code":"FineHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"tibble three columns: label depth number loci given depth","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"Plots wgs_fine_hist_<phenotype>.csv files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"","code":"FineHistFile$plot(x_lim = c(0, 300))"},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"x_lim X axis range plot.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"ggplot2 object depth coverage X axis, number loci depth Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"","code":"FineHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FineHistFile R6 Class ‚Äî FineHistFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_fine_hist_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_fine_hist_tumor.csv.gz\", package = \"dracarys\") ch1 <- FineHistFile$new(x1) ch2 <- FineHistFile$new(x2) read(ch1) #> # A tibble: 2,001 √ó 3 #>    label     depth   n_loci #>    <chr>     <int>    <dbl> #>  1 SEQC-II_N     0 84762208 #>  2 SEQC-II_N     1  9324435 #>  3 SEQC-II_N     2  5702790 #>  4 SEQC-II_N     3  4424768 #>  5 SEQC-II_N     4  3833201 #>  6 SEQC-II_N     5  3570619 #>  7 SEQC-II_N     6  3534313 #>  8 SEQC-II_N     7  3609742 #>  9 SEQC-II_N     8  3788680 #> 10 SEQC-II_N     9  4050997 #> # ‚Ä¶ with 1,991 more rows read(ch2) #> # A tibble: 2,001 √ó 3 #>    label     depth   n_loci #>    <chr>     <int>    <dbl> #>  1 SEQC-II_T     0 75987894 #>  2 SEQC-II_T     1  8548864 #>  3 SEQC-II_T     2  4914437 #>  4 SEQC-II_T     3  3591147 #>  5 SEQC-II_T     4  2939892 #>  6 SEQC-II_T     5  2521559 #>  7 SEQC-II_T     6  2228452 #>  8 SEQC-II_T     7  2023887 #>  9 SEQC-II_T     8  1885489 #> 10 SEQC-II_T     9  1779691 #> # ‚Ä¶ with 1,991 more rows plot(ch1)  plot(ch2)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"Contains methods reading plotting contents fragment_length_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"dracarys::File -> FragmentLengthHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"FragmentLengthHistFile$read() FragmentLengthHistFile$plot() FragmentLengthHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"Reads fragment_length_hist.csv file, contains fragment length distribution sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"tibble following columns: fragmentLength: estimated fragment length count: number reads estimated fragment length sample: name sample","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"Plots fragment length distributions given fragment_length_hist.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$plot(min_count = 10)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"min_count Minimum read count plotted (Default: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"ggplot2 plot containing fragment lengths X axis read counts Y axis sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FragmentLengthHistFile R6 Class ‚Äî FragmentLengthHistFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.fragment_length_hist.csv.gz\", package = \"dracarys\") fl <- FragmentLengthHistFile$new(x) fl$read() # or read(fl) #> # A tibble: 77,058 √ó 3 #>    fragmentLength count sample         #>             <int> <int> <chr>          #>  1             35     1 SEQC-II_normal #>  2             36     1 SEQC-II_normal #>  3             37     0 SEQC-II_normal #>  4             38     0 SEQC-II_normal #>  5             39     0 SEQC-II_normal #>  6             40     0 SEQC-II_normal #>  7             41     1 SEQC-II_normal #>  8             42     0 SEQC-II_normal #>  9             43     0 SEQC-II_normal #> 10             44     0 SEQC-II_normal #> # ‚Ä¶ with 77,048 more rows fl$plot() # or plot(fl)"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"Contains methods reading displaying contents mapping_metrics.csv file output DRAGEN. file contains mapping aligning metrics, like metrics computed Samtools Flagstat command. metrics available aggregate level (input data), per read group level. Unless explicitly stated, metrics units reads (.e., terms pairs alignments).","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"dracarys::File -> MappingMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"MappingMetricsFile$read() MappingMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"Reads mapping_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"","code":"MappingMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"tibble following columns: - category: summary read group - Phenotype: e.g. tumor, normal - RG: read group - var: metric variable - var_abbrev: metric variable abbreviation - count: count reads - pct: percentage reads","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"","code":"MappingMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MappingMetricsFile R6 Class ‚Äî MappingMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.mapping_metrics.csv.gz\", package = \"dracarys\") mm <- MappingMetricsFile$new(x) mm$read() # or read(mm) #> # A tibble: 218 √ó 7 #>    category Phenotype RG    var                            var_a‚Ä¶¬π   count   pct #>    <chr>    <chr>     <chr> <chr>                          <chr>     <dbl> <dbl> #>  1 summary  tumor     TOTAL Total Reads per RG             Tot      2.2 e9 100   #>  2 summary  tumor     TOTAL Number of duplicate marked re‚Ä¶ Dup      4.43e8  20.2 #>  3 summary  tumor     TOTAL Number of duplicate marked an‚Ä¶ Dup Rem NA       NA   #>  4 summary  tumor     TOTAL Number of unique reads (excl.‚Ä¶ Unique   1.76e9  79.8 #>  5 summary  tumor     TOTAL Reads with mate sequenced      Mated    2.2 e9 100   #>  6 summary  tumor     TOTAL Reads without mate sequenced   noMated  0        0   #>  7 summary  tumor     TOTAL QC-failed reads                Failed   0        0   #>  8 summary  tumor     TOTAL Mapped reads                   Mapped   2.20e9  99.8 #>  9 summary  tumor     TOTAL Mapped reads adjusted for fil‚Ä¶ Mapped‚Ä¶  2.20e9  99.8 #> 10 summary  tumor     TOTAL Mapped reads R1                R1map    1.10e9 100.  #> # ‚Ä¶ with 208 more rows, and abbreviated variable name ¬π‚Äãvar_abbrev"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"Contains methods reading contents ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"dracarys::File -> PloidyEstimationMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"PloidyEstimationMetricsFile$read() PloidyEstimationMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"Reads ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"tibble following columns: - label: sample label (inferred file name) - var: variable interest (e.g. X median coverage) - value: value specific variable (e.g. X median coverage variable value  50)","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PloidyEstimationMetricsFile R6 Class ‚Äî PloidyEstimationMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.ploidy_estimation_metrics.csv.gz\", package = \"dracarys\") pem <- PloidyEstimationMetricsFile$new(x) pem$read() # or read(pem) #> # A tibble: 28 √ó 3 #>    label   var                         value #>    <chr>   <chr>                       <chr> #>  1 SEQC-II Autosomal median coverage   56.31 #>  2 SEQC-II X median coverage           27.87 #>  3 SEQC-II Y median coverage           0.00  #>  4 SEQC-II 1 median / Autosomal median 1.01  #>  5 SEQC-II 2 median / Autosomal median 1.01  #>  6 SEQC-II 3 median / Autosomal median 1.02  #>  7 SEQC-II 4 median / Autosomal median 1.01  #>  8 SEQC-II 5 median / Autosomal median 1.01  #>  9 SEQC-II 6 median / Autosomal median 0.92  #> 10 SEQC-II 7 median / Autosomal median 1.00  #> # ‚Ä¶ with 18 more rows"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":null,"dir":"Reference","previous_headings":"","what":"ReplayFile R6 Class ‚Äî ReplayFile","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"Contains methods reading contents replay.json file output DRAGEN, contains DRAGEN command line, parameters version specific run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"dracarys::File -> ReplayFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"ReplayFile$read() ReplayFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"Reads replay.json file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"","code":"ReplayFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"list following elements: command_line: character DRAGEN command line used. dragen_config: tibble parameters used DRAGEN run. system: tibble dragen_version, nodename, kernel_release. label: character sample label (inferred file name) hash_table_build: tibble details DRAGEN hash table build.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"","code":"ReplayFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ReplayFile R6 Class ‚Äî ReplayFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II-replay.json.gz\", package = \"dracarys\") r <- ReplayFile$new(x) r$read() # or read(r) #> $command_line #> [1] \"/opt/edico/bin/dragen --enable-variant-caller true --intermediate-results-dir /ephemeral/intermediate-results/ --cnv-use-somatic-vc-baf true --enable-cnv true --enable-duplicate-marking true --enable-map-align-output true --enable-sv true --fastq-list /ZnDLLh/fastq_list.csv --lic-instance-id-location /opt/instance-identity --output-directory SEQC-II_dragen_somatic --output-file-prefix SEQC-II --ref-dir /ephemeral/ref/hg38-v8-altaware-cnv-anchored/ --tumor-fastq-list /ZnDLLh/tumor_fastq_list.csv\" #>  #> $hash_table_build #> # A tibble: 3 √ó 2 #>   name                 value                                                     #>   <chr>                <chr>                                                     #> 1 sw_version           01.003.044.3.5.3-38-gefdaeaff                             #> 2 hash_table_version   8                                                         #> 3 command_line_options /opt/edico/bin/dragen --lic-instance-id-location /root/.‚Ä¶ #>  #> $dragen_config #> # A tibble: 470 √ó 2 #>    name                    value #>    <chr>                   <chr> #>  1 Aligner.align-direction 4     #>  2 Aligner.aln-en-mask     15    #>  3 Aligner.aln-enable      1     #>  4 Aligner.backtrace-delay 8     #>  5 Aligner.bed-score-bonus 0     #>  6 Aligner.chicken         0     #>  7 Aligner.dedup-min-qual  15    #>  8 Aligner.disable-lfsr    0     #>  9 Aligner.en-alt-hap-aln  1     #> 10 Aligner.en-chimeric-aln 1     #> # ‚Ä¶ with 460 more rows #>  #> $system #> # A tibble: 3 √ó 2 #>   name           value                                      #>   <chr>          <chr>                                      #> 1 dragen_version 05.021.609.3.9.3                           #> 2 nodename       trn.6f62637e545a418f8dfe9ce587e571d7-gt4mv #> 3 kernel_release 5.4.141-67.229.amzn2.x86_64                #>  #> $label #> [1] \"SEQC-II\" #>"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"Contains methods reading contents time_metrics.csv file output DRAGEN, contains breakdown run duration DRAGEN process.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"dracarys::File -> TimeMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"TimeMetricsFile$read() TimeMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"Reads time_metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"","code":"TimeMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"tibble following columns: Step: DRAGEN step Time: time HH:MM","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"","code":"TimeMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TimeMetricsFile R6 Class ‚Äî TimeMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.time_metrics.csv.gz\", package = \"dracarys\") tm <- TimeMetricsFile$new(x) tm$read() # or read(tm) #> # A tibble: 19 √ó 3 #>    Label   Step                           Time  #>    <chr>   <chr>                          <chr> #>  1 SEQC-II Loading Reference              00:01 #>  2 SEQC-II Aligning Reads                 00:35 #>  3 SEQC-II Duplicate Marking              00:01 #>  4 SEQC-II Sorting and Marking Duplicates 01:31 #>  5 SEQC-II DRAGStr Calibration            00:00 #>  6 SEQC-II Saving Map/Align Output        01:31 #>  7 SEQC-II Partial Reconfiguration        00:00 #>  8 SEQC-II Variant Calling                01:31 #>  9 SEQC-II Calculating Target Counts      00:36 #> 10 SEQC-II Correcting GC Bias             00:00 #> 11 SEQC-II Normalizing Case Sample        00:00 #> 12 SEQC-II Performing Segmentation        00:00 #> 13 SEQC-II Generating Somatic Model Input 00:17 #> 14 SEQC-II Fitting Somatic Model          00:00 #> 15 SEQC-II Generating CNV Calls           00:00 #> 16 SEQC-II Generating CNV Track Files     00:00 #> 17 SEQC-II Partitioning                   00:35 #> 18 SEQC-II Structural Variant Calling     01:38 #> 19 SEQC-II Total Runtime                  04:10"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"Contains methods reading displaying contents AlignCollapseFusionCaller_metrics.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"dracarys::File -> TsoAlignCollapseFusionCallerMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"TsoAlignCollapseFusionCallerMetricsFile$read() TsoAlignCollapseFusionCallerMetricsFile$write() TsoAlignCollapseFusionCallerMetricsFile$histoprep() TsoAlignCollapseFusionCallerMetricsFile$plot() TsoAlignCollapseFusionCallerMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"Reads AlignCollapseFusionCaller_metrics.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"tibble following columns: section: name original JSON element name: name metric value: value metric percent: percentage","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"Writes tidy version AlignCollapseFusionCaller_metrics.json.gz file output TSO. Histo majority UmiStatistics section, write separately. Histo num supporting fragments: Num families 0/1/2/3... raw reads. Histo unique UMIs per fragment pos: Num pos 0/1/2/3... UMI seqs.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$write(   d,   out_dir,   prefix,   out_format = \"tsv\" )"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-histoprep-","dir":"Reference","previous_headings":"","what":"Method histoprep()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"Prepares UmiStatistics histogram data AlignCollapseFusionCaller_metrics.json.gz file output TSO. Histo majority UmiStatistics section, deal separately. Histo num supporting fragments: Num families 0/1/2/3... raw reads. Histo unique UMIs per fragment pos: Num pos 0/1/2/3... UMI seqs.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$histoprep(d)"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"d Parsed object self$read().","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"Generates UmiStatistics Histogram plots AlignCollapseFusionCaller_metrics.json.gz file output TSO. Histo majority UmiStatistics section, deal separately. Histo num supporting fragments: Num families 0/1/2/3... raw reads. Histo unique UMIs per fragment pos: Num pos 0/1/2/3... UMI seqs.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$plot(d, max_num = 15)"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"d Parsed object self$read(). max_num Maximum number display plots.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"histogram plot objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"TsoAlignCollapseFusionCallerMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoAlignCollapseFusionCallerMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoAlignCollapseFusionCallerMetricsFile R6 Class ‚Äî TsoAlignCollapseFusionCallerMetricsFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.AlignCollapseFusionCaller_metrics.json.gz\",   package = \"dracarys\" ) m <- TsoAlignCollapseFusionCallerMetricsFile$new(x) d_parsed <- m$read() # or read(m) m$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") #> # A tibble: 185 √ó 4 #>    section              name                                       value percent #>    <chr>                <chr>                                      <chr> <chr>   #>  1 MappingAligningPerRg Total reads in RG                          1063‚Ä¶ 100     #>  2 MappingAligningPerRg Number of duplicate marked reads           0     0       #>  3 MappingAligningPerRg Number of duplicate marked and mate reads‚Ä¶ 0     0       #>  4 MappingAligningPerRg Number of unique reads (excl. duplicate m‚Ä¶ 1063‚Ä¶ 100     #>  5 MappingAligningPerRg Reads with mate sequenced                  1063‚Ä¶ 100     #>  6 MappingAligningPerRg Reads without mate sequenced               0     0       #>  7 MappingAligningPerRg QC-failed reads                            0     0       #>  8 MappingAligningPerRg Mapped reads                               1057‚Ä¶ 99.48   #>  9 MappingAligningPerRg Mapped reads R1                            5294‚Ä¶ 99.6    #> 10 MappingAligningPerRg Mapped reads R2                            5281‚Ä¶ 99.35   #> # ‚Ä¶ with 175 more rows"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"Contains methods reading displaying contents fragment_length_hist.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"dracarys::File -> TsoFragmentLengthHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"TsoFragmentLengthHistFile$read() TsoFragmentLengthHistFile$write() TsoFragmentLengthHistFile$plot() TsoFragmentLengthHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"Reads fragment_length_hist.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"tibble following columns: FragmentLength Count","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"Writes tidy version fragment_length_hist.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"Plots fragment length distributions given fragment_length_hist.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$plot(d, min_count = 10)"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"d Parsed object self$read(). min_count Minimum read count plotted (Default: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"ggplot2 plot containing fragment lengths X axis read counts Y axis sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"","code":"TsoFragmentLengthHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFragmentLengthHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoFragmentLengthHistFile R6 Class ‚Äî TsoFragmentLengthHistFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.fragment_length_hist.json.gz\", package = \"dracarys\") fl <- TsoFragmentLengthHistFile$new(x) d_parsed <- fl$read() # or read(fl) fl$plot(d_parsed, 5)  fl$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") #> # A tibble: 38,587 √ó 2 #>    FragmentLength Count #>             <int> <int> #>  1             38     1 #>  2             39     1 #>  3             40     3 #>  4             41     2 #>  5             42     0 #>  6             43     0 #>  7             44     2 #>  8             45     0 #>  9             46     0 #> 10             47     0 #> # ‚Ä¶ with 38,577 more rows"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"Contains methods reading displaying contents Fusions.csv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"dracarys::File -> TsoFusionsCsvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"TsoFusionsCsvFile$read() TsoFusionsCsvFile$write() TsoFusionsCsvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"Reads Fusions.csv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"","code":"TsoFusionsCsvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"tibble several columns.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"Writes tidy version Fusions.csv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"","code":"TsoFusionsCsvFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"","code":"TsoFusionsCsvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoFusionsCsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoFusionsCsvFile R6 Class ‚Äî TsoFusionsCsvFile","text":"","code":"x <- system.file(\"extdata/tso/sample705_Fusions.csv\", package = \"dracarys\") fus <- TsoFusionsCsvFile$new(x) d_parsed <- fus$read() # or read(fus) fus$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") #> # A tibble: 2 √ó 17 #>   Sample Name  Chr1    Pos1 Chr2    Pos2 Direc‚Ä¶¬π Alt_D‚Ä¶¬≤ BP1_D‚Ä¶¬≥ BP2_D‚Ä¶‚Å¥ Total‚Ä¶‚Åµ #>   <chr>  <chr> <chr>  <dbl> <chr>  <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl> #> 1 PTC_c‚Ä¶ Mant‚Ä¶ chr2  2.94e7 chr1  1.86e8 L1R2         25   11760      14   11760 #> 2 PTC_c‚Ä¶ Mant‚Ä¶ chr10 4.36e7 chr10 5.16e7 L2R1         21    8279      15    8279 #> # ‚Ä¶ with 6 more variables: VAF <dbl>, Gene1 <chr>, Gene2 <chr>, Contig <chr>, #> #   Filter <chr>, Is_Cosmic_GenePair <lgl>, and abbreviated variable names #> #   ¬π‚ÄãDirection, ¬≤‚ÄãAlt_Depth, ¬≥‚ÄãBP1_Depth, ‚Å¥‚ÄãBP2_Depth, ‚Åµ‚ÄãTotal_Depth"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"Contains methods reading displaying contents msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"dracarys::File -> TsoMsiFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"TsoMsiFile$read() TsoMsiFile$write() TsoMsiFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"Reads msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"","code":"TsoMsiFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"tibble following columns: label:","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"Writes tidy version msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"","code":"TsoMsiFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"","code":"TsoMsiFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoMsiFile R6 Class ‚Äî TsoMsiFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.msi.json.gz\", package = \"dracarys\") msi <- TsoMsiFile$new(x) d_parsed <- msi$read() # or read(msi) msi$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") #> # A tibble: 1 √ó 6 #>   TotalMicrosatelliteSitesAssessed TotalMicrosa‚Ä¶¬π Perce‚Ä¶¬≤ Resul‚Ä¶¬≥ Resul‚Ä¶‚Å¥ SumJsd #>                              <int>          <int>   <dbl> <chr>   <chr>    <dbl> #> 1                             2140             47     2.2 NA      TRUE      1.40 #> # ‚Ä¶ with abbreviated variable names ¬π‚ÄãTotalMicrosatelliteSitesUnstable, #> #   ¬≤‚ÄãPercentageUnstableSites, ¬≥‚ÄãResultMessage, ‚Å¥‚ÄãResultIsValid"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"Contains methods reading displaying contents SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"dracarys::File -> TsoSampleAnalysisResultsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"TsoSampleAnalysisResultsFile$read() TsoSampleAnalysisResultsFile$write() TsoSampleAnalysisResultsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"Reads SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"list tibbles","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"Writes tidy version SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoSampleAnalysisResultsFile R6 Class ‚Äî TsoSampleAnalysisResultsFile","text":"","code":"x <- system.file(\"extdata/tso/sample705_SampleAnalysisResults.json.gz\", package = \"dracarys\") res <- TsoSampleAnalysisResultsFile$new(x) d_parsed <- res$read() # or read(res) res$write(d_parsed, tempfile(), \"both\") #> $sample_info #> # A tibble: 1 √ó 4 #>   sampleId                 analysisDate analysisTime analysisName               #>   <chr>                    <chr>        <chr>        <chr>                      #> 1 PTC_ctTSO220118_L2200054 2022-02-19   21:49:55     ctTSO220118-220207_18Feb22 #>  #> $qc #> # A tibble: 1 √ó 39 #>   dna_qc_CONTA‚Ä¶¬π dna_q‚Ä¶¬≤ dna_q‚Ä¶¬≥ dna_q‚Ä¶‚Å¥ dna_q‚Ä¶‚Åµ dna_q‚Ä¶‚Å∂ dna_q‚Ä¶‚Å∑ dna_q‚Ä¶‚Å∏ dna_q‚Ä¶‚Åπ #>            <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1            664       0    1672       1       0   0.049    6131    1300      NA #> # ‚Ä¶ with 30 more variables: dna_qc_smallv_tmb_PCT_EXON_1000X_value <dbl>, #> #   dna_qc_smallv_tmb_PCT_EXON_1000X_LSL <dbl>, #> #   dna_qc_smallv_tmb_PCT_EXON_1000X_USL <dbl>, #> #   dna_qc_cnv_GENE_SCALED_MAD_value <dbl>, #> #   dna_qc_cnv_GENE_SCALED_MAD_LSL <dbl>, dna_qc_cnv_GENE_SCALED_MAD_USL <dbl>, #> #   dna_qc_cnv_MEDIAN_BIN_COUNT_CNV_TARGET_value <dbl>, #> #   dna_qc_cnv_MEDIAN_BIN_COUNT_CNV_TARGET_LSL <dbl>, ‚Ä¶ #>  #> $biomarkers #> # A tibble: 1 √ó 5 #>   msi_pct_unstable_sites msi_SumJsd tmb_per_mb tmb_coding_region_sizemb tmb_so‚Ä¶¬π #>                    <dbl>      <dbl>      <dbl>                    <dbl>    <dbl> #> 1                    2.2       1.40       144.                     1.22      176 #> # ‚Ä¶ with abbreviated variable name ¬π‚Äãtmb_somatic_coding_variants_count #>  #> $sw_conf_datasources #> # A tibble: 7 √ó 4 #>   name                 version     description                           relea‚Ä¶¬π #>   <chr>                <chr>       <chr>                                 <chr>   #> 1 VEP                  91          BothRefSeqAndEnsembl                  2018-0‚Ä¶ #> 2 1000 Genomes Project Phase 3 v5a A public catalogue of human variatio‚Ä¶ 2013-0‚Ä¶ #> 3 ClinVar              20190204    A freely accessible, public archive ‚Ä¶ 2019-0‚Ä¶ #> 4 COSMIC               84          somatic mutation and related details‚Ä¶ 2018-0‚Ä¶ #> 5 dbSNP                151         Identifiers for observed variants     2018-0‚Ä¶ #> 6 gnomAD               2.1         Whole genome allele frequencies from‚Ä¶ 2018-1‚Ä¶ #> 7 gnomAD_exome         2.1         Exome allele frequencies from Genome‚Ä¶ 2018-1‚Ä¶ #> # ‚Ä¶ with abbreviated variable name ¬π‚ÄãreleaseDate #>  #> $sw_conf_other #> # A tibble: 1 √ó 7 #>   analysisSoftwareName analysisSoftwar‚Ä¶¬π genom‚Ä¶¬≤ insta‚Ä¶¬≥ nirva‚Ä¶‚Å¥ genom‚Ä¶‚Åµ refse‚Ä¶‚Å∂ #>   <chr>                <chr>             <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 TSO500_ctDNA_RnD     0.0.0.1           hg19_d‚Ä¶ CDxNir‚Ä¶ 3.2.3   GRCh37  2015-01 #> # ‚Ä¶ with abbreviated variable names ¬π‚ÄãanalysisSoftwareVersion, ¬≤‚ÄãgenomeBuild, #> #   ¬≥‚ÄãinstanceName, ‚Å¥‚ÄãnirvanaSoftwareVersion, ‚Åµ‚ÄãgenomeAssembly, ‚Å∂‚ÄãrefseqVersion #>  #> $snv #> # A tibble: 1,980 √ó 29 #>    chrom      pos ref   alt       af  qual dp_tot dp_alt transc‚Ä¶¬π source bioType #>    <chr>    <int> <chr> <chr>  <dbl> <dbl>  <int>  <int> <chr>    <chr>  <chr>   #>  1 chr1   2488153 A     G     0.488    100   4917   2402 NM_0038‚Ä¶ RefSeq protei‚Ä¶ #>  2 chr1   4367323 G     A     1.00     100   5272   5271 NA       NA     NA      #>  3 chr1   9778888 G     A     0.0016   100   7923     13 NM_0050‚Ä¶ RefSeq protei‚Ä¶ #>  4 chr1   9781605 G     A     0.0017   100   7471     13 NM_0050‚Ä¶ RefSeq protei‚Ä¶ #>  5 chr1   9781637 G     A     0.0013   100   6136      8 NM_0050‚Ä¶ RefSeq protei‚Ä¶ #>  6 chr1   9784354 C     T     0.0019   100   4699      9 NM_0050‚Ä¶ RefSeq protei‚Ä¶ #>  7 chr1  11205058 C     T     1.00     100   5856   5854 NM_0049‚Ä¶ RefSeq protei‚Ä¶ #>  8 chr1  11276255 C     G     0.0032   100    950      3 NM_0049‚Ä¶ RefSeq protei‚Ä¶ #>  9 chr1  11288758 G     A     1.00     100   8997   8995 NM_0049‚Ä¶ RefSeq protei‚Ä¶ #> 10 chr1  11292504 C     T     0.0021   100   3809      8 NM_0049‚Ä¶ RefSeq protei‚Ä¶ #> # ‚Ä¶ with 1,970 more rows, 18 more variables: aminoAcids <chr>, cdnaPos <chr>, #> #   codons <chr>, cdsPos <chr>, exons <chr>, geneId <chr>, hgnc <chr>, #> #   hgvsc <chr>, hgvsp <chr>, isCanonical <lgl>, polyPhenScore <dbl>, #> #   polyPhenPrediction <chr>, proteinId <chr>, proteinPos <chr>, #> #   siftScore <dbl>, siftPrediction <chr>, consequence <chr>, introns <chr>, #> #   and abbreviated variable name ¬π‚Äãtranscript #>  #> $cnv #> # A tibble: 1 √ó 7 #>   foldChange  qual copyNumberType gene  chromosome startPosition endPosition #>        <dbl> <dbl> <chr>          <chr> <chr>              <int>       <int> #> 1       0.86    57 <DEL>          ATM   chr11          108098348   108236237 #>"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"Contains methods reading displaying contents TargetRegionCoverage.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"dracarys::File -> TsoTargetRegionCoverageFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"TsoTargetRegionCoverageFile$read() TsoTargetRegionCoverageFile$write() TsoTargetRegionCoverageFile$plot() TsoTargetRegionCoverageFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"Reads TargetRegionCoverage.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"tibble following columns: ConsensusReadDepth BasePair Percentage","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"Writes tidy version TargetRegionCoverage.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"Plots TargetRegionCoverage.json.gz file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$plot(d, min_pct = 2)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"d Parsed object self$read(). min_pct Minimum percentage plotted (Default: 2).","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"ggplot2 plot containing read depth X axis percentage covered Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"","code":"TsoTargetRegionCoverageFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTargetRegionCoverageFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoTargetRegionCoverageFile R6 Class ‚Äî TsoTargetRegionCoverageFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.TargetRegionCoverage.json.gz\", package = \"dracarys\") trc <- TsoTargetRegionCoverageFile$new(x) d_parsed <- trc$read() # or read(trc) trc$plot(d_parsed, 90) # or plot(trc, d_parsed, 90) #> Error in loadNamespace(x): there is no package called ‚Äòggrepel‚Äô trc$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") #> # A tibble: 14 √ó 3 #>    ConsensusReadDepth BasePair Percentage #>    <chr>              <chr>         <dbl> #>  1 TargetRegion       1970825      100    #>  2 100X               1953719       99.1  #>  3 250X               1940233       98.4  #>  4 500X               1922662       97.6  #>  5 750X               1907303       96.8  #>  6 1000X              1891110       96.0  #>  7 1500X              1848614       93.8  #>  8 2000X              1795480       91.1  #>  9 2500X              1729811       87.8  #> 10 3000X              1651245       83.8  #> 11 4000X              1445949       73.4  #> 12 5000X              1209504       61.4  #> 13 8000X              522143        26.5  #> 14 10000X             192278         9.76"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"Contains methods reading displaying contents tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"dracarys::File -> TsoTmbFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"TsoTmbFile$read() TsoTmbFile$write() TsoTmbFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"Reads tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"","code":"TsoTmbFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"tibble following columns: TmbPerMb AdjustedTmbPerMb NonsynonymousTmbPerMb AdjustedNonsynonymousTmbPerMb SomaticCodingVariantsCount NonsynonymousSomaticCodingVariantsCount TotalRegionSizeMb CodingRegionSizeMb","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"Writes tidy version tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"","code":"TsoTmbFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"","code":"TsoTmbFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoTmbFile R6 Class ‚Äî TsoTmbFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.tmb.json.gz\", package = \"dracarys\") tmb <- TsoTmbFile$new(x) d_parsed <- tmb$read() # or read(tmb) tmb$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") #> # A tibble: 1 √ó 8 #>   TmbPerMb AdjustedTmbPerMb Nonsynonym‚Ä¶¬π Adjus‚Ä¶¬≤ Somat‚Ä¶¬≥ Nonsy‚Ä¶‚Å¥ Total‚Ä¶‚Åµ Codin‚Ä¶‚Å∂ #>      <dbl>            <dbl>        <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1     144.             144.         114.    114.     176     140    1.98    1.22 #> # ‚Ä¶ with abbreviated variable names ¬π‚ÄãNonsynonymousTmbPerMb, #> #   ¬≤‚ÄãAdjustedNonsynonymousTmbPerMb, ¬≥‚ÄãSomaticCodingVariantsCount, #> #   ‚Å¥‚ÄãNonsynonymousSomaticCodingVariantsCount, ‚Åµ‚ÄãTotalRegionSizeMb, #> #   ‚Å∂‚ÄãCodingRegionSizeMb"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"Contains methods reading displaying contents TMB_Trace.tsv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"dracarys::File -> TsoTmbTraceTsvFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"TsoTmbTraceTsvFile$read() TsoTmbTraceTsvFile$write() TsoTmbTraceTsvFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"Reads TMB_Trace.tsv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"","code":"TsoTmbTraceTsvFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"tibble following columns: FragmentLength Count","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"Writes tidy version TMB_Trace.tsv file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"","code":"TsoTmbTraceTsvFile$write(d, out_dir, prefix, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"d Parsed object self$read(). out_dir Output directory. prefix Prefix output file(s). out_format Format output file(s) (one 'tsv' (def.), 'parquet', '').","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"","code":"TsoTmbTraceTsvFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbTraceTsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoTmbTraceTsvFile R6 Class ‚Äî TsoTmbTraceTsvFile","text":"","code":"x <- system.file(\"extdata/tso/sample705_TMB_Trace.tsv\", package = \"dracarys\") d <- TsoTmbTraceTsvFile$new(x) d_parsed <- d$read() # or read(d) d$write(d_parsed, out_dir = tempdir(), prefix = \"sample705\", out_format = \"both\") #> # A tibble: 2,186 √ó 20 #>    Chromo‚Ä¶¬π Posit‚Ä¶¬≤ RefCall AltCall    VAF Depth CytoB‚Ä¶¬≥ GeneN‚Ä¶‚Å¥ Varia‚Ä¶‚Åµ Cosmi‚Ä¶‚Å∂ #>    <chr>      <int> <chr>   <chr>    <dbl> <dbl> <chr>   <chr>   <chr>   <chr>   #>  1 chr1      2.49e6 A       G       0.488   4917 1p36.32 LOC100‚Ä¶ SNV     COSM41‚Ä¶ #>  2 chr1      4.37e6 G       A       1.00    5272 1p36.32 NA      SNV     NA      #>  3 chr1      9.78e6 G       A       0.0016  7923 1p36.22 PIK3CD  SNV     NA      #>  4 chr1      9.78e6 G       A       0.0017  7471 1p36.22 PIK3CD  SNV     NA      #>  5 chr1      9.78e6 G       A       0.0013  6136 1p36.22 PIK3CD  SNV     NA      #>  6 chr1      9.78e6 C       T       0.0019  4699 1p36.22 CLSTN1‚Ä¶ SNV     NA      #>  7 chr1      1.12e7 C       T       1.00    5856 1p36.22 MTOR:M‚Ä¶ SNV     COSM41‚Ä¶ #>  8 chr1      1.13e7 C       G       0.0032   950 1p36.22 MTOR    SNV     NA      #>  9 chr1      1.13e7 G       A       1.00    8997 1p36.22 MTOR    SNV     COSM41‚Ä¶ #> 10 chr1      1.13e7 C       T       0.0021  3809 1p36.22 MTOR    SNV     COSM15‚Ä¶ #> # ‚Ä¶ with 2,176 more rows, 10 more variables: MaxCosmicCount <dbl>, #> #   AlleleCountsGnomadExome <dbl>, AlleleCountsGnomadGenome <dbl>, #> #   AlleleCounts1000Genomes <dbl>, MaxDatabaseAlleleCounts <dbl>, #> #   GermlineFilterDatabase <lgl>, GermlineFilterProxi <lgl>, #> #   CodingVariant <lgl>, Nonsynonymous <lgl>, IncludedInTMBNumerator <lgl>, and #> #   abbreviated variable names ¬π‚ÄãChromosome, ¬≤‚ÄãPosition, ¬≥‚ÄãCytoBand, ‚Å¥‚ÄãGeneName, #> #   ‚Åµ‚ÄãVariantType, ‚Å∂‚ÄãCosmicIDs"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"Contains methods reading displaying contents vc_metrics.csv file output DRAGEN, contains variant calling metrics. reported sample multi sample VCF gVCF files. Based run case, metrics reported either standard VARIANT CALLER JOINT CALLER. Metrics reported raw (PREFILTER) hard filtered (POSTFILTER) VCFs. PON (Panel Normals) COSMIC filtered variants counted though PASS variants POSTFILTER VCFs metrics, may result higher expected variant counts POSTFILTER VCF metrics.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"dracarys::File -> VCMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"VCMetricsFile$read() VCMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"Reads vc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"","code":"VCMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"tibble following columns: category sample var: variable name count: count value pct: percent value","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"","code":"VCMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VCMetricsFile R6 Class ‚Äî VCMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.vc_metrics.csv.gz\", package = \"dracarys\") vm <- VCMetricsFile$new(x) vm$read() # or read(vm) #> # A tibble: 45 √ó 5 #>    category  sample           var                    count    pct #>    <chr>     <chr>            <chr>                  <dbl>  <dbl> #>  1 summary   \"\"               Number of samples          1  NA    #>  2 summary   \"\"               Reads Processed   2617162106  NA    #>  3 summary   \"\"               Child Sample              NA  NA    #>  4 prefilter \"SEQC-II_tumour\" Total                 177975 100    #>  5 prefilter \"SEQC-II_tumour\" Biallelic             177975 100    #>  6 prefilter \"SEQC-II_tumour\" Multiallelic               0   0    #>  7 prefilter \"SEQC-II_tumour\" SNPs                  143829  80.8  #>  8 prefilter \"SEQC-II_tumour\" Insertions (Hom)           0   0    #>  9 prefilter \"SEQC-II_tumour\" Insertions (Het)       16354   9.19 #> 10 prefilter \"SEQC-II_tumour\" Deletions (Hom)            0   0    #> # ‚Ä¶ with 35 more rows"},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Print current timestamp for logging ‚Äî date_log","title":"Print current timestamp for logging ‚Äî date_log","text":"Print current timestamp logging","code":""},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print current timestamp for logging ‚Äî date_log","text":"","code":"date_log()"},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print current timestamp for logging ‚Äî date_log","text":"Current timestamp character.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys GDS Download ‚Äî dr_gds_download","title":"dracarys GDS Download ‚Äî dr_gds_download","text":"Download GDS files can processed dracarys.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dracarys GDS Download ‚Äî dr_gds_download","text":"","code":"dr_gds_download(gdsdir, outdir, token, pattern = NULL, dryrun = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/dr_gds_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dracarys GDS Download ‚Äî dr_gds_download","text":"gdsdir Full path GDS directory. outdir Path output directory. token ICA access token (default uses $ICA_ACCESS_TOKEN env var). pattern Pattern filter returned file type tibble. dryrun TRUE, just list files downloaded (download ).","code":""},{"path":"https://umccr.github.io/dracarys/reference/dracarys-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys: Post-processing DRAGEN workflows ‚Äî dracarys-package","title":"dracarys: Post-processing DRAGEN workflows ‚Äî dracarys-package","text":"Post-processing DRAGEN workflows.","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/dracarys-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dracarys: Post-processing DRAGEN workflows ‚Äî dracarys-package","text":"Maintainer: Peter Diakumis peterdiakumis@gmail.com (ORCID) Authors: Victor San Kho Lin (ORCID) [contributor]","code":""},{"path":"https://umccr.github.io/dracarys/reference/dracarys_multiqc.html","id":null,"dir":"Reference","previous_headings":"","what":"Dracarys MultiQC Tidy ‚Äî dracarys_multiqc","title":"Dracarys MultiQC Tidy ‚Äî dracarys_multiqc","text":"Generate tidier representations MultiQC JSON output","code":""},{"path":"https://umccr.github.io/dracarys/reference/dracarys_multiqc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dracarys MultiQC Tidy ‚Äî dracarys_multiqc","text":"","code":"dracarys_multiqc(json, prefix, outdir, out_format = \"tsv\")"},{"path":"https://umccr.github.io/dracarys/reference/dracarys_multiqc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dracarys MultiQC Tidy ‚Äî dracarys_multiqc","text":"json Path multiqc_data.json. prefix Prefix output files. outdir Path output results. out_format Format output (tsv, parquet, ) (def: tsv).","code":""},{"path":"https://umccr.github.io/dracarys/reference/dracarys_multiqc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dracarys MultiQC Tidy ‚Äî dracarys_multiqc","text":"Generates TSV /Parquet representations input MultiQC JSON file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Download via CLI ‚Äî gds_file_download","title":"GDS File Download via CLI ‚Äî gds_file_download","text":"GDS File Download via CLI","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Download via CLI ‚Äî gds_file_download","text":"","code":"gds_file_download(gds, out, token = Sys.getenv(\"ICA_ACCESS_TOKEN\"))"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Download via CLI ‚Äî gds_file_download","text":"gds Full path GDS file. Path output file. token ICA access token (default uses $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS File Download via API ‚Äî gds_file_download_api","title":"GDS File Download via API ‚Äî gds_file_download_api","text":"GDS File Download via API","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS File Download via API ‚Äî gds_file_download_api","text":"","code":"gds_file_download_api(gds_fileid, out_file, token)"},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS File Download via API ‚Äî gds_file_download_api","text":"gds_fileid GDS file ID. out_file Path output file. token ICA access token (default uses $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_file_download_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GDS File Download via API ‚Äî gds_file_download_api","text":"","code":"if (FALSE) { gds_fileid <- \"fil.f9aa2ba7af0c4330095d08dadd2e16b0\" out <- tempfile() token <- Sys.getenv(\"ICA_ACCESS_TOKEN\") }"},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":null,"dir":"Reference","previous_headings":"","what":"GDS Files List ‚Äî gds_files_list","title":"GDS Files List ‚Äî gds_files_list","text":"List files ICA GDS filesystem.","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDS Files List ‚Äî gds_files_list","text":"","code":"gds_files_list(gdsdir, token)"},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDS Files List ‚Äî gds_files_list","text":"gdsdir Full path GDS directory. token ICA access token (default uses $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/gds_files_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GDS Files List ‚Äî gds_files_list","text":"Tibble file basename, file size, file full data path, file dir name.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate ICA access token ‚Äî ica_token_validate","title":"Validate ICA access token ‚Äî ica_token_validate","text":"Validates ICA access token parsing checking expiration date.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate ICA access token ‚Äî ica_token_validate","text":"","code":"ica_token_validate(token = Sys.getenv(\"ICA_ACCESS_TOKEN\"))"},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate ICA access token ‚Äî ica_token_validate","text":"token ICA access token (def: $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/ica_token_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate ICA access token ‚Äî ica_token_validate","text":"Returns token valid, else errors .","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Match File to Regex ‚Äî match_regex","title":"Match File to Regex ‚Äî match_regex","text":"Matches given file regexes found FILE_REGEX match, returns 'name' match.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match File to Regex ‚Äî match_regex","text":"","code":"match_regex(x)"},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match File to Regex ‚Äî match_regex","text":"x File match.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match File to Regex ‚Äî match_regex","text":"'name' matching regex FILE_REGEX, NA match made.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match File to Regex ‚Äî match_regex","text":"","code":"match_regex(\"foo.msi.json.gz\") #> [1] \"tso__msi\" match_regex(\"foo.fake.tsv\") #> [1] NA"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MultiQC 'report_general_stats_data' JSON Element ‚Äî multiqc_parse_gen","title":"Parse MultiQC 'report_general_stats_data' JSON Element ‚Äî multiqc_parse_gen","text":"Parses MultiQC 'report_general_stats_data' JSON Element. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MultiQC 'report_general_stats_data' JSON Element ‚Äî multiqc_parse_gen","text":"","code":"multiqc_parse_gen(p)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MultiQC 'report_general_stats_data' JSON Element ‚Äî multiqc_parse_gen","text":"p Parsed MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MultiQC 'report_general_stats_data' JSON Element ‚Äî multiqc_parse_gen","text":"list.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MultiQC 'report_saved_raw_data' JSON Element ‚Äî multiqc_parse_raw","title":"Parse MultiQC 'report_saved_raw_data' JSON Element ‚Äî multiqc_parse_raw","text":"Parses MultiQC 'report_saved_raw_data' JSON Element. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MultiQC 'report_saved_raw_data' JSON Element ‚Äî multiqc_parse_raw","text":"","code":"multiqc_parse_raw(p, tools2delete = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MultiQC 'report_saved_raw_data' JSON Element ‚Äî multiqc_parse_raw","text":"p Parsed MultiQC JSON. tools2delete Character vector tools delete parsed JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MultiQC 'report_saved_raw_data' JSON Element ‚Äî multiqc_parse_raw","text":"list.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy MultiQC JSON ‚Äî multiqc_tidy_json","title":"Tidy MultiQC JSON ‚Äî multiqc_tidy_json","text":"Tidies 'multiqc_data.json' output MultiQC. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy MultiQC JSON ‚Äî multiqc_tidy_json","text":"","code":"multiqc_tidy_json(j)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy MultiQC JSON ‚Äî multiqc_tidy_json","text":"j Path multiqc_data.json.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy MultiQC JSON ‚Äî multiqc_tidy_json","text":"tidy tibble column corresponds single metric, row corresponds single sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":null,"dir":"Reference","previous_headings":"","what":"Read File object ‚Äî read.File","title":"Read File object ‚Äî read.File","text":"Read file based type.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read File object ‚Äî read.File","text":"","code":"# S3 method for File read(x, ...)"},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read File object ‚Äî read.File","text":"x Object class File. ... Arguments passed appropriate read_* function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Reading ‚Äî read","title":"Generic Reading ‚Äî read","text":"Generic function reading dracarys objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Reading ‚Äî read","text":"","code":"read(x, ...)"},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Reading ‚Äî read","text":"x Object respective class. ... Additional arguments.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Reading ‚Äî read","text":"Possibly tibble list, depending object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":null,"dir":"Reference","previous_headings":"","what":"Session Information Kable ‚Äî session_info_kable","title":"Session Information Kable ‚Äî session_info_kable","text":"Session information kables vignettes.","code":""},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Session Information Kable ‚Äî session_info_kable","text":"","code":"session_info_kable(pkgs)"},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session Information Kable ‚Äî session_info_kable","text":"pkgs Vector R packages display vignette.","code":""},{"path":"https://umccr.github.io/dracarys/reference/session_info_kable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Session Information Kable ‚Äî session_info_kable","text":"list two kables containing information platform specified packages (pkgs).","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","title":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","text":"Processes multiple TimeMetricsFile objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","text":"","code":"time_metrics_process(x, id = seq_len(length(x)))"},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","text":"x Atomic vector one TimeMetricsFile objects. id ID input, used disambiguate files generated samples. Default: index 1 length x.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","text":"tibble following columns: Step: DRAGEN step Time: time HH:MM","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Multiple TimeMetricsFile Objects ‚Äî time_metrics_process","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.time_metrics.csv.gz\", package = \"dracarys\") x <- TimeMetricsFile$new(x) (tm <- time_metrics_process(c(x, x), id = c(\"run1\", \"run2\"))) #> # A tibble: 2 √ó 21 #>   ID    Label   Total ‚Ä¶¬π Loadi‚Ä¶¬≤ Align‚Ä¶¬≥ Dupli‚Ä¶‚Å¥ Sorti‚Ä¶‚Åµ DRAGS‚Ä¶‚Å∂ Savin‚Ä¶‚Å∑ Parti‚Ä¶‚Å∏ #>   <chr> <chr>   <chr>    <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 run1  SEQC-II 04:10    00:01   00:35   00:01   01:31   00:00   01:31   00:00   #> 2 run2  SEQC-II 04:10    00:01   00:35   00:01   01:31   00:00   01:31   00:00   #> # ‚Ä¶ with 11 more variables: `Variant Calling` <chr>, #> #   `Calculating Target Counts` <chr>, `Correcting GC Bias` <chr>, #> #   `Normalizing Case Sample` <chr>, `Performing Segmentation` <chr>, #> #   `Generating Somatic Model Input` <chr>, `Fitting Somatic Model` <chr>, #> #   `Generating CNV Calls` <chr>, `Generating CNV Track Files` <chr>, #> #   Partitioning <chr>, `Structural Variant Calling` <chr>, and abbreviated #> #   variable names ¬π‚Äã`Total Runtime`, ¬≤‚Äã`Loading Reference`, ¬≥‚Äã`Aligning Reads`, ‚Ä¶"},{"path":"https://umccr.github.io/dracarys/reference/tso_rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate TSO Report ‚Äî tso_rmd","title":"Generate TSO Report ‚Äî tso_rmd","text":"Generates HTML report results UMCCR TSO500 ctDNA workflow.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate TSO Report ‚Äî tso_rmd","text":"","code":"tso_rmd(tidy_rds, out_dir, prefix, quiet = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/tso_rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate TSO Report ‚Äî tso_rmd","text":"tidy_rds Path RDS object output tso_tidy. out_dir Output directory. prefix Prefix output file(s). quiet Suppress warning messages.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_rmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate TSO Report ‚Äî tso_rmd","text":"Path rendered HTML report.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_rmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate TSO Report ‚Äî tso_rmd","text":"","code":"if (FALSE) { tidy_rds <- \"~/tmp/tso/SBJ02858.rds\" tso_tidy(...) |> saveRDS(tidy_rds) quiet <- TRUE out_dir <- file.path(\"~/tmp/tso/out2\") prefix <- \"SBJ02858\" tso_rmd(tidy_rds = tidy_rds, out_dir = out_dir, prefix = prefix, quiet = quiet) }"},{"path":"https://umccr.github.io/dracarys/reference/tso_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy TSO ctDNA Results ‚Äî tso_tidy","title":"Tidy TSO ctDNA Results ‚Äî tso_tidy","text":"Tidies TSO500 ctDNA results list tibbles writes individual tibbles TSV /Parquet format.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy TSO ctDNA Results ‚Äî tso_tidy","text":"","code":"tso_tidy(   in_dir,   out_dir,   prefix,   gds_local_dir = NULL,   out_format = \"tsv\",   dryrun = FALSE,   token = Sys.getenv(\"ICA_ACCESS_TOKEN\") )"},{"path":"https://umccr.github.io/dracarys/reference/tso_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy TSO ctDNA Results ‚Äî tso_tidy","text":"in_dir Directory path TSO500 ctDNA workflow results (can GDS local). out_dir Output directory. prefix Prefix output file(s). gds_local_dir indir GDS directory, 'recognisable' files first downloaded directory. out_format Format output (tsv, parquet, ) (def: tsv). dryrun Just list files downloaded (def: FALSE). token ICA access token (default uses $ICA_ACCESS_TOKEN env var).","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy TSO ctDNA Results ‚Äî tso_tidy","text":"Tibble path input file resultant tidy object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/tso_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy TSO ctDNA Results ‚Äî tso_tidy","text":"","code":"if (FALSE) { in_dir <- paste0(   \"gds://production/analysis_data/SBJ02858/tso_ctdna_tumor_only/\",   \"20221104b7ad0b38/L2201560/Results/PRJ222206_L2201560/\" ) in_dir <- here::here(glue(\"nogit/tso/2022-12-13/SBJ02858/dracarys_gds_sync\")) out_dir <- file.path(in_dir, \"../out\") gds_local_dir <- NULL prefix <- \"SBJ02858\" dryrun <- F tso_tidy(in_dir = in_dir, out_dir = out_dir, prefix = prefix) }"},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-060-2023-01-09","dir":"Changelog","previous_headings":"","what":"dracarys 0.6.0 (2023-01-09)","title":"dracarys 0.6.0 (2023-01-09)","text":"replace ::set-output. add linux/arm64 support. replace select .data quotes. bump Roxygen 7.2.1 -> 7.2.2 add {fs}, {httr}, {jose}, {sessioninfo} dependencies. import %||% {rlang} specify fallback values NULL cases. ‚ú® pkgdown: change theme simplex. bump mambaforge: 4.12.0-2 -> 22.9.0-2 bump conda-lock: 1.0.5 -> 1.3.0 add support tidying outputs UMCCR TSO500 ctDNA workflow, generating HTML file tidy results workflow. tso_tidy tidying outputs UMCCR TSO500 ctDNA workflow. tso_rmd generating HTML file tidy results workflow. dr_gds_download downloading dracarys-related files GDS. gds_files_list listing files GDS via API. gds_file_download gds_file_download_api downloading files GDS via ica binary API (via presigned URLs), respectively. ica_token_validate validating ICA access token valid expired. TsoCombinedVariantOutputFile: files deemed less info compared output files. dracarys_tidy_multiqc: renamed dracarys_multiqc. mkdir: use fs::create_dir instead. Remove {tibble}, {readr} {ggplot} multi-imports R6, since can get away just importing single function one R6 classes.","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-050-2022-09-28","dir":"Changelog","previous_headings":"","what":"dracarys 0.5.0 (2022-09-28)","title":"dracarys 0.5.0 (2022-09-28)","text":"move map separate TSV CLI: add option output format (tsv, parquet, ) (pr18). contributors: @victorskl","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-040-2022-09-12","dir":"Changelog","previous_headings":"","what":"dracarys 0.4.0 (2022-09-12)","title":"dracarys 0.4.0 (2022-09-12)","text":"also add Quarto HTML report template","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-030-2022-08-28","dir":"Changelog","previous_headings":"","what":"dracarys 0.3.0 (2022-08-28)","title":"dracarys 0.3.0 (2022-08-28)","text":"‚≠ê MultiQC: support DRAGEN ctdna output (pr13).","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-020-2022-07-23","dir":"Changelog","previous_headings":"","what":"dracarys 0.2.0 (2022-07-23)","title":"dracarys 0.2.0 (2022-07-23)","text":"Add MULTIQC_COLUMNS tibble maps raw metric name cleaner name (pr12). Support MultiQC JSONs (bcbio-wts bcbio-wgs).","code":""},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-010-2022-07-11","dir":"Changelog","previous_headings":"","what":"dracarys 0.1.0 (2022-07-11)","title":"dracarys 0.1.0 (2022-07-11)","text":"Initial release dracarys. Support MultiQC JSON tidying. Add conda, conda-lock, Docker support (pr11). Initially supporting just MultiQC json input (dragen-alignment, dragen-transcriptome, dragen-tumor-normal, dragen-umccrise, bcbio-umccrise).","code":""}]
