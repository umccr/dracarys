[{"path":"https://umccr.github.io/dracarys/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Diakumis. Author, maintainer.","code":""},{"path":"https://umccr.github.io/dracarys/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Diakumis P (2022). dracarys: Post-processing DRAGEN workflows. https://github.com/umccr/dracarys, https://umccr.github.io/dracarys/.","code":"@Manual{,   title = {dracarys: Post-processing DRAGEN workflows},   author = {Peter Diakumis},   year = {2022},   note = {https://github.com/umccr/dracarys, https://umccr.github.io/dracarys/}, }"},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-dracarys---dragen-workflow-post-processing-","dir":"","previous_headings":"","what":"Post-processing DRAGEN workflows","title":"Post-processing DRAGEN workflows","text":"Docs: https://umccr.github.io/dracarys/","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Post-processing DRAGEN workflows","text":"used inside conda environment:","code":"remotes::install_github(\"umccr/dracarys\") conda install r-dracarys -c umccr -c conda-forge -c bioconda"},{"path":[]},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-tidy","dir":"","previous_headings":"Main modules","what":"âœ¨ Tidy","title":"Post-processing DRAGEN workflows","text":"Generate â€˜tidierâ€™ form multiqc_data.json MultiQC summary file. TSV Parquet outputs generated. TSV file, row corresponds single sample, column corresponds single quality metric/variable. See CLI section options.","code":""},{"path":"https://umccr.github.io/dracarys/index.html","id":"id_-cli","dir":"","previous_headings":"","what":"ðŸ’» CLI","title":"Post-processing DRAGEN workflows","text":"dracarys command line interface available convenience. â€™re using conda package, dracarys.R command already set inside activated conda environment. â€™re using conda package, need export dracarys/inst/cli/ directory PATH order use dracarys.R.","code":"dracarys_cli=$(Rscript -e 'x = system.file(\"cli\", package = \"dracarys\"); cat(x, \"\\n\")' | xargs) export PATH=\"${dracarys_cli}:${PATH}\" $ dracarys.R --version dracarys.R 0.1.0  #------- Tidy -------#   $ dracarys.R tidy --help usage: dracarys.R tidy [-h] -j JSON -o OUTDIR -p PREFIX [-q]  optional arguments:   -h, --help            show this help message and exit   -j JSON, --json JSON  Path to 'multiqc_data.json'.   -o OUTDIR, --outdir OUTDIR                         Output directory for results.   -p PREFIX, --prefix PREFIX                         Prefix name for output files.   -q, --quiet           Suppress log printing during rendering."},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":null,"dir":"Reference","previous_headings":"","what":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"Contains methods reading displaying contents wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN. file contains estimated coverage contigs, autosomal estimated coverage.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"dracarys::File -> ContigMeanCovFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"ContigMeanCovFile$read() ContigMeanCovFile$plot() ContigMeanCovFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"Reads wgs_contig_mean_cov_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"","code":"ContigMeanCovFile$read(keep_alt = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"keep_alt Keep ALT + Mito chromosomes?","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"tibble following columns: label: file label. chrom: contig name. n_bases: number bases aligned contig (excludes bases duplicate marked reads, reads MAPQ=0, clipped bases). coverage: col2 / contig length","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"Plots wgs_contig_mean_cov_<phenotype>.csv files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"","code":"ContigMeanCovFile$plot(top_alt_n = 15)"},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"top_alt_n Number top covered alt contigs plot per phenotype.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"ggplot2 object chromosomes X axis, coverage Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"","code":"ContigMeanCovFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ContigMeanCovFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ContigMeanCovFile R6 Class â€” ContigMeanCovFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_contig_mean_cov_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_contig_mean_cov_tumor.csv.gz\", package = \"dracarys\") cc1 <- ContigMeanCovFile$new(x1) cc2 <- ContigMeanCovFile$new(x2) read(cc1) #> # A tibble: 25 Ã— 4 #>    label     chrom     n_bases coverage #>    <chr>     <chr>       <dbl>    <dbl> #>  1 SEQC-II_N chr1  11391872260     49.4 #>  2 SEQC-II_N chr2  11910292998     49.5 #>  3 SEQC-II_N chr3   9864967562     49.8 #>  4 SEQC-II_N chr4   9380962565     49.4 #>  5 SEQC-II_N chr5   8851326991     49.5 #>  6 SEQC-II_N chr6   7013593668     41.2 #>  7 SEQC-II_N chr7   7641057161     48.1 #>  8 SEQC-II_N chr8   7051795336     48.7 #>  9 SEQC-II_N chr9   5706387709     46.9 #> 10 SEQC-II_N chr10  6468177560     48.5 #> # â€¦ with 15 more rows read(cc2, keep_alt = TRUE) #> # A tibble: 3,367 Ã— 4 #>    label     chrom     n_bases coverage #>    <chr>     <chr>       <dbl>    <dbl> #>  1 SEQC-II_T chr1  19825282617     86.0 #>  2 SEQC-II_T chr2  20173660434     83.9 #>  3 SEQC-II_T chr3  17397714315     87.8 #>  4 SEQC-II_T chr4  15471335389     81.5 #>  5 SEQC-II_T chr5  15376687254     85.9 #>  6 SEQC-II_T chr6  13348447303     78.5 #>  7 SEQC-II_T chr7  16991597908    107.  #>  8 SEQC-II_T chr8  13202798183     91.2 #>  9 SEQC-II_T chr9  10085223132     82.8 #> 10 SEQC-II_T chr10 10799872299     81.0 #> # â€¦ with 3,357 more rows plot(cc1)"},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"Contains methods reading displaying contents wgs_coverage_metrics_<phenotype>.csv file output DRAGEN. file contains read depth coverage metrics.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"dracarys::File -> CoverageMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"CoverageMetricsFile$read() CoverageMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"Reads wgs_coverage_metrics_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"","code":"CoverageMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"tibble following columns: label: file label. var: variable name. var_abbrev: variable abbreviation. pct: percentage value. count: count value.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"","code":"CoverageMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/CoverageMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CoverageMetricsFile R6 Class â€” CoverageMetricsFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_coverage_metrics_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_coverage_metrics_tumor.csv.gz\", package = \"dracarys\") cm1 <- CoverageMetricsFile$new(x1) cm2 <- CoverageMetricsFile$new(x2) read(cm1) #> # A tibble: 27 Ã— 5 #>    label     var                                         var_abbrev    pct count #>    <chr>     <chr>                                       <chr>       <dbl> <dbl> #>  1 SEQC-II_N Uniformity of coverage (PCT > 0.2*mean) ovâ€¦ uniformitâ€¦  95.8     NA #>  2 SEQC-II_N PCT of genome with coverage [100x: inf)     %genome [â€¦   0.25    NA #>  3 SEQC-II_N PCT of genome with coverage [ 50x: inf)     %genome [â€¦  43.8     NA #>  4 SEQC-II_N PCT of genome with coverage [ 20x: inf)     %genome [â€¦  93.2     NA #>  5 SEQC-II_N PCT of genome with coverage [ 15x: inf)     %genome [â€¦  95.0     NA #>  6 SEQC-II_N PCT of genome with coverage [ 10x: inf)     %genome [â€¦  95.8     NA #>  7 SEQC-II_N PCT of genome with coverage [  3x: inf)     %genome [â€¦  96.7     NA #>  8 SEQC-II_N PCT of genome with coverage [  1x: inf)     %genome [â€¦  97.2     NA #>  9 SEQC-II_N PCT of genome with coverage [  0x: inf)     %genome [â€¦ 100       NA #> 10 SEQC-II_N PCT of genome with coverage [ 50x:100x)     %genome [â€¦  43.6     NA #> # â€¦ with 17 more rows read(cm2) #> # A tibble: 27 Ã— 5 #>    label     var                                          var_abbrev   pct count #>    <chr>     <chr>                                        <chr>      <dbl> <dbl> #>  1 SEQC-II_T Uniformity of coverage (PCT > 0.2*mean) oveâ€¦ uniformitâ€¦  96.1    NA #>  2 SEQC-II_T PCT of genome with coverage [100x: inf)      %genome [â€¦  22.3    NA #>  3 SEQC-II_T PCT of genome with coverage [ 50x: inf)      %genome [â€¦  89.5    NA #>  4 SEQC-II_T PCT of genome with coverage [ 20x: inf)      %genome [â€¦  96.0    NA #>  5 SEQC-II_T PCT of genome with coverage [ 15x: inf)      %genome [â€¦  96.2    NA #>  6 SEQC-II_T PCT of genome with coverage [ 10x: inf)      %genome [â€¦  96.5    NA #>  7 SEQC-II_T PCT of genome with coverage [  3x: inf)      %genome [â€¦  97.1    NA #>  8 SEQC-II_T PCT of genome with coverage [  1x: inf)      %genome [â€¦  97.5    NA #>  9 SEQC-II_T PCT of genome with coverage [  0x: inf)      %genome [â€¦ 100      NA #> 10 SEQC-II_T PCT of genome with coverage [ 50x:100x)      %genome [â€¦  67.3    NA #> # â€¦ with 17 more rows"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":null,"dir":"Reference","previous_headings":"","what":"File R6 Class â€” File","title":"File R6 Class â€” File","text":"File base R6 class representing TSV/CSV/JSON output DRAGEN workflow. File path, basename, type, default read method type.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"File R6 Class â€” File","text":"path Name full path file.","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"File R6 Class â€” File","text":"File$new() File$bname() File$type() File$print() File$read() File$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"File R6 Class â€” File","text":"Create new File object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class â€” File","text":"","code":"File$new(path = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class â€” File","text":"path Name full path file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-bname-","dir":"Reference","previous_headings":"","what":"Method bname()","title":"File R6 Class â€” File","text":"Basename file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class â€” File","text":"","code":"File$bname()"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"File R6 Class â€” File","text":"Basename file character vector.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-type-","dir":"Reference","previous_headings":"","what":"Method type()","title":"File R6 Class â€” File","text":"Get type file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class â€” File","text":"","code":"File$type()"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"File R6 Class â€” File","text":"String describing type file (CSV, TSV, JSON ).","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"File R6 Class â€” File","text":"Print details File.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class â€” File","text":"","code":"File$print(...)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class â€” File","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"File R6 Class â€” File","text":"Read file based type.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class â€” File","text":"","code":"File$read(...)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class â€” File","text":"... Arguments passed appropriate read_* function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"File R6 Class â€” File","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"File R6 Class â€” File","text":"","code":"File$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"File R6 Class â€” File","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/File.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File R6 Class â€” File","text":"","code":"F1 <- File$new(readr::readr_example(\"mtcars.csv\")) F1$read(col_types = readr::cols(\"double\")) #> # A tibble: 32 Ã— 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # â€¦ with 22 more rows F1$bname() #> [1] \"mtcars.csv\""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"FineHistFile R6 Class â€” FineHistFile","title":"FineHistFile R6 Class â€” FineHistFile","text":"Contains methods reading displaying contents wgs_fine_hist_<phenotype>.csv file output DRAGEN. file contains two columns: Depth Overall. value Depth column ranges 0 1000+ Overall column indicates number loci covered corresponding depth.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FineHistFile R6 Class â€” FineHistFile","text":"dracarys::File -> FineHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FineHistFile R6 Class â€” FineHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FineHistFile R6 Class â€” FineHistFile","text":"FineHistFile$read() FineHistFile$plot() FineHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"FineHistFile R6 Class â€” FineHistFile","text":"Reads wgs_fine_hist_<phenotype>.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FineHistFile R6 Class â€” FineHistFile","text":"","code":"FineHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FineHistFile R6 Class â€” FineHistFile","text":"tibble three columns: label depth number loci given depth","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"FineHistFile R6 Class â€” FineHistFile","text":"Plots wgs_fine_hist_<phenotype>.csv files.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FineHistFile R6 Class â€” FineHistFile","text":"","code":"FineHistFile$plot(x_lim = c(0, 300))"},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FineHistFile R6 Class â€” FineHistFile","text":"x_lim X axis range plot.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FineHistFile R6 Class â€” FineHistFile","text":"ggplot2 object depth coverage X axis, number loci depth Y axis.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FineHistFile R6 Class â€” FineHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FineHistFile R6 Class â€” FineHistFile","text":"","code":"FineHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FineHistFile R6 Class â€” FineHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FineHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FineHistFile R6 Class â€” FineHistFile","text":"","code":"x1 <- system.file(\"extdata/wgs/SEQC-II.wgs_fine_hist_normal.csv.gz\", package = \"dracarys\") x2 <- system.file(\"extdata/wgs/SEQC-II.wgs_fine_hist_tumor.csv.gz\", package = \"dracarys\") ch1 <- FineHistFile$new(x1) ch2 <- FineHistFile$new(x2) read(ch1) #> # A tibble: 2,001 Ã— 3 #>    label     depth   n_loci #>    <chr>     <int>    <dbl> #>  1 SEQC-II_N     0 84762208 #>  2 SEQC-II_N     1  9324435 #>  3 SEQC-II_N     2  5702790 #>  4 SEQC-II_N     3  4424768 #>  5 SEQC-II_N     4  3833201 #>  6 SEQC-II_N     5  3570619 #>  7 SEQC-II_N     6  3534313 #>  8 SEQC-II_N     7  3609742 #>  9 SEQC-II_N     8  3788680 #> 10 SEQC-II_N     9  4050997 #> # â€¦ with 1,991 more rows read(ch2) #> # A tibble: 2,001 Ã— 3 #>    label     depth   n_loci #>    <chr>     <int>    <dbl> #>  1 SEQC-II_T     0 75987894 #>  2 SEQC-II_T     1  8548864 #>  3 SEQC-II_T     2  4914437 #>  4 SEQC-II_T     3  3591147 #>  5 SEQC-II_T     4  2939892 #>  6 SEQC-II_T     5  2521559 #>  7 SEQC-II_T     6  2228452 #>  8 SEQC-II_T     7  2023887 #>  9 SEQC-II_T     8  1885489 #> 10 SEQC-II_T     9  1779691 #> # â€¦ with 1,991 more rows plot(ch1)  plot(ch2)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":null,"dir":"Reference","previous_headings":"","what":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"Contains methods reading plotting contents fragment_length_hist.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"dracarys::File -> FragmentLengthHistFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"FragmentLengthHistFile$read() FragmentLengthHistFile$plot() FragmentLengthHistFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"Reads fragment_length_hist.csv file, contains fragment length distribution sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"tibble following columns: fragmentLength: estimated fragment length count: number reads estimated fragment length sample: name sample","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"Plots fragment length distributions given fragment_length_hist.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$plot(min_count = 10)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"min_count Minimum read count plotted (Default: 10).","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"ggplot2 plot containing fragment lengths X axis read counts Y axis sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"","code":"FragmentLengthHistFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/FragmentLengthHistFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FragmentLengthHistFile R6 Class â€” FragmentLengthHistFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.fragment_length_hist.csv.gz\", package = \"dracarys\") fl <- FragmentLengthHistFile$new(x) fl$read() # or read(fl) #> # A tibble: 77,058 Ã— 3 #>    fragmentLength count sample         #>             <int> <int> <chr>          #>  1             35     1 SEQC-II_normal #>  2             36     1 SEQC-II_normal #>  3             37     0 SEQC-II_normal #>  4             38     0 SEQC-II_normal #>  5             39     0 SEQC-II_normal #>  6             40     0 SEQC-II_normal #>  7             41     1 SEQC-II_normal #>  8             42     0 SEQC-II_normal #>  9             43     0 SEQC-II_normal #> 10             44     0 SEQC-II_normal #> # â€¦ with 77,048 more rows fl$plot() # or plot(fl)"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"MappingMetricsFile R6 Class â€” MappingMetricsFile","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"Contains methods reading displaying contents mapping_metrics.csv file output DRAGEN. file contains mapping aligning metrics, like metrics computed Samtools Flagstat command. metrics available aggregate level (input data), per read group level. Unless explicitly stated, metrics units reads (.e., terms pairs alignments).","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"dracarys::File -> MappingMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"MappingMetricsFile$read() MappingMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"Reads mapping_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"","code":"MappingMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"tibble following columns: - category: summary read group - Phenotype: e.g. tumor, normal - RG: read group - var: metric variable - var_abbrev: metric variable abbreviation - count: count reads - pct: percentage reads","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"","code":"MappingMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/MappingMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MappingMetricsFile R6 Class â€” MappingMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.mapping_metrics.csv.gz\", package = \"dracarys\") mm <- MappingMetricsFile$new(x) mm$read() # or read(mm) #> # A tibble: 218 Ã— 7 #>    category Phenotype RG    var                         var_abbrev   count   pct #>    <chr>    <chr>     <chr> <chr>                       <chr>        <dbl> <dbl> #>  1 summary  tumor     TOTAL Total Reads per RG          Tot         2.2 e9 100   #>  2 summary  tumor     TOTAL Number of duplicate markedâ€¦ Dup         4.43e8  20.2 #>  3 summary  tumor     TOTAL Number of duplicate markedâ€¦ Dup Rem    NA       NA   #>  4 summary  tumor     TOTAL Number of unique reads (exâ€¦ Unique      1.76e9  79.8 #>  5 summary  tumor     TOTAL Reads with mate sequenced   Mated       2.2 e9 100   #>  6 summary  tumor     TOTAL Reads without mate sequencâ€¦ noMated     0        0   #>  7 summary  tumor     TOTAL QC-failed reads             Failed      0        0   #>  8 summary  tumor     TOTAL Mapped reads                Mapped      2.20e9  99.8 #>  9 summary  tumor     TOTAL Mapped reads adjusted for â€¦ Mapped reâ€¦  2.20e9  99.8 #> 10 summary  tumor     TOTAL Mapped reads R1             R1map       1.10e9 100.  #> # â€¦ with 208 more rows"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"Contains methods reading contents ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"dracarys::File -> PloidyEstimationMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"PloidyEstimationMetricsFile$read() PloidyEstimationMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"Reads ploidy_estimation_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"tibble following columns: - label: sample label (inferred file name) - var: variable interest (e.g. X median coverage) - value: value specific variable (e.g. X median coverage variable value  50)","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"","code":"PloidyEstimationMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/PloidyEstimationMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PloidyEstimationMetricsFile R6 Class â€” PloidyEstimationMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.ploidy_estimation_metrics.csv.gz\", package = \"dracarys\") pem <- PloidyEstimationMetricsFile$new(x) pem$read() # or read(pem) #> # A tibble: 28 Ã— 3 #>    label   var                         value #>    <chr>   <chr>                       <chr> #>  1 SEQC-II Autosomal median coverage   56.31 #>  2 SEQC-II X median coverage           27.87 #>  3 SEQC-II Y median coverage           0.00  #>  4 SEQC-II 1 median / Autosomal median 1.01  #>  5 SEQC-II 2 median / Autosomal median 1.01  #>  6 SEQC-II 3 median / Autosomal median 1.02  #>  7 SEQC-II 4 median / Autosomal median 1.01  #>  8 SEQC-II 5 median / Autosomal median 1.01  #>  9 SEQC-II 6 median / Autosomal median 0.92  #> 10 SEQC-II 7 median / Autosomal median 1.00  #> # â€¦ with 18 more rows"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":null,"dir":"Reference","previous_headings":"","what":"ReplayFile R6 Class â€” ReplayFile","title":"ReplayFile R6 Class â€” ReplayFile","text":"Contains methods reading contents replay.json file output DRAGEN, contains DRAGEN command line, parameters version specific run.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ReplayFile R6 Class â€” ReplayFile","text":"dracarys::File -> ReplayFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ReplayFile R6 Class â€” ReplayFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ReplayFile R6 Class â€” ReplayFile","text":"ReplayFile$read() ReplayFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"ReplayFile R6 Class â€” ReplayFile","text":"Reads replay.json file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class â€” ReplayFile","text":"","code":"ReplayFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ReplayFile R6 Class â€” ReplayFile","text":"list following elements: command_line: character DRAGEN command line used. dragen_config: tibble parameters used DRAGEN run. system: tibble dragen_version, nodename, kernel_release. label: character sample label (inferred file name) hash_table_build: tibble details DRAGEN hash table build.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ReplayFile R6 Class â€” ReplayFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ReplayFile R6 Class â€” ReplayFile","text":"","code":"ReplayFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReplayFile R6 Class â€” ReplayFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/ReplayFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ReplayFile R6 Class â€” ReplayFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II-replay.json.gz\", package = \"dracarys\") r <- ReplayFile$new(x) r$read() # or read(r) #> $command_line #> [1] \"/opt/edico/bin/dragen --enable-variant-caller true --intermediate-results-dir /ephemeral/intermediate-results/ --cnv-use-somatic-vc-baf true --enable-cnv true --enable-duplicate-marking true --enable-map-align-output true --enable-sv true --fastq-list /ZnDLLh/fastq_list.csv --lic-instance-id-location /opt/instance-identity --output-directory SEQC-II_dragen_somatic --output-file-prefix SEQC-II --ref-dir /ephemeral/ref/hg38-v8-altaware-cnv-anchored/ --tumor-fastq-list /ZnDLLh/tumor_fastq_list.csv\" #>  #> $hash_table_build #> # A tibble: 3 Ã— 2 #>   name                 value                                                     #>   <chr>                <chr>                                                     #> 1 sw_version           01.003.044.3.5.3-38-gefdaeaff                             #> 2 hash_table_version   8                                                         #> 3 command_line_options /opt/edico/bin/dragen --lic-instance-id-location /root/.â€¦ #>  #> $dragen_config #> # A tibble: 470 Ã— 2 #>    name                    value #>    <chr>                   <chr> #>  1 Aligner.align-direction 4     #>  2 Aligner.aln-en-mask     15    #>  3 Aligner.aln-enable      1     #>  4 Aligner.backtrace-delay 8     #>  5 Aligner.bed-score-bonus 0     #>  6 Aligner.chicken         0     #>  7 Aligner.dedup-min-qual  15    #>  8 Aligner.disable-lfsr    0     #>  9 Aligner.en-alt-hap-aln  1     #> 10 Aligner.en-chimeric-aln 1     #> # â€¦ with 460 more rows #>  #> $system #> # A tibble: 3 Ã— 2 #>   name           value                                      #>   <chr>          <chr>                                      #> 1 dragen_version 05.021.609.3.9.3                           #> 2 nodename       trn.6f62637e545a418f8dfe9ce587e571d7-gt4mv #> 3 kernel_release 5.4.141-67.229.amzn2.x86_64                #>  #> $label #> [1] \"SEQC-II\" #>"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TimeMetricsFile R6 Class â€” TimeMetricsFile","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"Contains methods reading contents time_metrics.csv file output DRAGEN, contains breakdown run duration DRAGEN process.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"dracarys::File -> TimeMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"TimeMetricsFile$read() TimeMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"Reads time_metrics.csv file.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"","code":"TimeMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"tibble following columns: Step: DRAGEN step Time: time HH:MM","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"","code":"TimeMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TimeMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TimeMetricsFile R6 Class â€” TimeMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.time_metrics.csv.gz\", package = \"dracarys\") tm <- TimeMetricsFile$new(x) tm$read() # or read(tm) #> # A tibble: 19 Ã— 3 #>    Label   Step                           Time  #>    <chr>   <chr>                          <chr> #>  1 SEQC-II Loading Reference              00:01 #>  2 SEQC-II Aligning Reads                 00:35 #>  3 SEQC-II Duplicate Marking              00:01 #>  4 SEQC-II Sorting and Marking Duplicates 01:31 #>  5 SEQC-II DRAGStr Calibration            00:00 #>  6 SEQC-II Saving Map/Align Output        01:31 #>  7 SEQC-II Partial Reconfiguration        00:00 #>  8 SEQC-II Variant Calling                01:31 #>  9 SEQC-II Calculating Target Counts      00:36 #> 10 SEQC-II Correcting GC Bias             00:00 #> 11 SEQC-II Normalizing Case Sample        00:00 #> 12 SEQC-II Performing Segmentation        00:00 #> 13 SEQC-II Generating Somatic Model Input 00:17 #> 14 SEQC-II Fitting Somatic Model          00:00 #> 15 SEQC-II Generating CNV Calls           00:00 #> 16 SEQC-II Generating CNV Track Files     00:00 #> 17 SEQC-II Partitioning                   00:35 #> 18 SEQC-II Structural Variant Calling     01:38 #> 19 SEQC-II Total Runtime                  04:10"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoMsiFile R6 Class â€” TsoMsiFile","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"Contains methods reading displaying contents msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"dracarys::File -> TsoMsiFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"TsoMsiFile$read() TsoMsiFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"Reads msi.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"","code":"TsoMsiFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"tibble following columns: label:","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"","code":"TsoMsiFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoMsiFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoMsiFile R6 Class â€” TsoMsiFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.msi.json.gz\", package = \"dracarys\") msi <- TsoMsiFile$new(x) msi$read() # or read(msi) #> # A tibble: 1 Ã— 6 #>   TotalMicrosatelâ€¦ TotalMicrosatelâ€¦ PercentageUnstaâ€¦ ResultMessage ResultIsValid #>              <int>            <int>            <dbl> <chr>         <chr>         #> 1             2140               47              2.2 NA            TRUE          #> # â€¦ with 1 more variable: SumJsd <dbl>"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"Contains methods reading displaying contents SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"dracarys::File -> TsoSampleAnalysisResultsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"TsoSampleAnalysisResultsFile$read() TsoSampleAnalysisResultsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"Reads SampleAnalysisResults.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"tibble following columns: - TOTAL_PF_READS - MEAN_FAMILY_SIZE - MEDIAN_TARGET_COVERAGE - PCT_CHIMERIC_READS - PCT_EXON_500X - PCT_EXON_1500X - PCT_READ_ENRICHMENT - PCT_USABLE_UMI_READS - MEAN_TARGET_COVERAGE - PCT_ALIGNED_READS - PCT_CONTAMINATION_EST - PCT_TARGET_0.4X_MEAN - PCT_TARGET_500X - PCT_TARGET_1000X - PCT_TARGET_1500X - PCT_DUPLEXFAMILIES - MEDIAN_INSERT_SIZE - MAX_SOMATIC_AF","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"","code":"TsoSampleAnalysisResultsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoSampleAnalysisResultsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoSampleAnalysisResultsFile R6 Class â€” TsoSampleAnalysisResultsFile","text":"","code":"x <- system.file(\"extdata/tso/sample705_SampleAnalysisResults.json.gz\", package = \"dracarys\") res <- TsoSampleAnalysisResultsFile$new(x) res$read() # or read(res) #> # A tibble: 1 Ã— 18 #>   TOTAL_PF_READS MEAN_FAMILY_SIZE MEDIAN_TARGET_COVERAGE PCT_CHIMERIC_READS #>            <dbl>            <dbl>                  <dbl>              <dbl> #> 1     1063188966              4.1                   5845               0.06 #> # â€¦ with 14 more variables: PCT_EXON_500X <dbl>, PCT_EXON_1500X <dbl>, #> #   PCT_READ_ENRICHMENT <dbl>, PCT_USABLE_UMI_READS <dbl>, #> #   MEAN_TARGET_COVERAGE <dbl>, PCT_ALIGNED_READS <dbl>, #> #   PCT_CONTAMINATION_EST <dbl>, PCT_TARGET_0.4X_MEAN <dbl>, #> #   PCT_TARGET_500X <dbl>, PCT_TARGET_1000X <dbl>, PCT_TARGET_1500X <dbl>, #> #   PCT_DUPLEXFAMILIES <dbl>, MEDIAN_INSERT_SIZE <dbl>, MAX_SOMATIC_AF <dbl>"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":null,"dir":"Reference","previous_headings":"","what":"TsoTmbFile R6 Class â€” TsoTmbFile","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"Contains methods reading displaying contents tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"dracarys::File -> TsoTmbFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"TsoTmbFile$read() TsoTmbFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"Reads tmb.json.gz file output TSO.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"","code":"TsoTmbFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"tibble following columns: TmbPerMb AdjustedTmbPerMb NonsynonymousTmbPerMb AdjustedNonsynonymousTmbPerMb SomaticCodingVariantsCount NonsynonymousSomaticCodingVariantsCount TotalRegionSizeMb CodingRegionSizeMb","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"","code":"TsoTmbFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/TsoTmbFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TsoTmbFile R6 Class â€” TsoTmbFile","text":"","code":"x <- system.file(\"extdata/tso/sample705.tmb.json.gz\", package = \"dracarys\") tmb <- TsoTmbFile$new(x) tmb$read() # or read(tmb) #> # A tibble: 1 Ã— 8 #>   TmbPerMb AdjustedTmbPerMb NonsynonymousTmbPâ€¦ AdjustedNonsynoâ€¦ SomaticCodingVaâ€¦ #>      <dbl>            <dbl>              <dbl>            <dbl>            <dbl> #> 1     144.             144.               114.             114.              176 #> # â€¦ with 3 more variables: NonsynonymousSomaticCodingVariantsCount <dbl>, #> #   TotalRegionSizeMb <dbl>, CodingRegionSizeMb <dbl>"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"VCMetricsFile R6 Class â€” VCMetricsFile","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"Contains methods reading displaying contents vc_metrics.csv file output DRAGEN, contains variant calling metrics. reported sample multi sample VCF gVCF files. Based run case, metrics reported either standard VARIANT CALLER JOINT CALLER. Metrics reported raw (PREFILTER) hard filtered (POSTFILTER) VCFs. PON (Panel Normals) COSMIC filtered variants counted though PASS variants POSTFILTER VCFs metrics, may result higher expected variant counts POSTFILTER VCF metrics.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"dracarys::File -> VCMetricsFile","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"dracarys::File$bname() dracarys::File$initialize() dracarys::File$print() dracarys::File$type()","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"VCMetricsFile$read() VCMetricsFile$clone()","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"Reads vc_metrics.csv file output DRAGEN.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"","code":"VCMetricsFile$read()"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"tibble following columns: category sample var: variable name count: count value pct: percent value","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"","code":"VCMetricsFile$clone(deep = FALSE)"},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/dracarys/reference/VCMetricsFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VCMetricsFile R6 Class â€” VCMetricsFile","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.vc_metrics.csv.gz\", package = \"dracarys\") vm <- VCMetricsFile$new(x) vm$read() # or read(vm) #> # A tibble: 45 Ã— 5 #>    category  sample           var                    count    pct #>    <chr>     <chr>            <chr>                  <dbl>  <dbl> #>  1 summary   \"\"               Number of samples          1  NA    #>  2 summary   \"\"               Reads Processed   2617162106  NA    #>  3 summary   \"\"               Child Sample              NA  NA    #>  4 prefilter \"SEQC-II_tumour\" Total                 177975 100    #>  5 prefilter \"SEQC-II_tumour\" Biallelic             177975 100    #>  6 prefilter \"SEQC-II_tumour\" Multiallelic               0   0    #>  7 prefilter \"SEQC-II_tumour\" SNPs                  143829  80.8  #>  8 prefilter \"SEQC-II_tumour\" Insertions (Hom)           0   0    #>  9 prefilter \"SEQC-II_tumour\" Insertions (Het)       16354   9.19 #> 10 prefilter \"SEQC-II_tumour\" Deletions (Hom)            0   0    #> # â€¦ with 35 more rows"},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Print current timestamp for logging â€” date_log","title":"Print current timestamp for logging â€” date_log","text":"Print current timestamp logging","code":""},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print current timestamp for logging â€” date_log","text":"","code":"date_log()"},{"path":"https://umccr.github.io/dracarys/reference/date_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print current timestamp for logging â€” date_log","text":"Current timestamp character.","code":""},{"path":"https://umccr.github.io/dracarys/reference/dracarys-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dracarys: Post-processing DRAGEN workflows â€” dracarys-package","title":"dracarys: Post-processing DRAGEN workflows â€” dracarys-package","text":"Post-processing DRAGEN workflows.","code":""},{"path":[]},{"path":"https://umccr.github.io/dracarys/reference/dracarys-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dracarys: Post-processing DRAGEN workflows â€” dracarys-package","text":"Maintainer: Peter Diakumis peterdiakumis@gmail.com (ORCID)","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Match File to Regex â€” match_regex","title":"Match File to Regex â€” match_regex","text":"Matches given file regexes found FILE_REGEX match, returns 'name' match.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match File to Regex â€” match_regex","text":"","code":"match_regex(x)"},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match File to Regex â€” match_regex","text":"x File match.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match File to Regex â€” match_regex","text":"'name' matching regex FILE_REGEX, NA match made.","code":""},{"path":"https://umccr.github.io/dracarys/reference/match_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match File to Regex â€” match_regex","text":"","code":"match_regex(\"foo.msi.json.gz\") #> [1] \"tso/msi\" match_regex(\"foo.fake.tsv\") #> [1] NA"},{"path":"https://umccr.github.io/dracarys/reference/mkdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create directory â€” mkdir","title":"Create directory â€” mkdir","text":"Create directory","code":""},{"path":"https://umccr.github.io/dracarys/reference/mkdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create directory â€” mkdir","text":"","code":"mkdir(d)"},{"path":"https://umccr.github.io/dracarys/reference/mkdir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create directory â€” mkdir","text":"d Directory create.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MultiQC 'report_general_stats_data' JSON Element â€” multiqc_parse_gen","title":"Parse MultiQC 'report_general_stats_data' JSON Element â€” multiqc_parse_gen","text":"Parses MultiQC 'report_general_stats_data' JSON Element. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MultiQC 'report_general_stats_data' JSON Element â€” multiqc_parse_gen","text":"","code":"multiqc_parse_gen(p)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MultiQC 'report_general_stats_data' JSON Element â€” multiqc_parse_gen","text":"p Parsed MultiQC JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MultiQC 'report_general_stats_data' JSON Element â€” multiqc_parse_gen","text":"list.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse MultiQC 'report_saved_raw_data' JSON Element â€” multiqc_parse_raw","title":"Parse MultiQC 'report_saved_raw_data' JSON Element â€” multiqc_parse_raw","text":"Parses MultiQC 'report_saved_raw_data' JSON Element. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse MultiQC 'report_saved_raw_data' JSON Element â€” multiqc_parse_raw","text":"","code":"multiqc_parse_raw(p, tools2delete = NULL)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse MultiQC 'report_saved_raw_data' JSON Element â€” multiqc_parse_raw","text":"p Parsed MultiQC JSON. tools2delete Character vector tools delete parsed JSON.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_parse_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse MultiQC 'report_saved_raw_data' JSON Element â€” multiqc_parse_raw","text":"list.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy MultiQC JSON â€” multiqc_tidy_json","title":"Tidy MultiQC JSON â€” multiqc_tidy_json","text":"Tidies 'multiqc_data.json' output MultiQC. Modified awesome https://github.com/multimeric/TidyMultiqc.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy MultiQC JSON â€” multiqc_tidy_json","text":"","code":"multiqc_tidy_json(j)"},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy MultiQC JSON â€” multiqc_tidy_json","text":"j Path multiqc_data.json.","code":""},{"path":"https://umccr.github.io/dracarys/reference/multiqc_tidy_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy MultiQC JSON â€” multiqc_tidy_json","text":"tidy tibble column corresponds single metric, row corresponds single sample.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":null,"dir":"Reference","previous_headings":"","what":"Read File object â€” read.File","title":"Read File object â€” read.File","text":"Read file based type.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read File object â€” read.File","text":"","code":"# S3 method for File read(x, ...)"},{"path":"https://umccr.github.io/dracarys/reference/read.File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read File object â€” read.File","text":"x Object class File. ... Arguments passed appropriate read_* function.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Reading â€” read","title":"Generic Reading â€” read","text":"Generic function reading dracarys objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Reading â€” read","text":"","code":"read(x, ...)"},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Reading â€” read","text":"x Object respective class. ... Additional arguments.","code":""},{"path":"https://umccr.github.io/dracarys/reference/read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Reading â€” read","text":"Possibly tibble list, depending object.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Multiple TimeMetricsFile Objects â€” time_metrics_process","title":"Process Multiple TimeMetricsFile Objects â€” time_metrics_process","text":"Processes multiple TimeMetricsFile objects.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Multiple TimeMetricsFile Objects â€” time_metrics_process","text":"","code":"time_metrics_process(x, id = seq_len(length(x)))"},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Multiple TimeMetricsFile Objects â€” time_metrics_process","text":"x Atomic vector one TimeMetricsFile objects. id ID input, used disambiguate files generated samples. Default: index 1 length x.","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Multiple TimeMetricsFile Objects â€” time_metrics_process","text":"tibble following columns: Step: DRAGEN step Time: time HH:MM","code":""},{"path":"https://umccr.github.io/dracarys/reference/time_metrics_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Multiple TimeMetricsFile Objects â€” time_metrics_process","text":"","code":"x <- system.file(\"extdata/wgs/SEQC-II.time_metrics.csv.gz\", package = \"dracarys\") x <- TimeMetricsFile$new(x) (tm <- time_metrics_process(c(x, x), id = c(\"run1\", \"run2\"))) #> # A tibble: 2 Ã— 21 #>   ID    Label `Total Runtime` `Loading Referâ€¦` `Aligning Reads` `Duplicate Marâ€¦` #>   <chr> <chr> <chr>           <chr>            <chr>            <chr>            #> 1 run1  SEQCâ€¦ 04:10           00:01            00:35            00:01            #> 2 run2  SEQCâ€¦ 04:10           00:01            00:35            00:01            #> # â€¦ with 15 more variables: `Sorting and Marking Duplicates` <chr>, #> #   `DRAGStr Calibration` <chr>, `Saving Map/Align Output` <chr>, #> #   `Partial Reconfiguration` <chr>, `Variant Calling` <chr>, #> #   `Calculating Target Counts` <chr>, `Correcting GC Bias` <chr>, #> #   `Normalizing Case Sample` <chr>, `Performing Segmentation` <chr>, #> #   `Generating Somatic Model Input` <chr>, `Fitting Somatic Model` <chr>, #> #   `Generating CNV Calls` <chr>, `Generating CNV Track Files` <chr>, â€¦"},{"path":"https://umccr.github.io/dracarys/news/index.html","id":"dracarys-010-2022-07-11","dir":"Changelog","previous_headings":"","what":"dracarys 0.1.0 (2022-07-11)","title":"dracarys 0.1.0 (2022-07-11)","text":"Support MultiQC JSON tidying Initially supporting just MultiQC json input","code":""}]
