% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiqc.R
\name{MultiqcFile}
\alias{MultiqcFile}
\title{MultiqcFile R6 Class}
\description{
Contains methods for reading and displaying contents of the
\code{multiqc_data.json} file output from MultiQC.
}
\examples{
x <- "/path/to/multiqc_data.json"
mqc <- MultiqcFile$new(x)
mqc_parsed <- mqc$read() # or read(mqc)
mqc$write(mqc_parsed, out_dir = tempdir(), prefix = "sample705", out_format = "both")
}
\section{Super class}{
\code{\link[dracarys:File]{dracarys::File}} -> \code{MultiqcFile}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MultiqcFile-read}{\code{MultiqcFile$read()}}
\item \href{#method-MultiqcFile-write}{\code{MultiqcFile$write()}}
\item \href{#method-MultiqcFile-clone}{\code{MultiqcFile$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="dracarys" data-topic="File" data-id="bname"><a href='../../dracarys/html/File.html#method-File-bname'><code>dracarys::File$bname()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dracarys" data-topic="File" data-id="initialize"><a href='../../dracarys/html/File.html#method-File-initialize'><code>dracarys::File$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dracarys" data-topic="File" data-id="print"><a href='../../dracarys/html/File.html#method-File-print'><code>dracarys::File$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dracarys" data-topic="File" data-id="type"><a href='../../dracarys/html/File.html#method-File-type'><code>dracarys::File$type()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultiqcFile-read"></a>}}
\if{latex}{\out{\hypertarget{method-MultiqcFile-read}{}}}
\subsection{Method \code{read()}}{
Reads the \code{multiqc_data.json} file output from MultiQC.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultiqcFile$read()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A tidy tibble.
\itemize{
\item label:
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultiqcFile-write"></a>}}
\if{latex}{\out{\hypertarget{method-MultiqcFile-write}{}}}
\subsection{Method \code{write()}}{
Writes a tidy version of the \code{multiqc_data.json} file output from MultiQC.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultiqcFile$write(d, out_dir, prefix, out_format = "tsv")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{d}}{Parsed object from \code{self$read()}.}

\item{\code{out_dir}}{Output directory.}

\item{\code{prefix}}{Prefix of output file(s).}

\item{\code{out_format}}{Format of output file(s) (one of 'tsv' (def.),
'parquet', 'both').}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultiqcFile-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MultiqcFile-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultiqcFile$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
